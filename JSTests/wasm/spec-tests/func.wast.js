/* Lovingly generated by gen-spec-js.py based on the wonderful content of *
 * https://github.com/WebAssembly/spec/blob/master/interpreter/host/js.ml */
'use strict';

let soft_validate = true;

let spectest = {
  print: print || ((...xs) => console.log(...xs)),
  global: 666,
  table: new WebAssembly.Table({initial: 10, maximum: 20, element: 'anyfunc'}),
  memory: new WebAssembly.Memory({initial: 1, maximum: 2}),};

let registry = {spectest};
let $$;

function register(name, instance) {
  registry[name] = instance.exports;
}

function module(bytes) {
  let buffer = new ArrayBuffer(bytes.length);
  let view = new Uint8Array(buffer);
  for (let i = 0; i < bytes.length; ++i) {
    view[i] = bytes.charCodeAt(i);
  }
  return new WebAssembly.Module(buffer);
}

function instance(bytes, imports = registry) {
  return new WebAssembly.Instance(module(bytes), imports);
}

function assert_malformed(bytes) {
  try { module(bytes) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm decoding failure expected");
}

function assert_invalid(bytes) {
  try { module(bytes) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm validation failure expected");
}

function assert_soft_invalid(bytes) {
  try { module(bytes) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
    throw new Error("Wasm validation failure expected");
  }
  if (soft_validate)
    throw new Error("Wasm validation failure expected");
}

function assert_unlinkable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof TypeError) return;
  }
  throw new Error("Wasm linking failure expected");
}

function assert_uninstantiable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
  }
  throw new Error("Wasm trap expected");
}

function assert_trap(action) {
  try { action() } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
  }
  throw new Error("Wasm trap expected");
}

function assert_return(action, expected) {
  let actual = action();
  if (!Object.is(actual, expected)) {
    throw new Error("Wasm return value " + expected + " expected, got " + actual);
  };
}

function assert_return_nan(action) {
  let actual = action();
  if (!Number.isNaN(actual)) {
    throw new Error("Wasm return value NaN expected, got " + actual);
  };
}

let f32 = Math.fround;

$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x73\x13\x60\x00\x00\x60\x01\x7f\x00\x60\x03\x7f\x7c\x7e\x00\x60\x02\x7f\x7c\x00\x60\x05\x7f\x7d\x7e\x7f\x7c\x00\x60\x00\x01\x7f\x60\x04\x7f\x7d\x7e\x7f\x01\x7f\x60\x00\x01\x7e\x60\x00\x01\x7d\x60\x00\x01\x7c\x60\x02\x7f\x7f\x01\x7f\x60\x02\x7e\x7e\x01\x7e\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x60\x06\x7d\x7f\x7e\x7f\x7c\x7f\x01\x7c\x60\x01\x7f\x01\x7f\x60\x08\x7c\x7e\x7c\x7e\x7c\x7e\x7d\x7f\x00\x60\x00\x00\x60\x08\x7c\x7e\x7c\x7e\x7c\x7e\x7d\x7f\x00\x03\x5a\x59\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x02\x03\x04\x05\x00\x06\x00\x05\x07\x08\x09\x05\x07\x08\x09\x09\x0a\x0b\x0c\x0d\x0a\x0b\x0c\x0d\x0e\x00\x00\x05\x07\x08\x09\x00\x05\x00\x05\x07\x08\x09\x05\x00\x05\x07\x08\x09\x05\x01\x0f\x01\x0f\x01\x0f\x05\x07\x08\x09\x00\x10\x00\x10\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x05\x01\x70\x01\x05\x05\x07\x86\x08\x3f\x01\x66\x00\x02\x01\x67\x00\x04\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x69\x33\x32\x00\x17\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x69\x36\x34\x00\x18\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x66\x33\x32\x00\x19\x0f\x6c\x6f\x63\x61\x6c\x2d\x66\x69\x72\x73\x74\x2d\x66\x36\x34\x00\x1a\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x33\x32\x00\x1b\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x36\x34\x00\x1c\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x33\x32\x00\x1d\x10\x6c\x6f\x63\x61\x6c\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x36\x34\x00\x1e\x0b\x6c\x6f\x63\x61\x6c\x2d\x6d\x69\x78\x65\x64\x00\x1f\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x69\x33\x32\x00\x20\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x69\x36\x34\x00\x21\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x66\x33\x32\x00\x22\x0f\x70\x61\x72\x61\x6d\x2d\x66\x69\x72\x73\x74\x2d\x66\x36\x34\x00\x23\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x33\x32\x00\x24\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x69\x36\x34\x00\x25\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x33\x32\x00\x26\x10\x70\x61\x72\x61\x6d\x2d\x73\x65\x63\x6f\x6e\x64\x2d\x66\x36\x34\x00\x27\x0b\x70\x61\x72\x61\x6d\x2d\x6d\x69\x78\x65\x64\x00\x28\x05\x65\x6d\x70\x74\x79\x00\x29\x0a\x76\x61\x6c\x75\x65\x2d\x76\x6f\x69\x64\x00\x2a\x09\x76\x61\x6c\x75\x65\x2d\x69\x33\x32\x00\x2b\x09\x76\x61\x6c\x75\x65\x2d\x69\x36\x34\x00\x2c\x09\x76\x61\x6c\x75\x65\x2d\x66\x33\x32\x00\x2d\x09\x76\x61\x6c\x75\x65\x2d\x66\x36\x34\x00\x2e\x10\x76\x61\x6c\x75\x65\x2d\x62\x6c\x6f\x63\x6b\x2d\x76\x6f\x69\x64\x00\x2f\x0f\x76\x61\x6c\x75\x65\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x00\x30\x0c\x72\x65\x74\x75\x72\x6e\x2d\x65\x6d\x70\x74\x79\x00\x31\x0a\x72\x65\x74\x75\x72\x6e\x2d\x69\x33\x32\x00\x32\x0a\x72\x65\x74\x75\x72\x6e\x2d\x69\x36\x34\x00\x33\x0a\x72\x65\x74\x75\x72\x6e\x2d\x66\x33\x32\x00\x34\x0a\x72\x65\x74\x75\x72\x6e\x2d\x66\x36\x34\x00\x35\x10\x72\x65\x74\x75\x72\x6e\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x00\x36\x0b\x62\x72\x65\x61\x6b\x2d\x65\x6d\x70\x74\x79\x00\x37\x09\x62\x72\x65\x61\x6b\x2d\x69\x33\x32\x00\x38\x09\x62\x72\x65\x61\x6b\x2d\x69\x36\x34\x00\x39\x09\x62\x72\x65\x61\x6b\x2d\x66\x33\x32\x00\x3a\x09\x62\x72\x65\x61\x6b\x2d\x66\x36\x34\x00\x3b\x0f\x62\x72\x65\x61\x6b\x2d\x62\x6c\x6f\x63\x6b\x2d\x69\x33\x32\x00\x3c\x11\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x69\x66\x2d\x65\x6d\x70\x74\x79\x00\x3d\x0f\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x69\x66\x2d\x6e\x75\x6d\x00\x3e\x14\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x65\x6d\x70\x74\x79\x00\x3f\x12\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x75\x6d\x00\x40\x1b\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x65\x73\x74\x65\x64\x2d\x65\x6d\x70\x74\x79\x00\x41\x19\x62\x72\x65\x61\x6b\x2d\x62\x72\x5f\x74\x61\x62\x6c\x65\x2d\x6e\x65\x73\x74\x65\x64\x2d\x6e\x75\x6d\x00\x42\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x69\x33\x32\x00\x43\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x69\x36\x34\x00\x44\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x66\x33\x32\x00\x45\x0e\x69\x6e\x69\x74\x2d\x6c\x6f\x63\x61\x6c\x2d\x66\x36\x34\x00\x46\x19\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x65\x78\x70\x6c\x69\x63\x69\x74\x2d\x72\x65\x75\x73\x65\x64\x00\x4c\x19\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x69\x6d\x70\x6c\x69\x63\x69\x74\x2d\x72\x65\x75\x73\x65\x64\x00\x4d\x1c\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x65\x78\x70\x6c\x69\x63\x69\x74\x2d\x64\x75\x70\x6c\x69\x63\x61\x74\x65\x00\x4e\x1c\x73\x69\x67\x6e\x61\x74\x75\x72\x65\x2d\x69\x6d\x70\x6c\x69\x63\x69\x74\x2d\x64\x75\x70\x6c\x69\x63\x61\x74\x65\x00\x4f\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x50\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x51\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x52\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x53\x08\x61\x73\x73\x65\x72\x74\x5f\x34\x00\x54\x08\x61\x73\x73\x65\x72\x74\x5f\x35\x00\x55\x08\x61\x73\x73\x65\x72\x74\x5f\x36\x00\x56\x08\x61\x73\x73\x65\x72\x74\x5f\x37\x00\x57\x08\x61\x73\x73\x65\x72\x74\x5f\x38\x00\x58\x09\x0b\x01\x00\x41\x00\x0b\x05\x4b\x49\x48\x4b\x47\x0a\xcc\x07\x59\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x04\x01\x01\x7f\x0b\x04\x01\x01\x7f\x0b\x08\x03\x01\x7f\x01\x7c\x01\x7e\x0b\x06\x02\x01\x7f\x01\x7c\x0b\x0c\x05\x01\x7f\x01\x7d\x01\x7e\x01\x7f\x01\x7c\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x03\x00\x00\x0b\x02\x00\x0b\x10\x06\x01\x7d\x01\x7f\x01\x7e\x01\x7f\x01\x7c\x01\x7f\x00\x00\x0b\x10\x06\x01\x7d\x01\x7f\x01\x7e\x01\x7f\x01\x7c\x01\x7f\x00\x00\x0b\x06\x01\x02\x7f\x20\x00\x0b\x06\x01\x02\x7e\x20\x00\x0b\x06\x01\x02\x7d\x20\x00\x0b\x06\x01\x02\x7c\x20\x00\x0b\x06\x01\x02\x7f\x20\x01\x0b\x06\x01\x02\x7e\x20\x01\x0b\x06\x01\x02\x7d\x20\x01\x0b\x06\x01\x02\x7c\x20\x01\x0b\x28\x06\x01\x7d\x01\x7f\x01\x7e\x01\x7f\x01\x7c\x01\x7f\x20\x00\x8c\x1a\x20\x01\x45\x1a\x20\x02\x50\x1a\x20\x03\x45\x1a\x20\x04\x9a\x1a\x20\x05\x45\x1a\x20\x04\x0b\x04\x00\x20\x00\x0b\x04\x00\x20\x00\x0b\x04\x00\x20\x00\x0b\x04\x00\x20\x00\x0b\x04\x00\x20\x01\x0b\x04\x00\x20\x01\x0b\x04\x00\x20\x01\x0b\x04\x00\x20\x01\x0b\x1c\x00\x20\x00\x8c\x1a\x20\x01\x45\x1a\x20\x02\x50\x1a\x20\x03\x45\x1a\x20\x04\x9a\x1a\x20\x05\x45\x1a\x20\x04\x0b\x02\x00\x0b\x04\x00\x10\x00\x0b\x05\x00\x41\xcd\x00\x0b\x05\x00\x42\xe1\x3c\x0b\x07\x00\x43\x66\x66\x9b\x42\x0b\x0b\x00\x44\xe1\x7a\x14\xae\x47\x71\x53\x40\x0b\x09\x00\x02\x40\x10\x00\x10\x00\x0b\x0b\x0a\x00\x02\x7f\x10\x00\x41\xcd\x00\x0b\x0b\x03\x00\x0f\x0b\x06\x00\x41\xce\x00\x0f\x0b\x06\x00\x42\xc6\x3d\x0f\x0b\x08\x00\x43\x66\x66\x9d\x42\x0f\x0b\x0c\x00\x44\x52\xb8\x1e\x85\xeb\xb1\x53\x40\x0f\x0b\x0b\x00\x02\x7f\x10\x00\x41\xcd\x00\x0b\x0f\x0b\x04\x00\x0c\x00\x0b\x07\x00\x41\xcf\x00\x0c\x00\x0b\x07\x00\x42\xab\x3e\x0c\x00\x0b\x09\x00\x43\xcd\xcc\x9f\x42\x0c\x00\x0b\x0d\x00\x44\xc3\xf5\x28\x5c\x8f\xf2\x53\x40\x0c\x00\x0b\x0c\x00\x02\x7f\x10\x00\x41\xcd\x00\x0b\x0c\x00\x0b\x06\x00\x20\x00\x0d\x00\x0b\x0b\x00\x41\x32\x20\x00\x0d\x00\x1a\x41\x33\x0b\x09\x00\x20\x00\x0e\x02\x00\x00\x00\x0b\x0c\x00\x41\x32\x20\x00\x0e\x01\x00\x00\x41\x33\x0b\x0c\x00\x02\x40\x20\x00\x0e\x02\x00\x01\x00\x0b\x0b\x13\x00\x02\x7f\x41\x32\x20\x00\x0e\x02\x00\x01\x00\x41\x33\x0b\x41\x02\x6a\x0b\x06\x01\x01\x7f\x20\x00\x0b\x06\x01\x01\x7e\x20\x00\x0b\x06\x01\x01\x7d\x20\x00\x0b\x06\x01\x01\x7c\x20\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x02\x00\x0b\x0c\x00\x41\x01\x11\x00\x00\x41\x04\x11\x00\x00\x0b\x89\x01\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x00\x11\x10\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x02\x11\x10\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x03\x11\x10\x00\x0b\x07\x00\x41\x01\x11\x11\x00\x0b\x2f\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x42\x00\x43\x00\x00\x00\x00\x41\x00\x41\x00\x11\x12\x00\x0b\x0f\x00\x02\x40\x10\x18\x42\x00\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x0f\x00\x02\x40\x10\x1c\x42\x00\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x13\x00\x02\x40\x42\x02\x42\x03\x10\x21\x42\x02\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x13\x00\x02\x40\x42\x02\x42\x03\x10\x25\x42\x03\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2e\x00\x02\x40\x43\x00\x00\x80\x3f\x41\x02\x42\x03\x41\x04\x44\x00\x00\x00\x00\x00\x00\x16\x40\x41\x06\x10\x28\xbd\x44\x00\x00\x00\x00\x00\x00\x16\x40\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x10\x00\x02\x40\x10\x2c\x42\xe1\x3c\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x10\x00\x02\x40\x10\x33\x42\xc6\x3d\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x10\x00\x02\x40\x10\x39\x42\xab\x3e\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x0f\x00\x02\x40\x10\x44\x42\x00\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["local-first-i32"](), 0);
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["local-first-f32"](), f32(0.0));
assert_return(() => $$.exports["local-first-f64"](), 0.0);
assert_return(() => $$.exports["local-second-i32"](), 0);
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["local-second-f32"](), f32(0.0));
assert_return(() => $$.exports["local-second-f64"](), 0.0);
assert_return(() => $$.exports["local-mixed"](), 0.0);
assert_return(() => $$.exports["param-first-i32"](2, 3), 2);
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["param-first-f32"](f32(2.0), f32(3.0)), f32(2.0));
assert_return(() => $$.exports["param-first-f64"](2.0, 3.0), 2.0);
assert_return(() => $$.exports["param-second-i32"](2, 3), 3);
assert_return(() => $$.exports["assert_3"]());
assert_return(() => $$.exports["param-second-f32"](f32(2.0), f32(3.0)), f32(3.0));
assert_return(() => $$.exports["param-second-f64"](2.0, 3.0), 3.0);
assert_return(() => $$.exports["assert_4"]());
assert_return(() => $$.exports["empty"]());
assert_return(() => $$.exports["value-void"]());
assert_return(() => $$.exports["value-i32"](), 77);
assert_return(() => $$.exports["assert_5"]());
assert_return(() => $$.exports["value-f32"](), f32(77.6999969482));
assert_return(() => $$.exports["value-f64"](), 77.77);
assert_return(() => $$.exports["value-block-void"]());
assert_return(() => $$.exports["value-block-i32"](), 77);
assert_return(() => $$.exports["return-empty"]());
assert_return(() => $$.exports["return-i32"](), 78);
assert_return(() => $$.exports["assert_6"]());
assert_return(() => $$.exports["return-f32"](), f32(78.6999969482));
assert_return(() => $$.exports["return-f64"](), 78.78);
assert_return(() => $$.exports["return-block-i32"](), 77);
assert_return(() => $$.exports["break-empty"]());
assert_return(() => $$.exports["break-i32"](), 79);
assert_return(() => $$.exports["assert_7"]());
assert_return(() => $$.exports["break-f32"](), f32(79.9000015259));
assert_return(() => $$.exports["break-f64"](), 79.79);
assert_return(() => $$.exports["break-block-i32"](), 77);
assert_return(() => $$.exports["break-br_if-empty"](0));
assert_return(() => $$.exports["break-br_if-empty"](2));
assert_return(() => $$.exports["break-br_if-num"](0), 51);
assert_return(() => $$.exports["break-br_if-num"](1), 50);
assert_return(() => $$.exports["break-br_table-empty"](0));
assert_return(() => $$.exports["break-br_table-empty"](1));
assert_return(() => $$.exports["break-br_table-empty"](5));
assert_return(() => $$.exports["break-br_table-empty"](-1));
assert_return(() => $$.exports["break-br_table-num"](0), 50);
assert_return(() => $$.exports["break-br_table-num"](1), 50);
assert_return(() => $$.exports["break-br_table-num"](10), 50);
assert_return(() => $$.exports["break-br_table-num"](-100), 50);
assert_return(() => $$.exports["break-br_table-nested-empty"](0));
assert_return(() => $$.exports["break-br_table-nested-empty"](1));
assert_return(() => $$.exports["break-br_table-nested-empty"](3));
assert_return(() => $$.exports["break-br_table-nested-empty"](-2));
assert_return(() => $$.exports["break-br_table-nested-num"](0), 52);
assert_return(() => $$.exports["break-br_table-nested-num"](1), 50);
assert_return(() => $$.exports["break-br_table-nested-num"](2), 52);
assert_return(() => $$.exports["break-br_table-nested-num"](-3), 52);
assert_return(() => $$.exports["init-local-i32"](), 0);
assert_return(() => $$.exports["assert_8"]());
assert_return(() => $$.exports["init-local-f32"](), f32(0.0));
assert_return(() => $$.exports["init-local-f64"](), 0.0);
assert_return(() => $$.exports["signature-explicit-reused"]());
assert_return(() => $$.exports["signature-implicit-reused"]());
assert_return(() => $$.exports["signature-explicit-duplicate"]());
assert_return(() => $$.exports["signature-implicit-duplicate"]());
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7e\x03\x02\x01\x00\x0a\x08\x01\x06\x01\x01\x7f\x20\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x04\x01\x60\x00\x00\x03\x02\x01\x00\x0a\x09\x01\x07\x01\x01\x7d\x20\x00\x45\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x04\x01\x60\x00\x00\x03\x02\x01\x00\x0a\x0b\x01\x09\x02\x01\x7c\x01\x7e\x20\x01\x9a\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x01\x7f\x01\x7e\x03\x02\x01\x00\x0a\x06\x01\x04\x00\x20\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x01\x7d\x00\x03\x02\x01\x00\x0a\x07\x01\x05\x00\x20\x00\x45\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x02\x7c\x7e\x00\x03\x02\x01\x00\x0a\x07\x01\x05\x00\x20\x01\x9a\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x00\x02\x7f\x7f\x03\x02\x01\x00\x0a\x05\x01\x03\x00\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x00\x02\x7f\x7f\x03\x02\x01\x00\x0a\x05\x01\x03\x00\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x04\x01\x02\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7e\x03\x02\x01\x00\x0a\x04\x01\x02\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7d\x03\x02\x01\x00\x0a\x04\x01\x02\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7c\x03\x02\x01\x00\x0a\x04\x01\x02\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x05\x01\x03\x00\x01\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x04\x01\x60\x00\x00\x03\x02\x01\x00\x0a\x06\x01\x04\x00\x41\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x09\x01\x07\x00\x43\x00\x00\x00\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x05\x01\x03\x00\x0f\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x06\x01\x04\x00\x01\x0f\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x07\x01\x05\x00\x42\x00\x0f\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x07\x01\x05\x00\x0f\x41\x01\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x08\x01\x06\x00\x01\x0f\x41\x01\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x09\x01\x07\x00\x42\x01\x0f\x41\x01\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x0a\x01\x08\x00\x42\x01\x0f\x41\x01\x0f\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x06\x01\x04\x00\x0c\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x0b\x01\x09\x00\x43\x00\x00\x00\x00\x0c\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x08\x01\x06\x00\x0c\x00\x41\x01\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x0a\x01\x08\x00\x42\x01\x0c\x00\x41\x01\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x0c\x01\x0a\x00\x42\x01\x0c\x00\x41\x01\x0c\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x0d\x01\x0b\x00\x02\x40\x0c\x01\x0b\x41\x01\x0c\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x0e\x01\x0c\x00\x02\x40\x01\x0c\x01\x0b\x41\x01\x0c\x00\x0b");
assert_invalid("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7f\x03\x02\x01\x00\x0a\x0f\x01\x0d\x00\x02\x40\x42\x01\x0c\x01\x0b\x41\x01\x0c\x00\x0b");
