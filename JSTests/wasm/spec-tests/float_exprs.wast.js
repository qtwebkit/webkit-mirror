/* Lovingly generated by gen-spec-js.py based on the wonderful content of *
 * https://github.com/WebAssembly/spec/blob/master/interpreter/host/js.ml */
'use strict';

let soft_validate = true;

let spectest = {
  print: print || ((...xs) => console.log(...xs)),
  global: 666,
  table: new WebAssembly.Table({initial: 10, maximum: 20, element: 'anyfunc'}),
  memory: new WebAssembly.Memory({initial: 1, maximum: 2}),};

let registry = {spectest};
let $$;

function register(name, instance) {
  registry[name] = instance.exports;
}

function module(bytes) {
  let buffer = new ArrayBuffer(bytes.length);
  let view = new Uint8Array(buffer);
  for (let i = 0; i < bytes.length; ++i) {
    view[i] = bytes.charCodeAt(i);
  }
  return new WebAssembly.Module(buffer);
}

function instance(bytes, imports = registry) {
  return new WebAssembly.Instance(module(bytes), imports);
}

function assert_malformed(bytes) {
  try { module(bytes) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm decoding failure expected");
}

function assert_invalid(bytes) {
  try { module(bytes) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
  }
  throw new Error("Wasm validation failure expected");
}

function assert_soft_invalid(bytes) {
  try { module(bytes) } catch (e) {
    if (e instanceof WebAssembly.CompileError) return;
    throw new Error("Wasm validation failure expected");
  }
  if (soft_validate)
    throw new Error("Wasm validation failure expected");
}

function assert_unlinkable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof TypeError) return;
  }
  throw new Error("Wasm linking failure expected");
}

function assert_uninstantiable(bytes) {
  let mod = module(bytes);
  try { new WebAssembly.Instance(mod, registry) } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
  }
  throw new Error("Wasm trap expected");
}

function assert_trap(action) {
  try { action() } catch (e) {
    if (e instanceof WebAssembly.RuntimeError) return;
  }
  throw new Error("Wasm trap expected");
}

function assert_return(action, expected) {
  let actual = action();
  if (!Object.is(actual, expected)) {
    throw new Error("Wasm return value " + expected + " expected, got " + actual);
  };
}

function assert_return_nan(action) {
  let actual = action();
  if (!Number.isNaN(actual)) {
    throw new Error("Wasm return value NaN expected, got " + actual);
  };
}

let f32 = Math.fround;

$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x08\x01\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x02\x01\x00\x07\x16\x01\x12\x66\x36\x34\x2e\x6e\x6f\x5f\x63\x6f\x6e\x74\x72\x61\x63\x74\x69\x6f\x6e\x00\x00\x0a\x0c\x01\x0a\x00\x20\x00\x20\x01\xa2\x20\x02\xa0\x0b");
assert_return(() => $$.exports["f64.no_contraction"](-1.5967133604096234e-31, 8.763352160827123e+199, 4.289657620489846e+160), -1.3992561434270632e+169);
assert_return(() => $$.exports["f64.no_contraction"](8341016642481988.0, 3.223424965918293e-97, 2.3310835741659086e-91), 2.6886641288847496e-81);
assert_return(() => $$.exports["f64.no_contraction"](-3.0119045290520013e-179, 5.269933643923675e+160, 6.654454781339856e-32), -1.5872537009936566e-18);
assert_return(() => $$.exports["f64.no_contraction"](3.1413936116780743e-21, -7.262766035707377e-31, 4.619684894228461e-66), -2.28152068276836e-51);
assert_return(() => $$.exports["f64.no_contraction"](-1.6080464217402378e-286, -3.82103410226833e+281, 1.0541980504151345e-16), 6.144400215510552e-05);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0f\x02\x60\x03\x7d\x7d\x7d\x01\x7d\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x1b\x02\x0a\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6d\x61\x00\x00\x0a\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6d\x61\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x94\x20\x02\x92\x0b\x0a\x00\x20\x00\x20\x01\xa2\x20\x02\xa0\x0b");
assert_return(() => $$.exports["f32.no_fma"](f32(3.51843041229e+37), f32(2.15843613205e-07), f32(2.59340643077e+32)), f32(2.66934960333e+32));
assert_return(() => $$.exports["f32.no_fma"](f32(7.1753243347e-09), f32(-1.22553396078e-15), f32(4.13164358366e-27)), f32(-8.78947242875e-24));
assert_return(() => $$.exports["f32.no_fma"](f32(2.31063437312e+11), f32(0.000207732620765), f32(1797.64208984)), f32(48001208.0));
assert_return(() => $$.exports["f32.no_fma"](f32(0.00455427030101), f32(-7265493.5), f32(-2.39642834663)), f32(-33091.4140625));
assert_return(() => $$.exports["f32.no_fma"](f32(9.88817261494e+37), f32(-8.57063118027e-22), f32(-21579143168.0)), f32(-8.47479081376e+16));
assert_return(() => $$.exports["f64.no_fma"](7.890842843751792e+167, 4.21502005211736e+129, -1.3366010811317447e+297), 1.9894050003203128e+297);
assert_return(() => $$.exports["f64.no_fma"](5.5868223480092855e+225, 7.397302005677334e-40, 3.656783417204092e+172), 4.1327412160292407e+186);
assert_return(() => $$.exports["f64.no_fma"](1.4260477822274587e-217, -3.108763203659986e+304, 3.4326923552377763e+71), -4.433244872049653e+87);
assert_return(() => $$.exports["f64.no_fma"](-8.09034701735478e-117, -2.487441785066745e+133, 4.948476513851081e+16), 2.5072743740509472e+17);
assert_return(() => $$.exports["f64.no_fma"](6723256985364377.0, 2.8545656669287946e+206, -5.593839470050757e+207), 1.9191978560360286e+222);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x45\x04\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x7a\x65\x72\x6f\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x7a\x65\x72\x6f\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x57\x04\x0a\x00\x20\x00\x43\x00\x00\x00\x00\x92\x0b\x0e\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\xa0\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["f32.no_fold_add_zero"](f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["f64.no_fold_add_zero"](-0.0), 0.0);
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x45\x04\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x7a\x65\x72\x6f\x5f\x73\x75\x62\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x7a\x65\x72\x6f\x5f\x73\x75\x62\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x57\x04\x0a\x00\x43\x00\x00\x00\x00\x20\x00\x93\x0b\x0e\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\xa1\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["f32.no_fold_zero_sub"](f32(0.0)), f32(0.0));
assert_return(() => $$.exports["f64.no_fold_zero_sub"](0.0), 0.0);
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x45\x04\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x75\x62\x5f\x7a\x65\x72\x6f\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x75\x62\x5f\x7a\x65\x72\x6f\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x57\x04\x0a\x00\x20\x00\x43\x00\x00\x00\x00\x93\x0b\x0e\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\xa1\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x45\x04\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x7a\x65\x72\x6f\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x7a\x65\x72\x6f\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x57\x04\x0a\x00\x20\x00\x43\x00\x00\x00\x00\x94\x0b\x0e\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\xa2\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["f32.no_fold_mul_zero"](f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_mul_zero"](f32(-1.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_mul_zero"](f32(-2.0)), f32(-0.0));
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["f64.no_fold_mul_zero"](-0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_mul_zero"](-1.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_mul_zero"](-2.0), -0.0);
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x43\x04\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x6f\x6e\x65\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x6f\x6e\x65\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x57\x04\x0a\x00\x20\x00\x43\x00\x00\x80\x3f\x94\x0b\x0e\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xa2\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x07\x06\x00\x01\x02\x02\x02\x02\x07\x5b\x06\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x7a\x65\x72\x6f\x5f\x64\x69\x76\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x7a\x65\x72\x6f\x5f\x64\x69\x76\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x04\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x05\x0a\x93\x01\x06\x0a\x00\x43\x00\x00\x00\x00\x20\x00\x95\x0b\x0e\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x20\x00\xa3\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\x7f\x10\x00\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return_nan(() => $$.exports["f32.no_fold_zero_div"](f32(0.0)));
assert_return_nan(() => $$.exports["f32.no_fold_zero_div"](f32(-0.0)));
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return_nan(() => $$.exports["f64.no_fold_zero_div"](0.0));
assert_return_nan(() => $$.exports["f64.no_fold_zero_div"](-0.0));
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x43\x04\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x6f\x6e\x65\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x6f\x6e\x65\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x57\x04\x0a\x00\x20\x00\x43\x00\x00\x80\x3f\x95\x0b\x0e\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xa3\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x45\x04\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x6e\x65\x67\x31\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x6e\x65\x67\x31\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x57\x04\x0a\x00\x20\x00\x43\x00\x00\x80\xbf\x95\x0b\x0e\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\xf0\xbf\xa3\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x45\x04\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6e\x65\x67\x30\x5f\x73\x75\x62\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6e\x65\x67\x30\x5f\x73\x75\x62\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x57\x04\x0a\x00\x43\x00\x00\x00\x80\x20\x00\x93\x0b\x0e\x00\x44\x00\x00\x00\x00\x00\x00\x00\x80\x20\x00\xa1\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x45\x04\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6e\x65\x67\x31\x5f\x6d\x75\x6c\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6e\x65\x67\x31\x5f\x6d\x75\x6c\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x57\x04\x0a\x00\x43\x00\x00\x80\xbf\x20\x00\x94\x0b\x0e\x00\x44\x00\x00\x00\x00\x00\x00\xf0\xbf\x20\x00\xa2\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7f\x60\x01\x7c\x01\x7f\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x43\x04\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x65\x71\x5f\x73\x65\x6c\x66\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x65\x71\x5f\x73\x65\x6c\x66\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x3f\x04\x07\x00\x20\x00\x20\x00\x5b\x0b\x07\x00\x20\x00\x20\x00\x61\x0b\x14\x00\x02\x40\x43\x00\x00\xc0\x7f\x10\x00\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x18\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x01\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7f\x60\x01\x7c\x01\x7f\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x43\x04\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6e\x65\x5f\x73\x65\x6c\x66\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6e\x65\x5f\x73\x65\x6c\x66\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x3f\x04\x07\x00\x20\x00\x20\x00\x5c\x0b\x07\x00\x20\x00\x20\x00\x62\x0b\x14\x00\x02\x40\x43\x00\x00\xc0\x7f\x10\x00\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x18\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x01\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x05\x04\x00\x01\x02\x02\x07\x45\x04\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x75\x62\x5f\x73\x65\x6c\x66\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x75\x62\x5f\x73\x65\x6c\x66\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x0a\x4d\x04\x07\x00\x20\x00\x20\x00\x93\x0b\x07\x00\x20\x00\x20\x00\xa1\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\x7f\x10\x00\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return_nan(() => $$.exports["f32.no_fold_sub_self"](Infinity));
assert_return(() => $$.exports["assert_0"]());
assert_return_nan(() => $$.exports["f64.no_fold_sub_self"](Infinity));
assert_return(() => $$.exports["assert_1"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x29\x02\x11\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x33\x00\x00\x11\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x33\x00\x01\x0a\x1b\x02\x0a\x00\x20\x00\x43\x00\x00\x40\x40\x95\x0b\x0e\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x08\x40\xa3\x0b");
assert_return(() => $$.exports["f32.no_fold_div_3"](f32(-1.36167898166e+15)), f32(-4.53892982702e+14));
assert_return(() => $$.exports["f32.no_fold_div_3"](f32(-1.87368803675e+28)), f32(-6.24562659239e+27));
assert_return(() => $$.exports["f32.no_fold_div_3"](f32(-1.20451307204e-25)), f32(-4.01504347074e-26));
assert_return(() => $$.exports["f32.no_fold_div_3"](f32(-5.28134593492e-38)), f32(-1.76044859826e-38));
assert_return(() => $$.exports["f32.no_fold_div_3"](f32(-2.54955626722e-17)), f32(-8.498520615e-18));
assert_return(() => $$.exports["f64.no_fold_div_3"](-2.9563579573969634e+190), -9.854526524656545e+189);
assert_return(() => $$.exports["f64.no_fold_div_3"](-9.291150921449772e-51), -3.097050307149924e-51);
assert_return(() => $$.exports["f64.no_fold_div_3"](1.3808061543557006e-263), 4.602687181185669e-264);
assert_return(() => $$.exports["f64.no_fold_div_3"](-1.378076163468349e+303), -4.593587211561163e+302);
assert_return(() => $$.exports["f64.no_fold_div_3"](8.632400808831366e+124), 2.877466936277122e+124);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0f\x02\x60\x03\x7d\x7d\x7d\x01\x7d\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x21\x02\x0d\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x61\x63\x74\x6f\x72\x00\x00\x0d\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x61\x63\x74\x6f\x72\x00\x01\x0a\x1d\x02\x0d\x00\x20\x00\x20\x02\x94\x20\x01\x20\x02\x94\x92\x0b\x0d\x00\x20\x00\x20\x02\xa2\x20\x01\x20\x02\xa2\xa0\x0b");
assert_return(() => $$.exports["f32.no_factor"](f32(-1.43511165338e+12), f32(-8.5361763654e+14), f32(1.11384932812e+18)), f32(-9.52399884674e+32));
assert_return(() => $$.exports["f32.no_factor"](f32(-0.0266666319221), f32(0.0484128221869), f32(-0.0028136970941)), f32(-6.11872019363e-05));
assert_return(() => $$.exports["f32.no_factor"](f32(-4.6619777266e-13), f32(1.04783769717e-19), f32(1.44692022693e+37)), f32(-6.74550795101e+24));
assert_return(() => $$.exports["f32.no_factor"](f32(-1.06890463028e-19), f32(1.06944332177e-25), f32(5.68307016526e+35)), f32(-6.07465399659e+16));
assert_return(() => $$.exports["f32.no_factor"](f32(-6.35459938038e-26), f32(7.52462484401e-22), f32(1626770.25)), f32(1.2239802906e-15));
assert_return(() => $$.exports["f64.no_factor"](2.8390554709988774e-128, 1.473981250649641e-139, -2.9001229846550766e-68), -8.233610026197336e-196);
assert_return(() => $$.exports["f64.no_factor"](6.461015505916123e-200, -2.3923242802975938e-304, -1.5300738798561604e-288), 0.0);
assert_return(() => $$.exports["f64.no_factor"](-2.939056292080733e-101, -2.146156743463356e-85, -2.5109672231302416e+144), 5.388929238536426e+59);
assert_return(() => $$.exports["f64.no_factor"](-1.7785466771708878e-87, 9.328516775403213e-79, -1.2121009044876735e-76), -1.130710359943689e-154);
assert_return(() => $$.exports["f64.no_factor"](1.5194859063177362e-183, 8.83589921438065e-175, -1.7358300194691958e+147), -1.5337619131701908e-27);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0f\x02\x60\x03\x7d\x7d\x7d\x01\x7d\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x29\x02\x11\x66\x33\x32\x2e\x6e\x6f\x5f\x64\x69\x73\x74\x72\x69\x62\x75\x74\x65\x00\x00\x11\x66\x36\x34\x2e\x6e\x6f\x5f\x64\x69\x73\x74\x72\x69\x62\x75\x74\x65\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x92\x20\x02\x94\x0b\x0a\x00\x20\x00\x20\x01\xa0\x20\x02\xa2\x0b");
assert_return(() => $$.exports["f32.no_distribute"](f32(-1.43511165338e+12), f32(-8.5361763654e+14), f32(1.11384932812e+18)), f32(-9.52399962045e+32));
assert_return(() => $$.exports["f32.no_distribute"](f32(-0.0266666319221), f32(0.0484128221869), f32(-0.0028136970941)), f32(-6.11871946603e-05));
assert_return(() => $$.exports["f32.no_distribute"](f32(-4.6619777266e-13), f32(1.04783769717e-19), f32(1.44692022693e+37)), f32(-6.74550852747e+24));
assert_return(() => $$.exports["f32.no_distribute"](f32(-1.06890463028e-19), f32(1.06944332177e-25), f32(5.68307016526e+35)), f32(-6.07465356709e+16));
assert_return(() => $$.exports["f32.no_distribute"](f32(-6.35459938038e-26), f32(7.52462484401e-22), f32(1626770.25)), f32(1.22398018472e-15));
assert_return(() => $$.exports["f64.no_distribute"](2.8390554709988774e-128, 1.473981250649641e-139, -2.9001229846550766e-68), -8.233610026197337e-196);
assert_return(() => $$.exports["f64.no_distribute"](6.461015505916123e-200, -2.3923242802975938e-304, -1.5300738798561604e-288), -0.0);
assert_return(() => $$.exports["f64.no_distribute"](-2.939056292080733e-101, -2.146156743463356e-85, -2.5109672231302416e+144), 5.388929238536425e+59);
assert_return(() => $$.exports["f64.no_distribute"](-1.7785466771708878e-87, 9.328516775403213e-79, -1.2121009044876735e-76), -1.1307103599436889e-154);
assert_return(() => $$.exports["f64.no_distribute"](1.5194859063177362e-183, 8.83589921438065e-175, -1.7358300194691958e+147), -1.5337619131701907e-27);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0f\x02\x60\x03\x7d\x7d\x7d\x01\x7d\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x33\x02\x16\x66\x33\x32\x2e\x6e\x6f\x5f\x72\x65\x67\x72\x6f\x75\x70\x5f\x64\x69\x76\x5f\x6d\x75\x6c\x00\x00\x16\x66\x36\x34\x2e\x6e\x6f\x5f\x72\x65\x67\x72\x6f\x75\x70\x5f\x64\x69\x76\x5f\x6d\x75\x6c\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x20\x02\x95\x94\x0b\x0a\x00\x20\x00\x20\x01\x20\x02\xa3\xa2\x0b");
assert_return(() => $$.exports["f32.no_regroup_div_mul"](f32(-2.83134890058e-35), f32(-7.2707870449e-20), f32(1.64066051041e-35)), f32(1.25474678151e-19));
assert_return(() => $$.exports["f32.no_regroup_div_mul"](f32(-3.1458976993e+27), f32(-4.08640034173e-35), f32(-9.24592831559e+21)), f32(-0.0));
assert_return(() => $$.exports["f32.no_regroup_div_mul"](f32(-93157.4296875), f32(-8.12926543858e-07), f32(-1.54693967367e-37)), f32(-4.89548122418e+35));
assert_return(() => $$.exports["f32.no_regroup_div_mul"](f32(-8.8996428284e-29), f32(1.78877246369e+22), f32(5.14680231878e+20)), f32(-3.09307295741e-27));
assert_return(() => $$.exports["f32.no_regroup_div_mul"](f32(9.22203617957e+33), f32(33330492.0), f32(-3.25310876274e+21)), f32(-9.44865493251e+19));
assert_return(() => $$.exports["f64.no_regroup_div_mul"](5.698811412550059e-128, -1.8313439132919336e-36, 9.543270551003098e-194), -1.093596114413331e+30);
assert_return(() => $$.exports["f64.no_regroup_div_mul"](3.5728928842550755e+101, 3.952760844538651e-135, -1.4507812412549008e+240), -0.0);
assert_return(() => $$.exports["f64.no_regroup_div_mul"](9.124278383497107e-145, 5.556134527714797e+271, 2.5090826940306507e-135), Infinity);
assert_return(() => $$.exports["f64.no_regroup_div_mul"](-4.492093000352015e+144, -1.2087878984017852e+184, -5.966133806260623e+251), -9.101350780337626e+76);
assert_return(() => $$.exports["f64.no_regroup_div_mul"](7.470269158630455e-181, 7.568026329781282e-265, -1.055389683973521e-252), -5.356807494101561e-193);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0f\x02\x60\x03\x7d\x7d\x7d\x01\x7d\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x33\x02\x16\x66\x33\x32\x2e\x6e\x6f\x5f\x72\x65\x67\x72\x6f\x75\x70\x5f\x6d\x75\x6c\x5f\x64\x69\x76\x00\x00\x16\x66\x36\x34\x2e\x6e\x6f\x5f\x72\x65\x67\x72\x6f\x75\x70\x5f\x6d\x75\x6c\x5f\x64\x69\x76\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x94\x20\x02\x95\x0b\x0a\x00\x20\x00\x20\x01\xa2\x20\x02\xa3\x0b");
assert_return(() => $$.exports["f32.no_regroup_mul_div"](f32(-2.83134890058e-35), f32(-7.2707870449e-20), f32(1.64066051041e-35)), f32(0.0));
assert_return(() => $$.exports["f32.no_regroup_mul_div"](f32(-3.1458976993e+27), f32(-4.08640034173e-35), f32(-9.24592831559e+21)), f32(-1.39038479919e-29));
assert_return(() => $$.exports["f32.no_regroup_mul_div"](f32(-93157.4296875), f32(-8.12926543858e-07), f32(-1.54693967367e-37)), f32(-4.89548162032e+35));
assert_return(() => $$.exports["f32.no_regroup_mul_div"](f32(-8.8996428284e-29), f32(1.78877246369e+22), f32(5.14680231878e+20)), f32(-3.09307315001e-27));
assert_return(() => $$.exports["f32.no_regroup_mul_div"](f32(9.22203617957e+33), f32(33330492.0), f32(-3.25310876274e+21)), -Infinity);
assert_return(() => $$.exports["f64.no_regroup_mul_div"](5.698811412550059e-128, -1.8313439132919336e-36, 9.543270551003098e-194), -1.0935961144133311e+30);
assert_return(() => $$.exports["f64.no_regroup_mul_div"](3.5728928842550755e+101, 3.952760844538651e-135, -1.4507812412549008e+240), -9.734611044734945e-274);
assert_return(() => $$.exports["f64.no_regroup_mul_div"](9.124278383497107e-145, 5.556134527714797e+271, 2.5090826940306507e-135), 2.0204881364667663e+262);
assert_return(() => $$.exports["f64.no_regroup_mul_div"](-4.492093000352015e+144, -1.2087878984017852e+184, -5.966133806260623e+251), -Infinity);
assert_return(() => $$.exports["f64.no_regroup_mul_div"](7.470269158630455e-181, 7.568026329781282e-265, -1.055389683973521e-252), -0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x11\x02\x60\x04\x7d\x7d\x7d\x7d\x01\x7d\x60\x04\x7c\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x33\x02\x16\x66\x33\x32\x2e\x6e\x6f\x5f\x72\x65\x61\x73\x73\x6f\x63\x69\x61\x74\x65\x5f\x61\x64\x64\x00\x00\x16\x66\x36\x34\x2e\x6e\x6f\x5f\x72\x65\x61\x73\x73\x6f\x63\x69\x61\x74\x65\x5f\x61\x64\x64\x00\x01\x0a\x1d\x02\x0d\x00\x20\x00\x20\x01\x92\x20\x02\x92\x20\x03\x92\x0b\x0d\x00\x20\x00\x20\x01\xa0\x20\x02\xa0\x20\x03\xa0\x0b");
assert_return(() => $$.exports["f32.no_reassociate_add"](f32(-2.41543214531e+13), f32(26125811712.0), f32(-2.38608082534e+14), f32(-2.47895346381e+12)), f32(-2.65215220384e+14));
assert_return(() => $$.exports["f32.no_reassociate_add"](f32(0.00361810531467), f32(-0.00985943991691), f32(0.0633753761649), f32(-0.0111501989886)), f32(0.0459838397801));
assert_return(() => $$.exports["f32.no_reassociate_add"](f32(-34206967808.0), f32(-3.77087721472e+12), f32(3.08684248842e+13), f32(4.21132075008e+11)), f32(2.74844709028e+13));
assert_return(() => $$.exports["f32.no_reassociate_add"](f32(1.53506392572e+14), f32(9.25114682049e+14), f32(-36021854208.0), f32(2.45084604649e+15)), f32(3.52943098298e+15));
assert_return(() => $$.exports["f32.no_reassociate_add"](f32(4.70600313997e+32), f32(-3.96552040778e+32), f32(4.80669389449e+31), f32(-3.56440727576e+28)), f32(1.2207956336e+32));
assert_return(() => $$.exports["f64.no_reassociate_add"](-2.070465292771702e+253, 1.5946897043763697e+255, 4.5110663655941613e+257, -1.3743335091868633e+258), -9.216528875759986e+257);
assert_return(() => $$.exports["f64.no_reassociate_add"](3.485747658213531e-164, 3.1210957391311754e-164, -6.83008546431621e-164, -2.617177347131095e-179), -2.2324206697150536e-165);
assert_return(() => $$.exports["f64.no_reassociate_add"](-5.4125849211227263e+132, 5.976036561703795e+122, -3.558300777933963e+131, 3.7362725995762544e+119), -5.768414998318146e+132);
assert_return(() => $$.exports["f64.no_reassociate_add"](-6.469047714189599e-96, 6.4286584974746e-93, -2.1277698072285604e-79, 8.768287273189493e-79), 6.640517465960996e-79);
assert_return(() => $$.exports["f64.no_reassociate_add"](-1.6422137086414828e+193, -8.803213793979071e+184, 4.4995705978285785e+194, -1.1409126716627439e+194), 3.1944365544213656e+194);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x11\x02\x60\x04\x7d\x7d\x7d\x7d\x01\x7d\x60\x04\x7c\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x33\x02\x16\x66\x33\x32\x2e\x6e\x6f\x5f\x72\x65\x61\x73\x73\x6f\x63\x69\x61\x74\x65\x5f\x6d\x75\x6c\x00\x00\x16\x66\x36\x34\x2e\x6e\x6f\x5f\x72\x65\x61\x73\x73\x6f\x63\x69\x61\x74\x65\x5f\x6d\x75\x6c\x00\x01\x0a\x1d\x02\x0d\x00\x20\x00\x20\x01\x94\x20\x02\x94\x20\x03\x94\x0b\x0d\x00\x20\x00\x20\x01\xa2\x20\x02\xa2\x20\x03\xa2\x0b");
assert_return(() => $$.exports["f32.no_reassociate_mul"](f32(1.90451493983e-35), f32(2.25488613892e-10), f32(-6.9643218332e+30), f32(2.69028318134e-17)), f32(-7.876417295e-31));
assert_return(() => $$.exports["f32.no_reassociate_mul"](f32(1.87331245909e-17), f32(-7.56590387278e+30), f32(-3.08076840654e-38), f32(-1.59275922903e+21)), f32(-0.00695472862571));
assert_return(() => $$.exports["f32.no_reassociate_mul"](f32(5.03555750835e-15), f32(-5.64668842283e+16), f32(-1.17405119914e-12), f32(8.49847264083e+22)), f32(2.83706539377e+13));
assert_return(() => $$.exports["f32.no_reassociate_mul"](f32(4.63949458882e-32), f32(2.54449361736e+23), f32(-7.24609773664e+16), f32(-9.62511035846e+17)), f32(8.23345112797e+26));
assert_return(() => $$.exports["f32.no_reassociate_mul"](f32(-1.94205358914e-30), f32(2.32003552451e-15), f32(-9.77274799347), f32(8.64065987375e+17)), f32(3.51136163758e-26));
assert_return(() => $$.exports["f64.no_reassociate_mul"](-3.109868654414946e-201, -2.0713190487745434e+298, -7.162612845524978e-114, -8.847825329596909e+199), 4.0822261813278614e+184);
assert_return(() => $$.exports["f64.no_reassociate_mul"](6.044271641295681e+136, 6.700545015107397e-156, -3.1469664275798185e-271, -6.4016772956405615e+162), 8.159057447560471e-127);
assert_return(() => $$.exports["f64.no_reassociate_mul"](2.216807720454268e-151, -1.8022341865367216e+237, 7.500283778521931e-230, -4.144121524339569e+26), 1.241793627299937e-116);
assert_return(() => $$.exports["f64.no_reassociate_mul"](2.431806596629872e+208, 6.508014075793436e-128, 1.7596421287233897e+67, -1.416141401305358e-07), -3.943741918531223e+141);
assert_return(() => $$.exports["f64.no_reassociate_mul"](3.849767156964772e-71, 7.0008754943224875e-239, -2.5368878252183865e+219, -6.101114518858449e-181), 4.171548126376117e-270);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x07\x06\x00\x01\x02\x02\x02\x02\x07\x55\x06\x11\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x30\x00\x00\x11\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x30\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x04\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x05\x0a\x93\x01\x06\x0a\x00\x20\x00\x43\x00\x00\x00\x00\x95\x0b\x0e\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\xa3\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\x7f\x10\x00\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["f32.no_fold_div_0"](f32(1.0)), Infinity);
assert_return(() => $$.exports["f32.no_fold_div_0"](f32(-1.0)), -Infinity);
assert_return(() => $$.exports["f32.no_fold_div_0"](Infinity), Infinity);
assert_return(() => $$.exports["f32.no_fold_div_0"](-Infinity), -Infinity);
assert_return_nan(() => $$.exports["f32.no_fold_div_0"](f32(0.0)));
assert_return_nan(() => $$.exports["f32.no_fold_div_0"](f32(-0.0)));
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["f64.no_fold_div_0"](1.0), Infinity);
assert_return(() => $$.exports["f64.no_fold_div_0"](-1.0), -Infinity);
assert_return(() => $$.exports["f64.no_fold_div_0"](Infinity), Infinity);
assert_return(() => $$.exports["f64.no_fold_div_0"](-Infinity), -Infinity);
assert_return_nan(() => $$.exports["f64.no_fold_div_0"](0.0));
assert_return_nan(() => $$.exports["f64.no_fold_div_0"](-0.0));
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x07\x06\x00\x01\x02\x02\x02\x02\x07\x5b\x06\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x6e\x65\x67\x30\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x6e\x65\x67\x30\x00\x01\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x02\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x03\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x04\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x05\x0a\x93\x01\x06\x0a\x00\x20\x00\x43\x00\x00\x00\x80\x95\x0b\x0e\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x80\xa3\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\x7f\x10\x00\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x01\xbd\x44\x00\x00\x00\x00\x00\x00\xfc\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["f32.no_fold_div_neg0"](f32(1.0)), -Infinity);
assert_return(() => $$.exports["f32.no_fold_div_neg0"](f32(-1.0)), Infinity);
assert_return(() => $$.exports["f32.no_fold_div_neg0"](Infinity), -Infinity);
assert_return(() => $$.exports["f32.no_fold_div_neg0"](-Infinity), Infinity);
assert_return_nan(() => $$.exports["f32.no_fold_div_neg0"](f32(0.0)));
assert_return_nan(() => $$.exports["f32.no_fold_div_neg0"](f32(-0.0)));
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["f64.no_fold_div_neg0"](1.0), -Infinity);
assert_return(() => $$.exports["f64.no_fold_div_neg0"](-1.0), Infinity);
assert_return(() => $$.exports["f64.no_fold_div_neg0"](Infinity), -Infinity);
assert_return(() => $$.exports["f64.no_fold_div_neg0"](-Infinity), Infinity);
assert_return_nan(() => $$.exports["f64.no_fold_div_neg0"](0.0));
assert_return_nan(() => $$.exports["f64.no_fold_div_neg0"](-0.0));
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2f\x02\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x6f\x5f\x68\x79\x70\x6f\x74\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x6f\x5f\x68\x79\x70\x6f\x74\x00\x01\x0a\x1f\x02\x0e\x00\x20\x00\x20\x00\x94\x20\x01\x20\x01\x94\x92\x91\x0b\x0e\x00\x20\x00\x20\x00\xa2\x20\x01\x20\x01\xa2\xa0\x9f\x0b");
assert_return(() => $$.exports["f32.no_fold_to_hypot"](f32(7.28549136358e-25), f32(4.2365795867e-21)), f32(4.23665349982e-21));
assert_return(() => $$.exports["f32.no_fold_to_hypot"](f32(-7.47028507563e-22), f32(-7.45374502637e-33)), f32(7.46804395335e-22));
assert_return(() => $$.exports["f32.no_fold_to_hypot"](f32(-7.70894992385e-35), f32(-3.26272143385e-21)), f32(3.26276949757e-21));
assert_return(() => $$.exports["f32.no_fold_to_hypot"](f32(-35.4281806946), f32(174209.484375)), f32(174209.5));
assert_return(() => $$.exports["f32.no_fold_to_hypot"](f32(2.0628143114e-23), f32(-4.63447527177e-22)), f32(4.63032018361e-22));
assert_return(() => $$.exports["f64.no_fold_to_hypot"](3.863640258986321e-192, 1.9133014752624014e-161), 1.9120893753235554e-161);
assert_return(() => $$.exports["f64.no_fold_to_hypot"](1.3856123895032977e+119, -2.828038515930043e+123), 2.8280385193244834e+123);
assert_return(() => $$.exports["f64.no_fold_to_hypot"](6.502729096641792e-162, -4.544399933151275e-231), 6.668276248455232e-162);
assert_return(() => $$.exports["f64.no_fold_to_hypot"](-2.2340232024202604e-157, 3.435929714143315e-221), 2.2340232023799234e-157);
assert_return(() => $$.exports["f64.no_fold_to_hypot"](2.797963998630554e-202, -1.906867996862016e-155), 1.9068679968620105e-155);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x01\x7d\x01\x7d\x03\x02\x01\x00\x07\x21\x01\x1d\x66\x33\x32\x2e\x6e\x6f\x5f\x61\x70\x70\x72\x6f\x78\x69\x6d\x61\x74\x65\x5f\x72\x65\x63\x69\x70\x72\x6f\x63\x61\x6c\x00\x00\x0a\x0c\x01\x0a\x00\x43\x00\x00\x80\x3f\x20\x00\x95\x0b");
assert_return(() => $$.exports["f32.no_approximate_reciprocal"](f32(-0.00113297568168)), f32(-882.631469727));
assert_return(() => $$.exports["f32.no_approximate_reciprocal"](f32(3.2375301439e+38)), f32(3.08877430493e-39));
assert_return(() => $$.exports["f32.no_approximate_reciprocal"](f32(-1.27259901639e-28)), f32(-7.85793459579e+27));
assert_return(() => $$.exports["f32.no_approximate_reciprocal"](f32(1.03020679146e+23)), f32(9.7067890772e-24));
assert_return(() => $$.exports["f32.no_approximate_reciprocal"](f32(-2.84437629095e-25)), f32(-3.51570932455e+24));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x44\x02\x22\x66\x33\x32\x2e\x6e\x6f\x5f\x61\x70\x70\x72\x6f\x78\x69\x6d\x61\x74\x65\x5f\x72\x65\x63\x69\x70\x72\x6f\x63\x61\x6c\x5f\x73\x71\x72\x74\x00\x00\x1b\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x75\x73\x65\x5f\x72\x65\x63\x69\x70\x72\x6f\x63\x61\x6c\x5f\x73\x71\x72\x74\x00\x01\x0a\x1d\x02\x0b\x00\x43\x00\x00\x80\x3f\x20\x00\x91\x95\x0b\x0f\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x20\x00\x9f\xa3\x0b");
assert_return(() => $$.exports["f32.no_approximate_reciprocal_sqrt"](f32(1.61178646927e-13)), f32(2490842.5));
assert_return(() => $$.exports["f32.no_approximate_reciprocal_sqrt"](f32(0.00744913658127)), f32(11.5863599777));
assert_return(() => $$.exports["f32.no_approximate_reciprocal_sqrt"](f32(2.33981704128e-20)), f32(6537460224.0));
assert_return(() => $$.exports["f32.no_approximate_reciprocal_sqrt"](f32(1.11235043258e-13)), f32(2998328.25));
assert_return(() => $$.exports["f32.no_approximate_reciprocal_sqrt"](f32(1.7653063085e-26)), f32(7.52644626842e+12));
assert_return(() => $$.exports["f64.no_fuse_reciprocal_sqrt"](4.472459252766337e+267), 1.4952947335898096e-134);
assert_return(() => $$.exports["f64.no_fuse_reciprocal_sqrt"](4.752392260007119e+93), 1.4505872638954843e-47);
assert_return(() => $$.exports["f64.no_fuse_reciprocal_sqrt"](2.9014415885392436e+31), 1.8564920084793608e-16);
assert_return(() => $$.exports["f64.no_fuse_reciprocal_sqrt"](1.3966125076974778e+201), 2.6758516751072132e-101);
assert_return(() => $$.exports["f64.no_fuse_reciprocal_sqrt"](1.5159641544070443e+44), 8.121860649480894e-23);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x01\x7d\x01\x7d\x03\x02\x01\x00\x07\x26\x01\x22\x66\x33\x32\x2e\x6e\x6f\x5f\x61\x70\x70\x72\x6f\x78\x69\x6d\x61\x74\x65\x5f\x73\x71\x72\x74\x5f\x72\x65\x63\x69\x70\x72\x6f\x63\x61\x6c\x00\x00\x0a\x0d\x01\x0b\x00\x43\x00\x00\x80\x3f\x20\x00\x95\x91\x0b");
assert_return(() => $$.exports["f32.no_approximate_sqrt_reciprocal"](f32(1.8950570813e+18)), f32(7.26421756081e-10));
assert_return(() => $$.exports["f32.no_approximate_sqrt_reciprocal"](f32(0.00256589404307)), f32(19.7415218353));
assert_return(() => $$.exports["f32.no_approximate_sqrt_reciprocal"](f32(6.32654487023e+20)), f32(3.97572842703e-11));
assert_return(() => $$.exports["f32.no_approximate_sqrt_reciprocal"](f32(14153.5390625)), f32(0.00840557646006));
assert_return(() => $$.exports["f32.no_approximate_sqrt_reciprocal"](f32(2.61737299828e+31)), f32(1.95464181645e-16));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7f\x01\x7f\x60\x01\x7e\x01\x7e\x60\x00\x00\x03\x0b\x0a\x00\x00\x01\x01\x02\x02\x02\x02\x02\x02\x07\x93\x01\x0a\x11\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x66\x33\x32\x5f\x73\x00\x00\x11\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x66\x33\x32\x5f\x75\x00\x01\x11\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x66\x36\x34\x5f\x73\x00\x02\x11\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x66\x36\x34\x5f\x75\x00\x03\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x04\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x05\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x06\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x07\x08\x61\x73\x73\x65\x72\x74\x5f\x34\x00\x08\x08\x61\x73\x73\x65\x72\x74\x5f\x35\x00\x09\x0a\xe1\x01\x0a\x06\x00\x20\x00\xb2\xa8\x0b\x06\x00\x20\x00\xb3\xa9\x0b\x06\x00\x20\x00\xb9\xb0\x0b\x06\x00\x20\x00\xba\xb1\x0b\x1f\x00\x02\x40\x42\x80\x80\x80\x80\x80\x80\x80\x10\x10\x02\x42\x80\x80\x80\x80\x80\x80\x80\x10\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x1f\x00\x02\x40\x42\x81\x80\x80\x80\x80\x80\x80\x10\x10\x02\x42\x80\x80\x80\x80\x80\x80\x80\x10\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x42\x80\x88\x80\x80\x80\x80\x80\x80\x70\x10\x02\x42\x80\x88\x80\x80\x80\x80\x80\x80\x70\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x1f\x00\x02\x40\x42\x80\x80\x80\x80\x80\x80\x80\x10\x10\x03\x42\x80\x80\x80\x80\x80\x80\x80\x10\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x1f\x00\x02\x40\x42\x81\x80\x80\x80\x80\x80\x80\x10\x10\x03\x42\x80\x80\x80\x80\x80\x80\x80\x10\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x42\x80\x88\x80\x80\x80\x80\x80\x80\x70\x10\x03\x42\x80\x80\x80\x80\x80\x80\x80\x80\x70\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["i32.no_fold_f32_s"](16777216), 16777216);
assert_return(() => $$.exports["i32.no_fold_f32_s"](16777217), 16777216);
assert_return(() => $$.exports["i32.no_fold_f32_s"](-268435440), -268435440);
assert_return(() => $$.exports["i32.no_fold_f32_u"](16777216), 16777216);
assert_return(() => $$.exports["i32.no_fold_f32_u"](16777217), 16777216);
assert_return(() => $$.exports["i32.no_fold_f32_u"](-268435440), -268435456);
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
assert_return(() => $$.exports["assert_4"]());
assert_return(() => $$.exports["assert_5"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2d\x02\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x73\x75\x62\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x73\x75\x62\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x92\x20\x01\x93\x0b\x0a\x00\x20\x00\x20\x01\xa0\x20\x01\xa1\x0b");
assert_return(() => $$.exports["f32.no_fold_add_sub"](f32(1.21382819838e-14), f32(-2.09463841827e-08)), f32(1.24344978758e-14));
assert_return(() => $$.exports["f32.no_fold_add_sub"](f32(-1.97681970349e-07), f32(3.71545661437e-06)), f32(-1.97682084035e-07));
assert_return(() => $$.exports["f32.no_fold_add_sub"](f32(-9.59621301639e+24), f32(-3.53804139699e+30)), f32(-9.67140655692e+24));
assert_return(() => $$.exports["f32.no_fold_add_sub"](f32(5.05434581015e-24), f32(2.45726557561e-17)), f32(4.96308367532e-24));
assert_return(() => $$.exports["f32.no_fold_add_sub"](f32(-3.36931468232e-33), f32(-7.10149165285e-26)), f32(-6.16297582204e-33));
assert_return(() => $$.exports["f64.no_fold_add_sub"](-8.445702651973109e-264, 1.110684389828854e-258), -8.445702651873978e-264);
assert_return(() => $$.exports["f64.no_fold_add_sub"](8.198798715927055e-165, 4.624035606110903e-159), 8.198798715897085e-165);
assert_return(() => $$.exports["f64.no_fold_add_sub"](-1.3604511322066714e-09, -0.1751431740707098), -1.3604511406306585e-09);
assert_return(() => $$.exports["f64.no_fold_add_sub"](-3.944335437865966e-103, 1.663809741322667e-92), -3.9443355500325104e-103);
assert_return(() => $$.exports["f64.no_fold_add_sub"](-5.078309818866e-187, -1.0790431644461104e-177), -5.07831047937567e-187);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2d\x02\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x75\x62\x5f\x61\x64\x64\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x75\x62\x5f\x61\x64\x64\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x93\x20\x01\x92\x0b\x0a\x00\x20\x00\x20\x01\xa1\x20\x01\xa0\x0b");
assert_return(() => $$.exports["f32.no_fold_sub_add"](f32(-676.474365234), f32(403.036804199)), f32(-676.47442627));
assert_return(() => $$.exports["f32.no_fold_sub_add"](f32(-6.30594311841e-34), f32(3.67186006876e-29)), f32(-6.31945763002e-34));
assert_return(() => $$.exports["f32.no_fold_sub_add"](f32(83184800.0), f32(46216216576.0)), f32(83185664.0));
assert_return(() => $$.exports["f32.no_fold_sub_add"](f32(2.21195696308e-12), f32(-1.04379296317e-08)), f32(2.21156426505e-12));
assert_return(() => $$.exports["f32.no_fold_sub_add"](f32(0.149443954229), f32(-27393.6503906)), f32(0.150390625));
assert_return(() => $$.exports["f64.no_fold_sub_add"](9.036598261794624e+76, -9.58186427535552e+77), 9.036598261794628e+76);
assert_return(() => $$.exports["f64.no_fold_sub_add"](4.4230403564658815e-201, 2.6713491049366576e-195), 4.423040356647721e-201);
assert_return(() => $$.exports["f64.no_fold_sub_add"](4.095348452776429e+75, -4.0501900195765687e+90), 4.0708156372493975e+75);
assert_return(() => $$.exports["f64.no_fold_sub_add"](2.4008889207554433e-08, -0.00017253797929188484), 2.400888920756506e-08);
assert_return(() => $$.exports["f64.no_fold_sub_add"](4.3367542918305866e-111, -3.9597706708227122e-109), 4.336754291830597e-111);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2d\x02\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x64\x69\x76\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x64\x69\x76\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x94\x20\x01\x95\x0b\x0a\x00\x20\x00\x20\x01\xa2\x20\x01\xa3\x0b");
assert_return(() => $$.exports["f32.no_fold_mul_div"](f32(-3.24767151838e+16), f32(1.01213754107e-14)), f32(-3.24767130363e+16));
assert_return(() => $$.exports["f32.no_fold_mul_div"](f32(-1.55611630248e-08), f32(1.57998283856e-32)), f32(-1.55611452612e-08));
assert_return(() => $$.exports["f32.no_fold_mul_div"](f32(-6.7631100034e-15), f32(-4.41323995791e+14)), f32(-6.76310957988e-15));
assert_return(() => $$.exports["f32.no_fold_mul_div"](f32(7.50561372668e+15), f32(-2.16038408049e+18)), f32(7.50561318981e+15));
assert_return(() => $$.exports["f32.no_fold_mul_div"](f32(-2.36257605915e-28), f32(-1.08087592696e-11)), f32(-2.36257654064e-28));
assert_return(() => $$.exports["f64.no_fold_mul_div"](-1.3532103713575586e-252, -3.347836467564916e-62), -1.3532103713672434e-252);
assert_return(() => $$.exports["f64.no_fold_mul_div"](7.7662174313180845e+115, 1.9595915560693953e+176), 7.766217431318085e+115);
assert_return(() => $$.exports["f64.no_fold_mul_div"](-7.180117811902948e+71, -9.320036042623636e-167), -7.1801178119029475e+71);
assert_return(() => $$.exports["f64.no_fold_mul_div"](1.7260010724693063e-50, 3.568792428129926e-273), 1.661286799244216e-50);
assert_return(() => $$.exports["f64.no_fold_mul_div"](-9.145223045828962e+198, -5.562094034342845e-99), -9.145223045828963e+198);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2d\x02\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x6d\x75\x6c\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x6d\x75\x6c\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x95\x20\x01\x94\x0b\x0a\x00\x20\x00\x20\x01\xa3\x20\x01\xa2\x0b");
assert_return(() => $$.exports["f32.no_fold_div_mul"](f32(-5.1151798272e+11), f32(986062208.0)), f32(-5.11517949952e+11));
assert_return(() => $$.exports["f32.no_fold_div_mul"](f32(-2.49448529519e-16), f32(-4.15398335463e-06)), f32(-2.49448555988e-16));
assert_return(() => $$.exports["f32.no_fold_div_mul"](f32(2.08278550051e-38), f32(-235.198471069)), f32(2.08280133518e-38));
assert_return(() => $$.exports["f32.no_fold_div_mul"](f32(-6.24994868347e-23), f32(-6.96312604972e+17)), f32(-6.2499190223e-23));
assert_return(() => $$.exports["f32.no_fold_div_mul"](f32(5.83535144053e-30), f32(212781120.0)), f32(5.83535181669e-30));
assert_return(() => $$.exports["f64.no_fold_div_mul"](3.5984644259935362e-264, -2.881226329803332e+55), 3.5985034356565485e-264);
assert_return(() => $$.exports["f64.no_fold_div_mul"](-1.7486367047479447e-215, 1.6508738454798636e-16), -1.748636704747945e-215);
assert_return(() => $$.exports["f64.no_fold_div_mul"](-3.140341989542684e-44, 9.428298090819196e+128), -3.1403419895426836e-44);
assert_return(() => $$.exports["f64.no_fold_div_mul"](-3.919745428533519e-84, -2.1314747179654705e+85), -3.9197454285335185e-84);
assert_return(() => $$.exports["f64.no_fold_div_mul"](-5.734160003788982e+186, 6.350805843612229e+297), -5.734160003788981e+186);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x01\x7c\x01\x7c\x03\x02\x01\x00\x07\x1a\x01\x16\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x65\x6d\x6f\x74\x65\x5f\x70\x72\x6f\x6d\x6f\x74\x65\x00\x00\x0a\x08\x01\x06\x00\x20\x00\xb6\xbb\x0b");
assert_return(() => $$.exports["no_fold_demote_promote"](-1.7176297220569481e-40), -1.7176275796615013e-40);
assert_return(() => $$.exports["no_fold_demote_promote"](-2.8464775573304055e-26), -2.846477619188087e-26);
assert_return(() => $$.exports["no_fold_demote_promote"](2.0897069969990923e+32), 2.08970700445326e+32);
assert_return(() => $$.exports["no_fold_demote_promote"](-4.7074160416121775e-27), -4.7074161331556024e-27);
assert_return(() => $$.exports["no_fold_demote_promote"](2.335945149795088e+31), 2.3359452224542198e+31);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x09\x02\x60\x01\x7d\x01\x7d\x60\x00\x00\x03\x03\x02\x00\x01\x07\x25\x02\x16\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x70\x72\x6f\x6d\x6f\x74\x65\x5f\x64\x65\x6d\x6f\x74\x65\x00\x00\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x01\x0a\x22\x02\x06\x00\x20\x00\xbb\xb6\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xe0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["no_fold_promote_demote"](f32(0.0)), f32(0.0));
assert_return(() => $$.exports["no_fold_promote_demote"](f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["no_fold_promote_demote"](f32(1.40129846432e-45)), f32(1.40129846432e-45));
assert_return(() => $$.exports["no_fold_promote_demote"](f32(-1.40129846432e-45)), f32(-1.40129846432e-45));
assert_return(() => $$.exports["no_fold_promote_demote"](f32(1.17549421069e-38)), f32(1.17549421069e-38));
assert_return(() => $$.exports["no_fold_promote_demote"](f32(-1.17549421069e-38)), f32(-1.17549421069e-38));
assert_return(() => $$.exports["no_fold_promote_demote"](f32(1.17549435082e-38)), f32(1.17549435082e-38));
assert_return(() => $$.exports["no_fold_promote_demote"](f32(-1.17549435082e-38)), f32(-1.17549435082e-38));
assert_return(() => $$.exports["no_fold_promote_demote"](f32(3.40282346639e+38)), f32(3.40282346639e+38));
assert_return(() => $$.exports["no_fold_promote_demote"](f32(-3.40282346639e+38)), f32(-3.40282346639e+38));
assert_return(() => $$.exports["no_fold_promote_demote"](Infinity), Infinity);
assert_return(() => $$.exports["no_fold_promote_demote"](-Infinity), -Infinity);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7c\x7d\x01\x7d\x60\x02\x7d\x7c\x01\x7d\x03\x03\x02\x00\x01\x07\x36\x02\x13\x6e\x6f\x5f\x64\x65\x6d\x6f\x74\x65\x5f\x6d\x69\x78\x65\x64\x5f\x61\x64\x64\x00\x00\x1c\x6e\x6f\x5f\x64\x65\x6d\x6f\x74\x65\x5f\x6d\x69\x78\x65\x64\x5f\x61\x64\x64\x5f\x63\x6f\x6d\x6d\x75\x74\x65\x64\x00\x01\x0a\x15\x02\x09\x00\x20\x00\x20\x01\xbb\xa0\xb6\x0b\x09\x00\x20\x00\xbb\x20\x01\xa0\xb6\x0b");
assert_return(() => $$.exports["no_demote_mixed_add"](4.941266527909197e-29, f32(1.8767182723e-36)), f32(4.94126667572e-29));
assert_return(() => $$.exports["no_demote_mixed_add"](140851523637.69385, f32(4.01096441856e+11)), f32(5.41947953152e+11));
assert_return(() => $$.exports["no_demote_mixed_add"](2.0831160914192852e-36, f32(-6.05009513354e-37)), f32(1.47810657028e-36));
assert_return(() => $$.exports["no_demote_mixed_add"](-1.0032827553674626e-06, f32(1.93129179316e-09)), f32(-1.0013515066e-06));
assert_return(() => $$.exports["no_demote_mixed_add"](-1.3840207035752711e-06, f32(-5.20281409101e-13)), f32(-1.384021175e-06));
assert_return(() => $$.exports["no_demote_mixed_add_commuted"](f32(1.8767182723e-36), 4.941266527909197e-29), f32(4.94126667572e-29));
assert_return(() => $$.exports["no_demote_mixed_add_commuted"](f32(4.01096441856e+11), 140851523637.69385), f32(5.41947953152e+11));
assert_return(() => $$.exports["no_demote_mixed_add_commuted"](f32(-6.05009513354e-37), 2.0831160914192852e-36), f32(1.47810657028e-36));
assert_return(() => $$.exports["no_demote_mixed_add_commuted"](f32(1.93129179316e-09), -1.0032827553674626e-06), f32(-1.0013515066e-06));
assert_return(() => $$.exports["no_demote_mixed_add_commuted"](f32(-5.20281409101e-13), -1.3840207035752711e-06), f32(-1.384021175e-06));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x07\x01\x60\x02\x7c\x7d\x01\x7d\x03\x02\x01\x00\x07\x17\x01\x13\x6e\x6f\x5f\x64\x65\x6d\x6f\x74\x65\x5f\x6d\x69\x78\x65\x64\x5f\x73\x75\x62\x00\x00\x0a\x0b\x01\x09\x00\x20\x00\x20\x01\xbb\xa1\xb6\x0b");
assert_return(() => $$.exports["no_demote_mixed_sub"](7.869935327202668e+24, f32(4.08634705926e+18)), f32(7.8699309654e+24));
assert_return(() => $$.exports["no_demote_mixed_sub"](-1535841968.9056544, f32(239897.28125)), f32(-1536081920.0));
assert_return(() => $$.exports["no_demote_mixed_sub"](-102.19459272722602, f32(0.000394261383917)), f32(-102.194984436));
assert_return(() => $$.exports["no_demote_mixed_sub"](5.645470375565188e-17, f32(5.85107700707e-22)), f32(5.64541172772e-17));
assert_return(() => $$.exports["no_demote_mixed_sub"](27090.388466832894, f32(63120.890625)), f32(-36030.5039062));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x03\x11\x10\x00\x00\x00\x00\x01\x01\x01\x01\x00\x00\x00\x00\x01\x01\x01\x01\x07\xc1\x04\x10\x21\x66\x33\x32\x2e\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x73\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x73\x00\x00\x21\x66\x33\x32\x2e\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x75\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x73\x00\x01\x21\x66\x33\x32\x2e\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x73\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x75\x00\x02\x21\x66\x33\x32\x2e\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x75\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x75\x00\x03\x21\x66\x36\x34\x2e\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x73\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x73\x00\x04\x21\x66\x36\x34\x2e\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x75\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x73\x00\x05\x21\x66\x36\x34\x2e\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x73\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x75\x00\x06\x21\x66\x36\x34\x2e\x69\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x75\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x75\x00\x07\x21\x66\x33\x32\x2e\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x73\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x73\x00\x08\x21\x66\x33\x32\x2e\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x75\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x73\x00\x09\x21\x66\x33\x32\x2e\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x73\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x75\x00\x0a\x21\x66\x33\x32\x2e\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x75\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x75\x00\x0b\x21\x66\x36\x34\x2e\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x73\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x73\x00\x0c\x21\x66\x36\x34\x2e\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x75\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x73\x00\x0d\x21\x66\x36\x34\x2e\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x73\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x75\x00\x0e\x21\x66\x36\x34\x2e\x69\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x74\x72\x75\x6e\x63\x5f\x75\x5f\x63\x6f\x6e\x76\x65\x72\x74\x5f\x75\x00\x0f\x0a\x71\x10\x06\x00\x20\x00\xa8\xb2\x0b\x06\x00\x20\x00\xa9\xb2\x0b\x06\x00\x20\x00\xa8\xb3\x0b\x06\x00\x20\x00\xa9\xb3\x0b\x06\x00\x20\x00\xaa\xb7\x0b\x06\x00\x20\x00\xab\xb7\x0b\x06\x00\x20\x00\xaa\xb8\x0b\x06\x00\x20\x00\xab\xb8\x0b\x06\x00\x20\x00\xae\xb4\x0b\x06\x00\x20\x00\xaf\xb4\x0b\x06\x00\x20\x00\xae\xb5\x0b\x06\x00\x20\x00\xaf\xb5\x0b\x06\x00\x20\x00\xb0\xb9\x0b\x06\x00\x20\x00\xb1\xb9\x0b\x06\x00\x20\x00\xb0\xba\x0b\x06\x00\x20\x00\xb1\xba\x0b");
assert_return(() => $$.exports["f32.i32.no_fold_trunc_s_convert_s"](f32(1.5)), f32(1.0));
assert_return(() => $$.exports["f32.i32.no_fold_trunc_s_convert_s"](f32(-1.5)), f32(-1.0));
assert_return(() => $$.exports["f32.i32.no_fold_trunc_u_convert_s"](f32(1.5)), f32(1.0));
assert_return(() => $$.exports["f32.i32.no_fold_trunc_u_convert_s"](f32(-0.5)), f32(0.0));
assert_return(() => $$.exports["f32.i32.no_fold_trunc_s_convert_u"](f32(1.5)), f32(1.0));
assert_return(() => $$.exports["f32.i32.no_fold_trunc_s_convert_u"](f32(-1.5)), f32(4294967296.0));
assert_return(() => $$.exports["f32.i32.no_fold_trunc_u_convert_u"](f32(1.5)), f32(1.0));
assert_return(() => $$.exports["f32.i32.no_fold_trunc_u_convert_u"](f32(-0.5)), f32(0.0));
assert_return(() => $$.exports["f64.i32.no_fold_trunc_s_convert_s"](1.5), 1.0);
assert_return(() => $$.exports["f64.i32.no_fold_trunc_s_convert_s"](-1.5), -1.0);
assert_return(() => $$.exports["f64.i32.no_fold_trunc_u_convert_s"](1.5), 1.0);
assert_return(() => $$.exports["f64.i32.no_fold_trunc_u_convert_s"](-0.5), 0.0);
assert_return(() => $$.exports["f64.i32.no_fold_trunc_s_convert_u"](1.5), 1.0);
assert_return(() => $$.exports["f64.i32.no_fold_trunc_s_convert_u"](-1.5), 4294967295.0);
assert_return(() => $$.exports["f64.i32.no_fold_trunc_u_convert_u"](1.5), 1.0);
assert_return(() => $$.exports["f64.i32.no_fold_trunc_u_convert_u"](-0.5), 0.0);
assert_return(() => $$.exports["f32.i64.no_fold_trunc_s_convert_s"](f32(1.5)), f32(1.0));
assert_return(() => $$.exports["f32.i64.no_fold_trunc_s_convert_s"](f32(-1.5)), f32(-1.0));
assert_return(() => $$.exports["f32.i64.no_fold_trunc_u_convert_s"](f32(1.5)), f32(1.0));
assert_return(() => $$.exports["f32.i64.no_fold_trunc_u_convert_s"](f32(-0.5)), f32(0.0));
assert_return(() => $$.exports["f32.i64.no_fold_trunc_s_convert_u"](f32(1.5)), f32(1.0));
assert_return(() => $$.exports["f32.i64.no_fold_trunc_s_convert_u"](f32(-1.5)), f32(1.84467440737e+19));
assert_return(() => $$.exports["f32.i64.no_fold_trunc_u_convert_u"](f32(1.5)), f32(1.0));
assert_return(() => $$.exports["f32.i64.no_fold_trunc_u_convert_u"](f32(-0.5)), f32(0.0));
assert_return(() => $$.exports["f64.i64.no_fold_trunc_s_convert_s"](1.5), 1.0);
assert_return(() => $$.exports["f64.i64.no_fold_trunc_s_convert_s"](-1.5), -1.0);
assert_return(() => $$.exports["f64.i64.no_fold_trunc_u_convert_s"](1.5), 1.0);
assert_return(() => $$.exports["f64.i64.no_fold_trunc_u_convert_s"](-0.5), 0.0);
assert_return(() => $$.exports["f64.i64.no_fold_trunc_s_convert_u"](1.5), 1.0);
assert_return(() => $$.exports["f64.i64.no_fold_trunc_s_convert_u"](-1.5), 1.8446744073709552e+19);
assert_return(() => $$.exports["f64.i64.no_fold_trunc_u_convert_u"](1.5), 1.0);
assert_return(() => $$.exports["f64.i64.no_fold_trunc_u_convert_u"](-0.5), 0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x02\x7f\x7d\x00\x60\x01\x7f\x01\x7d\x03\x04\x03\x00\x00\x01\x05\x04\x01\x01\x01\x01\x07\x16\x03\x04\x69\x6e\x69\x74\x00\x00\x03\x72\x75\x6e\x00\x01\x05\x63\x68\x65\x63\x6b\x00\x02\x0a\x39\x03\x09\x00\x20\x00\x20\x01\x38\x02\x00\x0b\x25\x01\x01\x7f\x02\x40\x03\x40\x20\x02\x20\x02\x2a\x02\x00\x20\x01\x95\x38\x02\x00\x20\x02\x41\x04\x6a\x21\x02\x20\x02\x20\x00\x49\x0d\x00\x0b\x0b\x0b\x07\x00\x20\x00\x2a\x02\x00\x0b");
$$.exports["init"](0, f32(15.1000003815));
$$.exports["init"](4, f32(15.1999998093));
$$.exports["init"](8, f32(15.3000001907));
$$.exports["init"](12, f32(15.3999996185));
assert_return(() => $$.exports["check"](0), f32(15.1000003815));
assert_return(() => $$.exports["check"](4), f32(15.1999998093));
assert_return(() => $$.exports["check"](8), f32(15.3000001907));
assert_return(() => $$.exports["check"](12), f32(15.3999996185));
$$.exports["run"](16, f32(3.0));
assert_return(() => $$.exports["check"](0), f32(5.03333330154));
assert_return(() => $$.exports["check"](4), f32(5.06666660309));
assert_return(() => $$.exports["check"](8), f32(5.09999990463));
assert_return(() => $$.exports["check"](12), f32(5.13333320618));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x02\x7f\x7c\x00\x60\x01\x7f\x01\x7c\x03\x04\x03\x00\x00\x01\x05\x04\x01\x01\x01\x01\x07\x16\x03\x04\x69\x6e\x69\x74\x00\x00\x03\x72\x75\x6e\x00\x01\x05\x63\x68\x65\x63\x6b\x00\x02\x0a\x39\x03\x09\x00\x20\x00\x20\x01\x39\x03\x00\x0b\x25\x01\x01\x7f\x02\x40\x03\x40\x20\x02\x20\x02\x2b\x03\x00\x20\x01\xa3\x39\x03\x00\x20\x02\x41\x08\x6a\x21\x02\x20\x02\x20\x00\x49\x0d\x00\x0b\x0b\x0b\x07\x00\x20\x00\x2b\x03\x00\x0b");
$$.exports["init"](0, 15.1);
$$.exports["init"](8, 15.2);
$$.exports["init"](16, 15.3);
$$.exports["init"](24, 15.4);
assert_return(() => $$.exports["check"](0), 15.1);
assert_return(() => $$.exports["check"](8), 15.2);
assert_return(() => $$.exports["check"](16), 15.3);
assert_return(() => $$.exports["check"](24), 15.4);
$$.exports["run"](32, 3.0);
assert_return(() => $$.exports["check"](0), 5.033333333333333);
assert_return(() => $$.exports["check"](8), 5.066666666666666);
assert_return(() => $$.exports["check"](16), 5.1000000000000005);
assert_return(() => $$.exports["check"](24), 5.133333333333334);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x10\x03\x60\x02\x7d\x7d\x01\x7f\x60\x02\x7c\x7c\x01\x7f\x60\x00\x00\x03\x11\x10\x00\x00\x00\x00\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x07\xa9\x01\x10\x07\x66\x33\x32\x2e\x75\x6c\x74\x00\x00\x07\x66\x33\x32\x2e\x75\x6c\x65\x00\x01\x07\x66\x33\x32\x2e\x75\x67\x74\x00\x02\x07\x66\x33\x32\x2e\x75\x67\x65\x00\x03\x07\x66\x36\x34\x2e\x75\x6c\x74\x00\x04\x07\x66\x36\x34\x2e\x75\x6c\x65\x00\x05\x07\x66\x36\x34\x2e\x75\x67\x74\x00\x06\x07\x66\x36\x34\x2e\x75\x67\x65\x00\x07\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x08\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x09\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x0a\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x0b\x08\x61\x73\x73\x65\x72\x74\x5f\x34\x00\x0c\x08\x61\x73\x73\x65\x72\x74\x5f\x35\x00\x0d\x08\x61\x73\x73\x65\x72\x74\x5f\x36\x00\x0e\x08\x61\x73\x73\x65\x72\x74\x5f\x37\x00\x0f\x0a\xb9\x02\x10\x08\x00\x20\x00\x20\x01\x60\x45\x0b\x08\x00\x20\x00\x20\x01\x5e\x45\x0b\x08\x00\x20\x00\x20\x01\x5f\x45\x0b\x08\x00\x20\x00\x20\x01\x5d\x45\x0b\x08\x00\x20\x00\x20\x01\x66\x45\x0b\x08\x00\x20\x00\x20\x01\x64\x45\x0b\x08\x00\x20\x00\x20\x01\x65\x45\x0b\x08\x00\x20\x00\x20\x01\x63\x45\x0b\x19\x00\x02\x40\x43\x00\x00\x00\x40\x43\x00\x00\xc0\x7f\x10\x00\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\x00\x40\x43\x00\x00\xc0\x7f\x10\x01\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\x00\x40\x43\x00\x00\xc0\x7f\x10\x02\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\x00\x40\x43\x00\x00\xc0\x7f\x10\x03\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x04\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x05\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x06\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x07\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["f32.ult"](f32(3.0), f32(2.0)), 0);
assert_return(() => $$.exports["f32.ult"](f32(2.0), f32(2.0)), 0);
assert_return(() => $$.exports["f32.ult"](f32(2.0), f32(3.0)), 1);
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["f32.ule"](f32(3.0), f32(2.0)), 0);
assert_return(() => $$.exports["f32.ule"](f32(2.0), f32(2.0)), 1);
assert_return(() => $$.exports["f32.ule"](f32(2.0), f32(3.0)), 1);
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["f32.ugt"](f32(3.0), f32(2.0)), 1);
assert_return(() => $$.exports["f32.ugt"](f32(2.0), f32(2.0)), 0);
assert_return(() => $$.exports["f32.ugt"](f32(2.0), f32(3.0)), 0);
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["f32.uge"](f32(3.0), f32(2.0)), 1);
assert_return(() => $$.exports["f32.uge"](f32(2.0), f32(2.0)), 1);
assert_return(() => $$.exports["f32.uge"](f32(2.0), f32(3.0)), 0);
assert_return(() => $$.exports["assert_3"]());
assert_return(() => $$.exports["f64.ult"](3.0, 2.0), 0);
assert_return(() => $$.exports["f64.ult"](2.0, 2.0), 0);
assert_return(() => $$.exports["f64.ult"](2.0, 3.0), 1);
assert_return(() => $$.exports["assert_4"]());
assert_return(() => $$.exports["f64.ule"](3.0, 2.0), 0);
assert_return(() => $$.exports["f64.ule"](2.0, 2.0), 1);
assert_return(() => $$.exports["f64.ule"](2.0, 3.0), 1);
assert_return(() => $$.exports["assert_5"]());
assert_return(() => $$.exports["f64.ugt"](3.0, 2.0), 1);
assert_return(() => $$.exports["f64.ugt"](2.0, 2.0), 0);
assert_return(() => $$.exports["f64.ugt"](2.0, 3.0), 0);
assert_return(() => $$.exports["assert_6"]());
assert_return(() => $$.exports["f64.uge"](3.0, 2.0), 1);
assert_return(() => $$.exports["f64.uge"](2.0, 2.0), 1);
assert_return(() => $$.exports["f64.uge"](2.0, 3.0), 0);
assert_return(() => $$.exports["assert_7"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x10\x03\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x60\x00\x00\x03\x19\x18\x00\x00\x00\x00\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x07\xf7\x02\x18\x15\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x74\x5f\x73\x65\x6c\x65\x63\x74\x00\x00\x15\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x65\x5f\x73\x65\x6c\x65\x63\x74\x00\x01\x15\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x74\x5f\x73\x65\x6c\x65\x63\x74\x00\x02\x15\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x65\x5f\x73\x65\x6c\x65\x63\x74\x00\x03\x15\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x74\x5f\x73\x65\x6c\x65\x63\x74\x00\x04\x15\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x65\x5f\x73\x65\x6c\x65\x63\x74\x00\x05\x15\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x74\x5f\x73\x65\x6c\x65\x63\x74\x00\x06\x15\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x65\x5f\x73\x65\x6c\x65\x63\x74\x00\x07\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x08\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x09\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x0a\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x0b\x08\x61\x73\x73\x65\x72\x74\x5f\x34\x00\x0c\x08\x61\x73\x73\x65\x72\x74\x5f\x35\x00\x0d\x08\x61\x73\x73\x65\x72\x74\x5f\x36\x00\x0e\x08\x61\x73\x73\x65\x72\x74\x5f\x37\x00\x0f\x08\x61\x73\x73\x65\x72\x74\x5f\x38\x00\x10\x08\x61\x73\x73\x65\x72\x74\x5f\x39\x00\x11\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x30\x00\x12\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x31\x00\x13\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x32\x00\x14\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x33\x00\x15\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x34\x00\x16\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x35\x00\x17\x0a\xb9\x05\x18\x0c\x00\x20\x00\x20\x01\x20\x00\x20\x01\x5d\x1b\x0b\x0c\x00\x20\x00\x20\x01\x20\x00\x20\x01\x5f\x1b\x0b\x0c\x00\x20\x00\x20\x01\x20\x00\x20\x01\x5e\x1b\x0b\x0c\x00\x20\x00\x20\x01\x20\x00\x20\x01\x60\x1b\x0b\x0c\x00\x20\x00\x20\x01\x20\x00\x20\x01\x63\x1b\x0b\x0c\x00\x20\x00\x20\x01\x20\x00\x20\x01\x65\x1b\x0b\x0c\x00\x20\x00\x20\x01\x20\x00\x20\x01\x64\x1b\x0b\x0c\x00\x20\x00\x20\x01\x20\x00\x20\x01\x66\x1b\x0b\x1e\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x00\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x01\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x01\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x02\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x02\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x03\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x03\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x04\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x04\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x05\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x05\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x06\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x06\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x07\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x07\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["f32.no_fold_lt_select"](f32(0.0), f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_lt_select"](f32(-0.0), f32(0.0)), f32(0.0));
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
assert_return(() => $$.exports["f32.no_fold_le_select"](f32(0.0), f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_le_select"](f32(-0.0), f32(0.0)), f32(-0.0));
assert_return(() => $$.exports["assert_4"]());
assert_return(() => $$.exports["assert_5"]());
assert_return(() => $$.exports["f32.no_fold_gt_select"](f32(0.0), f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_gt_select"](f32(-0.0), f32(0.0)), f32(0.0));
assert_return(() => $$.exports["assert_6"]());
assert_return(() => $$.exports["assert_7"]());
assert_return(() => $$.exports["f32.no_fold_ge_select"](f32(0.0), f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_ge_select"](f32(-0.0), f32(0.0)), f32(-0.0));
assert_return(() => $$.exports["assert_8"]());
assert_return(() => $$.exports["assert_9"]());
assert_return(() => $$.exports["f64.no_fold_lt_select"](0.0, -0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_lt_select"](-0.0, 0.0), 0.0);
assert_return(() => $$.exports["assert_10"]());
assert_return(() => $$.exports["assert_11"]());
assert_return(() => $$.exports["f64.no_fold_le_select"](0.0, -0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_le_select"](-0.0, 0.0), -0.0);
assert_return(() => $$.exports["assert_12"]());
assert_return(() => $$.exports["assert_13"]());
assert_return(() => $$.exports["f64.no_fold_gt_select"](0.0, -0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_gt_select"](-0.0, 0.0), 0.0);
assert_return(() => $$.exports["assert_14"]());
assert_return(() => $$.exports["assert_15"]());
assert_return(() => $$.exports["f64.no_fold_ge_select"](0.0, -0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_ge_select"](-0.0, 0.0), -0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x10\x03\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x60\x00\x00\x03\x19\x18\x00\x00\x00\x00\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x07\xd7\x02\x18\x11\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x74\x5f\x69\x66\x00\x00\x11\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x65\x5f\x69\x66\x00\x01\x11\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x74\x5f\x69\x66\x00\x02\x11\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x65\x5f\x69\x66\x00\x03\x11\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x74\x5f\x69\x66\x00\x04\x11\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x65\x5f\x69\x66\x00\x05\x11\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x74\x5f\x69\x66\x00\x06\x11\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x65\x5f\x69\x66\x00\x07\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x08\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x09\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x0a\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x0b\x08\x61\x73\x73\x65\x72\x74\x5f\x34\x00\x0c\x08\x61\x73\x73\x65\x72\x74\x5f\x35\x00\x0d\x08\x61\x73\x73\x65\x72\x74\x5f\x36\x00\x0e\x08\x61\x73\x73\x65\x72\x74\x5f\x37\x00\x0f\x08\x61\x73\x73\x65\x72\x74\x5f\x38\x00\x10\x08\x61\x73\x73\x65\x72\x74\x5f\x39\x00\x11\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x30\x00\x12\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x31\x00\x13\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x32\x00\x14\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x33\x00\x15\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x34\x00\x16\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x35\x00\x17\x0a\xd1\x05\x18\x0f\x00\x20\x00\x20\x01\x5d\x04\x7d\x20\x00\x05\x20\x01\x0b\x0b\x0f\x00\x20\x00\x20\x01\x5f\x04\x7d\x20\x00\x05\x20\x01\x0b\x0b\x0f\x00\x20\x00\x20\x01\x5e\x04\x7d\x20\x00\x05\x20\x01\x0b\x0b\x0f\x00\x20\x00\x20\x01\x60\x04\x7d\x20\x00\x05\x20\x01\x0b\x0b\x0f\x00\x20\x00\x20\x01\x63\x04\x7c\x20\x00\x05\x20\x01\x0b\x0b\x0f\x00\x20\x00\x20\x01\x65\x04\x7c\x20\x00\x05\x20\x01\x0b\x0b\x0f\x00\x20\x00\x20\x01\x64\x04\x7c\x20\x00\x05\x20\x01\x0b\x0b\x0f\x00\x20\x00\x20\x01\x66\x04\x7c\x20\x00\x05\x20\x01\x0b\x0b\x1e\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x00\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x00\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x01\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x01\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x02\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x02\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x03\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x1e\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x03\xbc\x43\x00\x00\x00\x00\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x04\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x04\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x05\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x05\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x06\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x06\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x07\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x07\xbd\x44\x00\x00\x00\x00\x00\x00\x00\x00\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["f32.no_fold_lt_if"](f32(0.0), f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_lt_if"](f32(-0.0), f32(0.0)), f32(0.0));
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
assert_return(() => $$.exports["f32.no_fold_le_if"](f32(0.0), f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_le_if"](f32(-0.0), f32(0.0)), f32(-0.0));
assert_return(() => $$.exports["assert_4"]());
assert_return(() => $$.exports["assert_5"]());
assert_return(() => $$.exports["f32.no_fold_gt_if"](f32(0.0), f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_gt_if"](f32(-0.0), f32(0.0)), f32(0.0));
assert_return(() => $$.exports["assert_6"]());
assert_return(() => $$.exports["assert_7"]());
assert_return(() => $$.exports["f32.no_fold_ge_if"](f32(0.0), f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_ge_if"](f32(-0.0), f32(0.0)), f32(-0.0));
assert_return(() => $$.exports["assert_8"]());
assert_return(() => $$.exports["assert_9"]());
assert_return(() => $$.exports["f64.no_fold_lt_if"](0.0, -0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_lt_if"](-0.0, 0.0), 0.0);
assert_return(() => $$.exports["assert_10"]());
assert_return(() => $$.exports["assert_11"]());
assert_return(() => $$.exports["f64.no_fold_le_if"](0.0, -0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_le_if"](-0.0, 0.0), -0.0);
assert_return(() => $$.exports["assert_12"]());
assert_return(() => $$.exports["assert_13"]());
assert_return(() => $$.exports["f64.no_fold_gt_if"](0.0, -0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_gt_if"](-0.0, 0.0), 0.0);
assert_return(() => $$.exports["assert_14"]());
assert_return(() => $$.exports["assert_15"]());
assert_return(() => $$.exports["f64.no_fold_ge_if"](0.0, -0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_ge_if"](-0.0, 0.0), -0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x19\x18\x00\x00\x00\x00\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x07\xaf\x03\x18\x1c\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x74\x5f\x73\x65\x6c\x65\x63\x74\x5f\x74\x6f\x5f\x61\x62\x73\x00\x00\x1c\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x65\x5f\x73\x65\x6c\x65\x63\x74\x5f\x74\x6f\x5f\x61\x62\x73\x00\x01\x1c\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x74\x5f\x73\x65\x6c\x65\x63\x74\x5f\x74\x6f\x5f\x61\x62\x73\x00\x02\x1c\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x65\x5f\x73\x65\x6c\x65\x63\x74\x5f\x74\x6f\x5f\x61\x62\x73\x00\x03\x1c\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x74\x5f\x73\x65\x6c\x65\x63\x74\x5f\x74\x6f\x5f\x61\x62\x73\x00\x04\x1c\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x65\x5f\x73\x65\x6c\x65\x63\x74\x5f\x74\x6f\x5f\x61\x62\x73\x00\x05\x1c\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x74\x5f\x73\x65\x6c\x65\x63\x74\x5f\x74\x6f\x5f\x61\x62\x73\x00\x06\x1c\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x65\x5f\x73\x65\x6c\x65\x63\x74\x5f\x74\x6f\x5f\x61\x62\x73\x00\x07\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x08\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x09\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x0a\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x0b\x08\x61\x73\x73\x65\x72\x74\x5f\x34\x00\x0c\x08\x61\x73\x73\x65\x72\x74\x5f\x35\x00\x0d\x08\x61\x73\x73\x65\x72\x74\x5f\x36\x00\x0e\x08\x61\x73\x73\x65\x72\x74\x5f\x37\x00\x0f\x08\x61\x73\x73\x65\x72\x74\x5f\x38\x00\x10\x08\x61\x73\x73\x65\x72\x74\x5f\x39\x00\x11\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x30\x00\x12\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x31\x00\x13\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x32\x00\x14\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x33\x00\x15\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x34\x00\x16\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x35\x00\x17\x0a\xf9\x04\x18\x10\x00\x20\x00\x8c\x20\x00\x20\x00\x43\x00\x00\x00\x00\x5d\x1b\x0b\x10\x00\x20\x00\x8c\x20\x00\x20\x00\x43\x00\x00\x00\x80\x5f\x1b\x0b\x10\x00\x20\x00\x20\x00\x8c\x20\x00\x43\x00\x00\x00\x80\x5e\x1b\x0b\x10\x00\x20\x00\x20\x00\x8c\x20\x00\x43\x00\x00\x00\x00\x60\x1b\x0b\x14\x00\x20\x00\x9a\x20\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x63\x1b\x0b\x14\x00\x20\x00\x9a\x20\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x80\x65\x1b\x0b\x14\x00\x20\x00\x20\x00\x9a\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x80\x64\x1b\x0b\x14\x00\x20\x00\x20\x00\x9a\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x66\x1b\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xa0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\xff\x10\x00\xbc\x43\x00\x00\xc0\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x01\xbc\x43\x00\x00\xa0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\xff\x10\x01\xbc\x43\x00\x00\xc0\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x02\xbc\x43\x00\x00\xa0\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\xff\x10\x02\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x03\xbc\x43\x00\x00\xa0\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\xff\x10\x03\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x04\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x04\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x05\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x05\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x06\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x06\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x07\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x07\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["f32.no_fold_lt_select_to_abs"](f32(0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_lt_select_to_abs"](f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
assert_return(() => $$.exports["f32.no_fold_le_select_to_abs"](f32(0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_le_select_to_abs"](f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["assert_4"]());
assert_return(() => $$.exports["assert_5"]());
assert_return(() => $$.exports["f32.no_fold_gt_select_to_abs"](f32(0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_gt_select_to_abs"](f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["assert_6"]());
assert_return(() => $$.exports["assert_7"]());
assert_return(() => $$.exports["f32.no_fold_ge_select_to_abs"](f32(0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_ge_select_to_abs"](f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["assert_8"]());
assert_return(() => $$.exports["assert_9"]());
assert_return(() => $$.exports["f64.no_fold_lt_select_to_abs"](0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_lt_select_to_abs"](-0.0), -0.0);
assert_return(() => $$.exports["assert_10"]());
assert_return(() => $$.exports["assert_11"]());
assert_return(() => $$.exports["f64.no_fold_le_select_to_abs"](0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_le_select_to_abs"](-0.0), 0.0);
assert_return(() => $$.exports["assert_12"]());
assert_return(() => $$.exports["assert_13"]());
assert_return(() => $$.exports["f64.no_fold_gt_select_to_abs"](0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_gt_select_to_abs"](-0.0), 0.0);
assert_return(() => $$.exports["assert_14"]());
assert_return(() => $$.exports["assert_15"]());
assert_return(() => $$.exports["f64.no_fold_ge_select_to_abs"](0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_ge_select_to_abs"](-0.0), -0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0e\x03\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x00\x00\x03\x19\x18\x00\x00\x00\x00\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x02\x07\x8f\x03\x18\x18\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x74\x5f\x69\x66\x5f\x74\x6f\x5f\x61\x62\x73\x00\x00\x18\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x65\x5f\x69\x66\x5f\x74\x6f\x5f\x61\x62\x73\x00\x01\x18\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x74\x5f\x69\x66\x5f\x74\x6f\x5f\x61\x62\x73\x00\x02\x18\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x65\x5f\x69\x66\x5f\x74\x6f\x5f\x61\x62\x73\x00\x03\x18\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x74\x5f\x69\x66\x5f\x74\x6f\x5f\x61\x62\x73\x00\x04\x18\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6c\x65\x5f\x69\x66\x5f\x74\x6f\x5f\x61\x62\x73\x00\x05\x18\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x74\x5f\x69\x66\x5f\x74\x6f\x5f\x61\x62\x73\x00\x06\x18\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x67\x65\x5f\x69\x66\x5f\x74\x6f\x5f\x61\x62\x73\x00\x07\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x08\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x09\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x0a\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x0b\x08\x61\x73\x73\x65\x72\x74\x5f\x34\x00\x0c\x08\x61\x73\x73\x65\x72\x74\x5f\x35\x00\x0d\x08\x61\x73\x73\x65\x72\x74\x5f\x36\x00\x0e\x08\x61\x73\x73\x65\x72\x74\x5f\x37\x00\x0f\x08\x61\x73\x73\x65\x72\x74\x5f\x38\x00\x10\x08\x61\x73\x73\x65\x72\x74\x5f\x39\x00\x11\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x30\x00\x12\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x31\x00\x13\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x32\x00\x14\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x33\x00\x15\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x34\x00\x16\x09\x61\x73\x73\x65\x72\x74\x5f\x31\x35\x00\x17\x0a\x91\x05\x18\x13\x00\x20\x00\x43\x00\x00\x00\x00\x5d\x04\x7d\x20\x00\x8c\x05\x20\x00\x0b\x0b\x13\x00\x20\x00\x43\x00\x00\x00\x80\x5f\x04\x7d\x20\x00\x8c\x05\x20\x00\x0b\x0b\x13\x00\x20\x00\x43\x00\x00\x00\x80\x5e\x04\x7d\x20\x00\x05\x20\x00\x8c\x0b\x0b\x13\x00\x20\x00\x43\x00\x00\x00\x00\x60\x04\x7d\x20\x00\x05\x20\x00\x8c\x0b\x0b\x17\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x63\x04\x7c\x20\x00\x9a\x05\x20\x00\x0b\x0b\x17\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x80\x65\x04\x7c\x20\x00\x9a\x05\x20\x00\x0b\x0b\x17\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x80\x64\x04\x7c\x20\x00\x05\x20\x00\x9a\x0b\x0b\x17\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x66\x04\x7c\x20\x00\x05\x20\x00\x9a\x0b\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x00\xbc\x43\x00\x00\xa0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\xff\x10\x00\xbc\x43\x00\x00\xc0\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x01\xbc\x43\x00\x00\xa0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\xff\x10\x01\xbc\x43\x00\x00\xc0\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x02\xbc\x43\x00\x00\xa0\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\xff\x10\x02\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xa0\x7f\x10\x03\xbc\x43\x00\x00\xa0\xff\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\xff\x10\x03\xbc\x43\x00\x00\xc0\x7f\xbc\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x04\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x04\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x05\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x05\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x06\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x06\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf4\x7f\x10\x07\xbd\x44\x00\x00\x00\x00\x00\x00\xf4\xff\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\xff\x10\x07\xbd\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\xbd\x51\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["f32.no_fold_lt_if_to_abs"](f32(0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_lt_if_to_abs"](f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
assert_return(() => $$.exports["f32.no_fold_le_if_to_abs"](f32(0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_le_if_to_abs"](f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["assert_4"]());
assert_return(() => $$.exports["assert_5"]());
assert_return(() => $$.exports["f32.no_fold_gt_if_to_abs"](f32(0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_gt_if_to_abs"](f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["assert_6"]());
assert_return(() => $$.exports["assert_7"]());
assert_return(() => $$.exports["f32.no_fold_ge_if_to_abs"](f32(0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_ge_if_to_abs"](f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["assert_8"]());
assert_return(() => $$.exports["assert_9"]());
assert_return(() => $$.exports["f64.no_fold_lt_if_to_abs"](0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_lt_if_to_abs"](-0.0), -0.0);
assert_return(() => $$.exports["assert_10"]());
assert_return(() => $$.exports["assert_11"]());
assert_return(() => $$.exports["f64.no_fold_le_if_to_abs"](0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_le_if_to_abs"](-0.0), 0.0);
assert_return(() => $$.exports["assert_12"]());
assert_return(() => $$.exports["assert_13"]());
assert_return(() => $$.exports["f64.no_fold_gt_if_to_abs"](0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_gt_if_to_abs"](-0.0), 0.0);
assert_return(() => $$.exports["assert_14"]());
assert_return(() => $$.exports["assert_15"]());
assert_return(() => $$.exports["f64.no_fold_ge_if_to_abs"](0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_ge_if_to_abs"](-0.0), -0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7d\x03\x02\x01\x00\x07\x18\x01\x14\x69\x6e\x63\x6f\x72\x72\x65\x63\x74\x5f\x63\x6f\x72\x72\x65\x63\x74\x69\x6f\x6e\x00\x00\x0a\x1b\x01\x19\x00\x43\xbe\x9f\xaa\x3f\x43\xcd\xcc\x9c\x3f\x92\x43\xbe\x9f\xaa\x3f\x93\x43\xcd\xcc\x9c\x3f\x93\x0b");
assert_return(() => $$.exports["incorrect_correction"](), f32(1.19209289551e-07));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7c\x03\x02\x01\x00\x07\x18\x01\x14\x69\x6e\x63\x6f\x72\x72\x65\x63\x74\x5f\x63\x6f\x72\x72\x65\x63\x74\x69\x6f\x6e\x00\x00\x0a\x2b\x01\x29\x00\x44\x87\x16\xd9\xce\xf7\x53\xf5\x3f\x44\x9a\x99\x99\x99\x99\x99\xf3\x3f\xa0\x44\x87\x16\xd9\xce\xf7\x53\xf5\x3f\xa1\x44\x9a\x99\x99\x99\x99\x99\xf3\x3f\xa1\x0b");
assert_return(() => $$.exports["incorrect_correction"](), -2.220446049250313e-16);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7d\x03\x02\x01\x00\x07\x0d\x01\x09\x63\x61\x6c\x63\x75\x6c\x61\x74\x65\x00\x00\x0a\x4a\x01\x48\x01\x05\x7d\x43\x00\x40\x1c\x43\x21\x00\x43\x55\x55\x50\x43\x21\x01\x43\x15\xc7\xe3\x3f\x21\x02\x20\x01\x8c\x20\x00\x94\x20\x00\x20\x02\x94\x20\x01\x93\x95\x21\x03\x20\x01\x8c\x20\x00\x94\x20\x00\x20\x02\x94\x20\x01\x93\x95\x21\x04\x02\x40\x20\x03\x20\x04\x5b\x0d\x00\x00\x0b\x20\x04\x0b");
assert_return(() => $$.exports["calculate"](), f32(-466.926849365));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x05\x01\x60\x00\x01\x7c\x03\x02\x01\x00\x07\x0d\x01\x09\x63\x61\x6c\x63\x75\x6c\x61\x74\x65\x00\x00\x0a\x56\x01\x54\x01\x05\x7c\x44\x00\x00\x00\x00\x00\x88\x63\x40\x21\x00\x44\x4b\x06\xab\xaa\xaa\x0a\x6a\x40\x21\x01\x44\x96\xd0\xe3\xaa\xe2\x78\xfc\x3f\x21\x02\x20\x01\x9a\x20\x00\xa2\x20\x00\x20\x02\xa2\x20\x01\xa1\xa3\x21\x03\x20\x01\x9a\x20\x00\xa2\x20\x00\x20\x02\xa2\x20\x01\xa1\xa3\x21\x04\x02\x40\x20\x03\x20\x04\x61\x0d\x00\x00\x0b\x20\x04\x0b");
assert_return(() => $$.exports["calculate"](), -466.926956301738);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x01\x7d\x01\x7d\x03\x02\x01\x00\x07\x10\x01\x0c\x6c\x6c\x76\x6d\x5f\x70\x72\x32\x36\x37\x34\x36\x00\x00\x0a\x12\x01\x10\x00\x43\x00\x00\x00\x00\x43\x00\x00\x00\x80\x20\x00\x93\x93\x0b");
assert_return(() => $$.exports["llvm_pr26746"](f32(-0.0)), f32(0.0));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x01\x7f\x01\x7d\x03\x02\x01\x00\x07\x10\x01\x0c\x6c\x6c\x76\x6d\x5f\x70\x72\x32\x37\x31\x35\x33\x00\x00\x0a\x14\x01\x12\x00\x20\x00\x41\xff\xff\xff\xff\x00\x71\xb2\x43\x00\x00\x00\xcb\x92\x0b");
assert_return(() => $$.exports["llvm_pr27153"](33554434), f32(25165824.0));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x07\x01\x60\x02\x7f\x7f\x01\x7d\x03\x02\x01\x00\x07\x10\x01\x0c\x6c\x6c\x76\x6d\x5f\x70\x72\x32\x37\x30\x33\x36\x00\x00\x0a\x17\x01\x15\x00\x20\x00\x41\xcb\xff\x87\x74\x72\xb2\x20\x01\x41\x80\x80\x90\x07\x71\xb2\x92\x0b");
assert_return(() => $$.exports["llvm_pr27036"](-25034805, 14942208), f32(-10092596.0));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x17\x03\x60\x04\x7c\x7c\x7c\x7c\x01\x7c\x60\x03\x7c\x7c\x7c\x01\x7c\x60\x03\x7d\x7d\x7d\x01\x7d\x03\x04\x03\x00\x01\x02\x07\x22\x03\x08\x74\x68\x65\x70\x61\x73\x74\x30\x00\x00\x08\x74\x68\x65\x70\x61\x73\x74\x31\x00\x01\x08\x74\x68\x65\x70\x61\x73\x74\x32\x00\x02\x0a\x25\x03\x0d\x00\x20\x00\x20\x01\xa2\x20\x02\x20\x03\xa2\xa3\x0b\x0a\x00\x20\x00\x20\x01\xa2\x20\x02\xa1\x0b\x0a\x00\x20\x00\x20\x01\x94\x20\x02\x94\x0b");
assert_return(() => $$.exports["thepast0"](4.450147717014403e-308, 0.9999999999999999, 2.0, 0.5), 4.4501477170144023e-308);
assert_return(() => $$.exports["thepast1"](5.551115123125783e-17, 0.9999999999999999, 5.551115123125783e-17), -6.162975822039155e-33);
assert_return(() => $$.exports["thepast2"](f32(2.35098870164e-38), f32(0.5), f32(1.0)), f32(1.17549435082e-38));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x06\x01\x60\x01\x7d\x01\x7d\x03\x02\x01\x00\x07\x0b\x01\x07\x69\x6e\x76\x65\x72\x73\x65\x00\x00\x0a\x0c\x01\x0a\x00\x43\x00\x00\x80\x3f\x20\x00\x95\x0b");
assert_return(() => $$.exports["inverse"](f32(96.0)), f32(0.0104166669771));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x27\x02\x10\x66\x33\x32\x5f\x73\x71\x72\x74\x5f\x6d\x69\x6e\x75\x73\x5f\x32\x00\x00\x10\x66\x36\x34\x5f\x73\x71\x72\x74\x5f\x6d\x69\x6e\x75\x73\x5f\x32\x00\x01\x0a\x1d\x02\x0b\x00\x20\x00\x91\x43\x00\x00\x00\x40\x93\x0b\x0f\x00\x20\x00\x9f\x44\x00\x00\x00\x00\x00\x00\x00\x40\xa1\x0b");
assert_return(() => $$.exports["f32_sqrt_minus_2"](f32(4.0)), f32(0.0));
assert_return(() => $$.exports["f64_sqrt_minus_2"](4.0), 0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x35\x02\x17\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x72\x65\x63\x69\x70\x5f\x72\x65\x63\x69\x70\x00\x00\x17\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x72\x65\x63\x69\x70\x5f\x72\x65\x63\x69\x70\x00\x01\x0a\x2b\x02\x10\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x80\x3f\x20\x00\x95\x95\x0b\x18\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x20\x00\xa3\xa3\x0b");
assert_return(() => $$.exports["f32.no_fold_recip_recip"](f32(-7.04357879987e+19)), f32(-7.04357836006e+19));
assert_return(() => $$.exports["f32.no_fold_recip_recip"](f32(1.24661006725e-23)), f32(1.24660998836e-23));
assert_return(() => $$.exports["f32.no_fold_recip_recip"](f32(9.71845454401e-20)), f32(9.71845519024e-20));
assert_return(() => $$.exports["f32.no_fold_recip_recip"](f32(-30.4007587433)), f32(-30.4007606506));
assert_return(() => $$.exports["f32.no_fold_recip_recip"](f32(2.33165919039e+21)), f32(2.33165904965e+21));
assert_return(() => $$.exports["f32.no_fold_recip_recip"](f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_recip_recip"](f32(0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_recip_recip"](-Infinity), -Infinity);
assert_return(() => $$.exports["f32.no_fold_recip_recip"](Infinity), Infinity);
assert_return(() => $$.exports["f64.no_fold_recip_recip"](-6.5797153436288686e+44), -6.579715343628869e+44);
assert_return(() => $$.exports["f64.no_fold_recip_recip"](-1.4424693186857643e+20), -1.4424693186857642e+20);
assert_return(() => $$.exports["f64.no_fold_recip_recip"](1.8499468920623135e+50), 1.8499468920623133e+50);
assert_return(() => $$.exports["f64.no_fold_recip_recip"](5.779584288006583e-207), 5.779584288006582e-207);
assert_return(() => $$.exports["f64.no_fold_recip_recip"](5.150117869614164e+271), 5.1501178696141634e+271);
assert_return(() => $$.exports["f64.no_fold_recip_recip"](-0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_recip_recip"](0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_recip_recip"](-Infinity), -Infinity);
assert_return(() => $$.exports["f64.no_fold_recip_recip"](Infinity), Infinity);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x3b\x02\x1a\x66\x33\x32\x2e\x6e\x6f\x5f\x61\x6c\x67\x65\x62\x72\x61\x69\x63\x5f\x66\x61\x63\x74\x6f\x72\x69\x6e\x67\x00\x00\x1a\x66\x36\x34\x2e\x6e\x6f\x5f\x61\x6c\x67\x65\x62\x72\x61\x69\x63\x5f\x66\x61\x63\x74\x6f\x72\x69\x6e\x67\x00\x01\x0a\x1d\x02\x0d\x00\x20\x00\x20\x01\x92\x20\x00\x20\x01\x93\x94\x0b\x0d\x00\x20\x00\x20\x01\xa0\x20\x00\x20\x01\xa1\xa2\x0b");
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(-5.37118646541e-17), f32(9.74432790571e-17)), f32(-6.61022864732e-33));
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(-19756732.0), f32(32770204.0)), f32(-6.83557802476e+14));
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(5.23141487002e+13), f32(-1.45309984358e+14)), f32(-1.83782213555e+28));
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(195260.375), f32(-227.757232666)), f32(38126563328.0));
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(-237.487060547), f32(-972341.5)), f32(-9.45447960576e+11));
assert_return(() => $$.exports["f64.no_algebraic_factoring"](9.639720335949767e-144, 8.019175443606207e-140), -6.430717386609473e-279);
assert_return(() => $$.exports["f64.no_algebraic_factoring"](5.166066590392027e-114, 1.494333315888213e-120), 2.6688244016362468e-227);
assert_return(() => $$.exports["f64.no_algebraic_factoring"](-2.866135870517635e-114, -1.2114355254268516e-111), -1.4675678175314036e-222);
assert_return(() => $$.exports["f64.no_algebraic_factoring"](-1.2920992810078149e+54, 6.62717187728034e+56), -4.391924013896023e+113);
assert_return(() => $$.exports["f64.no_algebraic_factoring"](2.624279568901057e+34, -1.6250233986050802e+27), 6.886843255751491e+68);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x3b\x02\x1a\x66\x33\x32\x2e\x6e\x6f\x5f\x61\x6c\x67\x65\x62\x72\x61\x69\x63\x5f\x66\x61\x63\x74\x6f\x72\x69\x6e\x67\x00\x00\x1a\x66\x36\x34\x2e\x6e\x6f\x5f\x61\x6c\x67\x65\x62\x72\x61\x69\x63\x5f\x66\x61\x63\x74\x6f\x72\x69\x6e\x67\x00\x01\x0a\x1d\x02\x0d\x00\x20\x00\x20\x00\x94\x20\x01\x20\x01\x94\x93\x0b\x0d\x00\x20\x00\x20\x00\xa2\x20\x01\x20\x01\xa2\xa1\x0b");
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(2.21029961098e-14), f32(3.14652752638e-12)), f32(-9.90014756254e-24));
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(-3.28946076877e+12), f32(-15941538816.0)), f32(1.08202986009e+25));
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(0.000364975421689), f32(-0.000161537143867)), f32(1.0711280396e-07));
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(6.53832660214e-14), f32(-2.74127729115e-14)), f32(3.52351117404e-27));
assert_return(() => $$.exports["f32.no_algebraic_factoring"](f32(3.60968191004e+15), f32(-5.26010442947e+15)), f32(-1.46388960479e+31));
assert_return(() => $$.exports["f64.no_algebraic_factoring"](2.136404543498951e+107, -2.928587558394428e+101), 4.564224373474385e+214);
assert_return(() => $$.exports["f64.no_algebraic_factoring"](-1.2290171159244358e+93, -8.2221589190166e+99), -6.760389728956271e+199);
assert_return(() => $$.exports["f64.no_algebraic_factoring"](5477733829752.252, -970738900948.5906), 2.9063233895797397e+25);
assert_return(() => $$.exports["f64.no_algebraic_factoring"](-1.0689141744923551e+55, -1.7337839359373804e+50), 1.1425775121300724e+110);
assert_return(() => $$.exports["f64.no_algebraic_factoring"](-1.0295699877022106e-71, -8.952274637805908e-72), 2.5858214767010105e-143);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x07\x01\x60\x02\x7f\x7f\x01\x7d\x03\x03\x02\x00\x00\x05\x04\x01\x01\x01\x01\x07\x21\x02\x0d\x66\x33\x32\x2e\x6b\x61\x68\x61\x6e\x5f\x73\x75\x6d\x00\x00\x0d\x66\x33\x32\x2e\x70\x6c\x61\x69\x6e\x5f\x73\x75\x6d\x00\x01\x0a\x62\x02\x37\x01\x03\x7d\x02\x40\x03\x40\x20\x03\x20\x00\x2a\x02\x00\x20\x04\x93\x22\x04\x92\x22\x02\x20\x03\x93\x20\x04\x93\x21\x04\x20\x00\x41\x04\x6a\x21\x00\x20\x02\x21\x03\x20\x01\x41\x7f\x6a\x22\x01\x0d\x00\x0b\x0b\x20\x02\x0b\x28\x01\x01\x7d\x02\x40\x03\x40\x20\x02\x20\x00\x2a\x02\x00\x92\x21\x02\x20\x00\x41\x04\x6a\x21\x00\x20\x01\x41\x7f\x6a\x21\x01\x20\x01\x0d\x00\x0b\x0b\x20\x02\x0b\x0b\x87\x08\x01\x00\x41\x00\x0b\x80\x08\xc4\xc5\x57\x24\xa5\x84\xc8\x0b\x6d\xb8\x4b\x2e\xf2\x76\x17\x1c\xca\x4a\x56\x1e\x1b\x6e\x71\x22\x5d\x17\x1e\x6e\xbf\xcd\x14\x5c\xc7\x21\x55\x51\x39\x9c\x1f\xb2\x51\xf0\xa3\x93\xd7\xc1\x2c\xae\x7e\xa8\x28\x3a\x01\x21\xf4\x0a\x58\x93\xf8\x42\x77\x9f\x83\x39\x6a\x5f\xba\xf7\x0a\xd8\x51\x6a\x34\xca\xad\xc6\x34\x0e\xd8\x26\xdc\x4c\x33\x1c\xed\x29\x90\xa8\x78\x0f\xd1\xce\x76\x31\x23\x83\xb8\x35\xe8\xf2\x44\xb0\xd3\xa1\xfc\xbb\x32\xe1\xb0\xba\x69\x44\x09\xd6\xd9\x7d\xff\x2e\xc0\x5a\x36\x14\x33\x14\x3e\xa9\xfa\x87\x6d\x8b\xbc\xce\x9d\xa7\xfd\xc4\xe9\x85\x3f\xdd\xd7\xe1\x18\xa6\x50\x26\x72\x6e\x3f\x73\x0f\xf8\x12\x93\x23\x34\x61\x76\x12\x48\xc0\x9b\x05\x93\xeb\xac\x86\xde\x94\x3e\x55\xe8\x8c\xe8\xdd\xe4\xfc\x95\x47\xbe\x56\x03\x21\x20\x4c\xe6\xbf\x7b\xf6\x7f\xd5\xba\x73\x1c\xc1\x14\x8f\xc4\x27\x96\xb3\xbd\x33\xff\x78\x41\x5f\xc0\x5a\xce\xf6\x67\x6e\x73\x9a\x17\x66\x70\x03\xf8\xce\x27\xa3\x52\xb2\x9f\x3b\xbf\xfb\xae\xed\xd3\x5a\xf8\x37\x57\xf0\xf5\x6e\xef\xb1\x4d\x70\x3d\x54\xa7\x01\x9a\x85\x08\x48\x91\xf5\x9d\x0c\x60\x87\x5b\xd9\x54\x1e\x51\x6d\x88\x8e\x08\x8c\xa5\x71\x3a\x56\x08\x67\x46\x8f\x8f\x13\x2a\x2c\xec\x2c\x1f\xb4\x62\x2b\x6f\x41\x0a\xc4\x65\x42\xa2\x31\x6b\x2c\x7d\x3e\xbb\x75\xac\x86\x97\x30\xd9\x48\xcd\x9a\x1f\x56\xc4\xc6\xe4\x12\xc0\x9d\xfb\xee\x02\x8c\xce\x1c\xf2\x1e\xa1\x78\x23\xdb\xc4\x1e\x49\x03\xd3\x71\xcc\x08\x50\xc5\xd8\x5c\xed\xd5\xb5\x65\xac\xb5\xc9\x21\xd2\xc9\x29\x76\xde\xf0\x30\x1a\x5b\x3c\xf2\x3b\xdb\x3a\x39\x82\x3a\x16\x08\x6f\xa8\xf1\xbe\x69\x69\x99\x71\xa6\x05\xd3\x14\x93\x2a\x16\xf2\x2f\x11\xc7\x7e\x20\xbb\x91\x44\xee\xf8\xe4\x01\x53\xc0\xb9\x7f\xf0\xbf\xf0\x03\x9c\x6d\xb1\xdf\xa2\x44\x01\x6d\x6b\x71\x2b\x5c\xb3\x21\x19\x46\x5e\x8f\xdb\x91\xd3\x7c\x78\x6b\xb7\x12\x00\x8f\xeb\xbd\x8a\xf5\xd4\x2e\xc4\xc1\x1e\xdf\x73\x63\x59\x47\x49\x03\x0a\xb7\xcf\x24\xcf\x9c\x0e\x44\x7a\x9e\x14\xfb\x42\xbf\x9d\x39\x30\x9e\xa0\xab\x2f\xd1\xae\x9e\x6a\x83\x43\xe3\x55\x7d\x85\xbf\x63\x8a\xf8\x96\x10\x1f\xfe\x6d\xe7\x22\x1b\xe1\x69\x46\x8a\x44\xc8\xc8\xf9\x0c\x2b\x19\x07\xa5\x02\x3e\xf2\x30\x10\x9a\x85\x8a\x5f\xef\x81\x45\xa0\x77\xb1\x03\x10\x73\x4b\xae\x98\x9d\x47\xbf\x9a\x2d\x3a\xd5\x0f\x03\x66\xe3\x3d\x53\xd9\x40\xce\x1f\x6f\x32\x2f\x21\x2b\x23\x21\x6c\x62\xd4\xa7\x3e\xa8\xce\x28\x31\x2d\x00\x3d\x67\x5e\xaf\xa0\xcf\x2e\xd2\xb9\x6b\x84\xeb\x69\x08\x3c\x62\x36\xbe\x12\xfd\x36\x7f\x88\x3e\xad\xbc\x0b\xc0\x41\xc4\x50\xb6\xe3\x50\x31\xe8\xce\xe2\x96\x65\x55\x9c\x16\x46\xe6\xb0\x2d\x3a\xe8\x81\x05\xb0\xbf\x34\xf7\xbc\x10\x1c\xfb\xcc\x3c\xf1\x85\x97\x42\x9f\xeb\x14\x8d\x3c\xbf\xd7\x17\x88\x49\x9d\x8b\x2b\xb2\x3a\x83\xd1\x4f\x04\x9e\xa1\x0f\xad\x08\x9d\x54\xaf\xd1\x82\xc3\xec\x32\x2f\x02\x8f\x05\x21\x2d\xa2\xb7\xe4\xf4\x6f\x2e\x81\x2b\x0b\x9c\xfc\xcb\xfe\x74\x02\xf9\xdb\xf4\xf3\xea\x00\xa8\xec\xd1\x99\x74\x26\xdd\xd6\x34\xd5\x25\xb1\x46\xdd\x9c\xaa\x71\xf5\x60\xb0\x88\xc8\xe0\x0b\x59\x5a\x25\x4f\x29\x66\xf9\xe3\x2e\xfe\xe9\xda\xe5\x18\x4f\x27\x62\xf4\xce\xa4\x21\x95\x74\xc7\x57\x64\x27\x9a\x4c\xfd\x54\x7d\x61\xce\xc3\xac\x87\x46\x9c\xfa\xff\x09\xca\x79\x97\x67\x24\x74\xca\xd4\x21\x83\x26\x25\x19\x12\x37\x64\x19\xe5\x65\xe0\x74\x75\x8e\xdd\xc8\xef\x74\xc7\xd8\x21\x2b\x79\x04\x51\x46\x65\x60\x03\x5d\xfa\xd8\xf4\x65\xa4\x9e\x5d\x23\xda\xd7\x8a\x92\x80\xa4\xde\x78\x3c\xf1\x57\x42\x6d\xcd\xc9\x2f\xd5\xa4\x9e\xab\x40\xf4\xcb\x1b\xd7\xa3\xca\xfc\xeb\xa7\x01\xb2\x9a\x69\x4e\x46\x9b\x18\x4e\xdd\x79\xa7\xaa\xa6\x52\x39\x1e\xef\x30\xcc\x9b\xbd\x5b\xee\x4c\x21\x6d\x30\x00\x72\xb0\x46\x5f\x08\xcf\xc5\xb9\xe0\x3e\xc2\xb3\x0c\xdc\x8e\x64\xde\x19\x42\x79\xcf\x43\xea\x43\x5d\x8e\x88\xf7\xab\x15\xdc\x3f\xc8\x67\x20\xdb\xb8\x64\xb1\x47\x1f\xde\xf2\xcb\x3f\x59\x9f\xd8\x46\x90\xdc\xae\x2f\x22\xf9\xe2\x31\x89\xd9\x9c\x1c\x4c\xd3\xa9\x4a\x57\x84\x9c\x9f\xea\x2c\x3c\xae\x3c\xc3\x1e\x8b\xe5\x4e\x17\x01\x25\xdb\x34\x46\x5f\x15\xea\x05\x0c\x7c\xd9\x45\x8c\x19\xd0\x73\x8a\x96\x16\xdd\x44\xf9\x05\xb7\x5b\x71\xb0\xe6\x21\x36\x5f\x75\x89\x91\x73\x75\xab\x7d\xae\xd3\x73\xec\x37\xc6\xea\x55\x75\xef\xea\xab\x8b\x7b\x11\xdc\x6d\x1a\xb2\x6a\xc4\x25\xcf\xaa\xe3\x9f\x49\x49\x89\xcb\x37\x9b\x0a\xa7\x01\x60\x70\xdc\xb7\xc8\x83\xe1\x42\xf5\xbe\xad\x62\x94\xad\x8d\xa1");
assert_return(() => $$.exports["f32.kahan_sum"](0, 256), f32(-2.15581382462e+31));
assert_return(() => $$.exports["f32.plain_sum"](0, 256), f32(-1.64875394721e+31));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x07\x01\x60\x02\x7f\x7f\x01\x7c\x03\x03\x02\x00\x00\x05\x04\x01\x01\x01\x01\x07\x21\x02\x0d\x66\x36\x34\x2e\x6b\x61\x68\x61\x6e\x5f\x73\x75\x6d\x00\x00\x0d\x66\x36\x34\x2e\x70\x6c\x61\x69\x6e\x5f\x73\x75\x6d\x00\x01\x0a\x62\x02\x37\x01\x03\x7c\x02\x40\x03\x40\x20\x03\x20\x00\x2b\x03\x00\x20\x04\xa1\x22\x04\xa0\x22\x02\x20\x03\xa1\x20\x04\xa1\x21\x04\x20\x00\x41\x08\x6a\x21\x00\x20\x02\x21\x03\x20\x01\x41\x7f\x6a\x22\x01\x0d\x00\x0b\x0b\x20\x02\x0b\x28\x01\x01\x7c\x02\x40\x03\x40\x20\x02\x20\x00\x2b\x03\x00\xa0\x21\x02\x20\x00\x41\x08\x6a\x21\x00\x20\x01\x41\x7f\x6a\x21\x01\x20\x01\x0d\x00\x0b\x0b\x20\x02\x0b\x0b\x87\x10\x01\x00\x41\x00\x0b\x80\x10\x13\x05\x84\x42\x5d\xa2\x2c\xc6\x43\xdb\x55\xa9\xcd\xda\x55\xe3\x73\xfc\x58\xd6\xba\xd5\x00\xfd\x83\x35\x42\x88\x8b\x13\x5d\x38\x4a\x47\x0d\x72\x73\xa1\x1a\xef\xc4\x45\x17\x57\xd8\xc9\x46\xe0\x8d\x6c\xe1\x37\x70\xc8\x83\x5b\x55\x5e\x5a\x2d\x73\x1e\x56\xc8\xe1\x6d\x69\x14\x78\x0a\x8a\x5a\x64\x3a\x09\xc7\xa8\x87\xc5\xf0\xd3\x5d\xe6\x03\xfc\x93\xbe\x26\xca\xd6\xa9\x91\x60\xbd\xb0\xed\xae\xf7\x30\x7e\x92\x3a\x6f\xa7\x59\x8e\xaa\x7d\xbf\x67\x58\x2a\x54\xf8\x4e\xfe\xed\x35\x58\xa6\x51\xbf\x42\xe5\x4b\x66\x27\x24\x6d\x7f\x42\x2d\x28\x92\x18\xec\x08\xae\xe7\x55\xda\xb1\xa6\x65\xa5\x72\x50\x47\x1b\xb8\xa9\x54\xd7\xa6\x06\x5b\x0f\x42\x58\x83\x8a\x17\x82\xc6\x10\x43\xa0\xc0\x2e\x6d\xbc\x5a\x85\x53\x72\x7f\xad\x44\xbc\x30\x3c\x55\xb2\x24\x9a\x74\x3a\x9e\xe1\xd8\x0f\x70\xfc\xa9\x3a\xcd\x93\x4b\xec\xe3\x7e\xdd\x5d\x27\xcd\xf8\xa0\x9d\x1c\x11\xc0\x57\x2e\xfd\xc8\x13\x32\xcc\x3a\x1a\x7d\xa3\x41\x55\xed\xc3\x82\x49\x2a\x04\x1e\xef\x73\xb9\x2e\x2e\xe3\x5f\xf4\xdf\xe6\xb2\x33\x0c\x39\x3f\x6f\x44\x6a\x03\xc1\x42\xb9\xfa\xb1\xc8\xed\xa5\x58\x99\x7f\xed\xb4\x72\x9e\x79\xeb\xfb\x43\x82\x45\xaa\xbb\x95\xd2\xff\x28\x9e\xf6\xa1\xad\x95\xd6\x55\x95\x0d\x6f\x60\x11\xc7\x78\x3e\x49\xf2\x7e\x48\xf4\xa2\x71\xd0\x13\x8e\xb3\xde\x99\x52\xe3\x45\x74\xea\x76\x0e\x1b\x2a\xc8\xee\x14\x01\xc4\x50\x5b\x36\x3c\xef\xba\x72\xa2\xa6\x08\xf8\x7b\x36\x9d\xf9\xef\x0b\xc7\x56\x2d\x5c\xf0\x9d\x5d\xde\xfc\xb8\xad\x0f\x64\x0e\x97\x15\x32\x26\xc2\x31\xe6\x05\x1e\xef\xcb\x17\x1b\x6d\x15\x0b\x74\x5d\xd3\x2e\xf8\x6b\x86\xb4\xba\x73\x52\x53\x99\xa9\x76\x20\x45\xc9\x40\x80\x6b\x14\xed\xa1\xfa\x80\x46\xe6\x26\xd2\xe6\x98\xc4\x57\xbf\xc4\x1c\xa4\x90\x7a\x36\x94\x14\xba\x15\x89\x6e\xe6\x9c\x37\x8c\xf4\xde\x12\x22\x5d\xa1\x79\x50\x67\x0d\x3d\x7a\xe9\xd4\xaa\x2e\x7f\x2a\x7a\x30\x3d\xea\x5d\x12\x48\xfe\xe1\x18\xcd\xa4\x57\xa2\x87\x3e\xb6\x9a\x8b\xdb\xda\x9d\x78\x9c\xcf\x8d\xb1\x4f\x90\xb4\x34\xe0\x9d\xf6\xca\xfe\x4c\x3b\x78\x6d\x0a\x5c\x18\x9f\x61\xb9\xdd\xb4\xe0\x0f\x76\xe0\x1b\x69\x0d\x5e\x58\x73\x70\x5e\x0e\x2d\xa1\x7d\xff\x20\xeb\x91\x34\x92\xac\x38\x72\x2a\x1f\x8e\x71\x2e\x6a\xf1\xaf\xc7\x27\x70\xd9\xc4\x57\xf7\xd2\x3c\x1d\xb8\xf0\xf0\x64\xcf\xdc\xae\xbe\xa3\xcc\x3e\x22\x7d\x4e\x69\x21\x63\x17\xed\x03\x02\x54\x9a\x0f\x50\x4e\x13\x5a\x35\xa1\x22\xa4\xdf\x86\xc2\x74\x79\x16\xb8\x69\x69\xa0\x52\x5d\x11\x64\xbd\x5b\x93\xfc\x69\xa0\xf4\x13\xd0\x81\x51\xdd\xfa\x0c\x15\xc3\x7a\xc9\x62\x7a\xa9\x1d\xc9\xe6\x5a\xb3\x5b\x97\x02\x3c\x64\x22\x12\x3c\x22\x90\x64\x2d\x30\x54\x4c\xb4\xa1\x22\x09\x57\x22\x5e\x8e\x38\x2b\x02\xa8\xae\xf6\xbe\x0d\x2b\xf2\x03\xad\xfa\x10\x01\x71\x77\x2a\x30\x02\x95\xf6\x00\x3e\xd0\xc4\x8d\x34\x19\x50\x21\x0a\xbc\x50\xda\x3c\x30\xd6\x3a\x31\x94\x8d\x3a\xfe\xef\x14\x57\x9d\x4b\x93\x00\x96\x24\x0c\x6f\xfd\xbc\x23\x76\x02\x6c\xeb\x52\x72\x80\x11\x7e\x80\x3a\x13\x12\x38\x1d\x38\x49\x95\x40\x27\x8a\x44\x7b\xe8\xdc\x6d\x8c\x8c\x8e\x3c\xb5\xb3\x18\x0e\xf6\x08\x1a\x84\x41\x35\xff\x8b\xb8\x93\x40\xea\xe1\x51\x1d\x89\xa5\x8d\x42\x68\x29\xea\x2f\xc1\x7a\x52\xeb\x90\x5d\x4d\xd6\x80\xe3\xd7\x75\x48\xce\xed\xd3\x01\x1c\x8d\x5b\xa5\x94\x0d\x78\xcf\xf1\x06\x13\x2f\x98\x02\xa4\x6d\x2e\x6c\xf2\xd5\x74\x29\x89\x4c\xf9\x03\xf5\xc7\x18\xad\x7a\xf0\x68\xf8\x5c\xd6\x59\x87\x6e\xd6\x3f\x06\xbe\x86\x20\xe3\x41\x91\x22\xf3\x6e\x8b\xf0\x68\x1c\x57\xa7\xfc\xb0\x7c\x9e\x99\x0b\x96\x1a\x89\x5f\xe6\x0d\x7c\x08\x51\xa0\xa2\x67\x9a\x47\x00\x93\x6b\xf9\x28\xf0\x68\xdb\x62\xf1\xe0\x65\x2c\x53\x33\xe0\xa7\xca\x11\x42\x30\xf6\xaf\x01\xc1\x65\x3d\x32\x01\x6f\xab\x2e\xbe\xd3\x8b\xbe\x14\xc3\xff\xec\xfb\xf0\xf9\xc5\x0c\x05\x6f\x01\x09\x6b\xe3\x34\x31\x0c\x1f\x66\xa6\x42\xbc\x1a\x87\x49\x16\x16\x8c\xb0\x90\x0d\x34\x8c\x0a\xe1\x09\x5e\x10\xa4\x6b\x56\xcc\xf0\xc9\xbb\xdc\xb8\x5c\xce\xf6\xcc\x8d\x75\x7e\xb3\x07\x88\x04\x2f\xb4\x5e\xc9\xe3\x4a\x23\x73\x19\x62\x6c\x9a\x03\x76\x44\x86\x9c\x60\xfc\xdb\x72\x8f\x27\xa0\xdd\xb3\xc5\xda\xff\xf9\xec\x6a\xb1\x7b\xd3\xcf\x50\x37\xc9\x7a\x78\x0c\xe4\x3a\xb6\xf5\xe6\xf4\x98\x6e\x42\x7d\x35\x73\x8b\x45\xc0\x56\x97\xcd\x6d\xce\xcf\xad\x31\xb3\xc3\x54\xfa\xef\xd5\xc0\xf4\x6a\x5f\x54\xe7\x49\x3e\x33\x0a\x30\x38\xfd\xd9\x05\xff\xa5\x3f\x57\x46\x14\xb5\x91\x17\xca\x6b\x98\x23\x7a\x65\xb3\x6c\x02\xb4\xcc\x79\x5d\x58\xd8\xb3\xd5\x94\xae\xf4\x6d\x75\x65\xf7\x92\xbf\x7e\x47\x4c\x3c\xee\xdb\xac\xf1\x32\x5d\xfb\x6f\x41\x1c\x34\xc8\x83\x4f\xc2\x58\x01\xbe\x05\x3e\x66\x16\xa6\x04\x6d\x5d\x4f\x86\x09\x27\x82\x25\x12\xcd\x3a\xcd\xce\x6b\xbc\xca\xac\x28\x9b\xee\x6a\x25\x86\x9e\x45\x70\xc6\xd2\xbd\x3b\x7d\x42\xe5\x27\xaf\xc7\x1d\xf4\x81\xc8\xb3\x76\x8a\xa8\x36\xa3\xae\x2a\xe6\x18\xe1\x36\x22\xad\xf6\x25\x72\xb0\x39\x8b\x01\x9a\x22\x7b\x84\xc3\x2d\x5f\x72\xa4\x98\xac\x15\x70\xe7\xd4\x18\xe2\x7d\xd2\x30\x7c\x33\x08\xcd\xca\xc4\x22\x85\x88\x75\x81\xc6\x4a\x74\x58\x8d\xe0\xe8\xac\xc5\xab\x75\x5a\xf4\x28\x12\xf0\x18\x45\x52\xf2\x97\xb2\x93\x41\x6f\x8d\x7f\xdb\x70\xfb\xa3\x5d\x1f\xa7\x8d\x98\x20\x2b\x22\x9f\x3a\x01\xb5\x8b\x1b\xd2\xcb\x14\x03\x0e\x14\x14\xd2\x19\x5a\x1f\xce\x5e\xcd\x81\x79\x15\x01\xca\xde\x73\x74\x8c\x56\x20\x9f\x77\x2d\x25\x16\xf6\x61\x51\x1d\xa4\x8e\x9b\x98\xa5\xc6\xec\xa8\x45\x57\x82\x59\x78\x0d\x90\xb4\xdf\x51\xb0\xc3\x82\x94\xcc\xb3\x53\x09\x15\x6d\x96\x6c\x3a\x40\x47\xb7\x4a\x7a\x05\x2f\xa1\x1e\x8c\x9d\xa0\x20\x88\xfb\x52\xb7\x9f\xf3\xf3\xbb\x5f\xe7\x8a\x61\xa7\x21\xb1\xac\xfa\x09\xaa\xa4\x6c\xbc\x24\x80\xba\x2a\xe9\x65\xff\x70\xff\xcc\xfa\x65\x87\x76\xf3\xc5\x15\xce\xcb\xe8\x42\x31\x00\x0c\x91\x57\xd9\xe0\x9d\x35\x54\x24\xad\xa4\xd8\xf9\x08\x67\x63\xc8\xcf\x81\xdd\x90\xa2\xd7\xc4\x07\x4a\xe6\x10\x6f\x67\xe7\x27\xd4\x23\x59\x18\xf2\xa8\x9d\x5f\xd8\x94\x30\xaa\x54\x86\x4f\x87\x9d\x82\xb5\x26\xca\xa6\x96\xbf\xcf\x55\xf9\x9d\x37\x01\x19\x48\x43\xc5\x94\x6c\xf3\x74\x97\x58\x4c\x3c\x9d\x08\xe8\x04\xc2\x58\x30\x76\xe1\xa0\xf8\xea\xe9\xc5\xae\xcf\x78\x9e\xa9\x0c\xac\xb3\x44\x42\xe0\xbc\x5d\x1b\x9c\x49\x58\x4a\x1c\x19\x49\xc1\x3a\xea\xf5\xeb\x3b\x81\xa9\x4b\x70\x0c\xcc\x9e\x1a\xd3\x2f\xb7\x52\x2f\x20\x3b\xeb\x64\x51\x1d\xa0\x2d\xb2\x3e\xbe\x13\x85\x48\x92\x32\x2e\xdb\x5c\xa1\xe7\x8c\x45\x91\x35\x01\x0a\x93\xc2\xeb\x09\xce\xf3\xd2\x22\x24\xd0\x8c\xcc\x1d\x9d\x38\xc8\x4d\xe3\x82\xcc\x64\x15\x06\x2d\xe7\x01\x2f\xab\xbb\xb5\x04\x4c\x92\x1c\x7a\xd6\x3f\xe8\x5f\x31\x15\x0c\xdc\xe4\x31\xb4\xc4\x25\x3e\x2a\xaa\x00\x9e\xc8\xe5\x21\x7a\x7f\x29\xf1\xc0\xaf\x1d\x5e\xe8\x63\x39\xad\xf8\x7e\x6c\xc8\xc5\x7f\xc2\xa8\x97\x27\x0a\xd9\xf4\x21\x6a\xea\x03\x09\xfb\xf7\x96\x3b\x83\x79\x5f\x7c\x4b\x30\x9f\x56\x35\xde\xb4\x73\xd4\x95\xf0\x14\xc3\x74\x2f\x0d\xa3\x1d\x4e\x8d\x31\x24\xb3\x1a\x84\x85\x62\x5a\x7b\x3c\x14\x39\x17\xe6\x6d\xeb\x37\xc2\x00\x58\x5b\x0b\xe3\x3c\x8a\x62\xe1\xf8\x35\x4b\x56\xe2\x87\x60\x8b\xbe\xa7\x38\x91\x77\x54\xa9\x5a\x24\x25\x90\x9f\xa5\x42\x77\xf3\x5c\x39\xdf\xff\x74\x07\x76\xa1\xcd\x1f\x62\x0b\x81\x81\x68\xaf\x05\xc1\xc0\x7f\x26\xee\xc0\x91\xa3\x6a\x7d\x29\x61\x45\x27\xe5\x57\x88\xdc\x0d\x97\x04\x1a\x33\xa9\x44\x8a\xda\x02\x10\x45\x3f\x8e\x55\xa6\x76\x8c\x4d\xe3\xf1\x89\x83\xc8\xd0\xf8\x9b\x50\x77\x9f\x47\xdf\x4c\x9c\x66\x0d\xaa\x18\xb8\x5f\x4f\xc4\x01\xce\xdc\x84\xac\x46\x9e\x69\xe1\x76\x45\x6b\x61\x89\xe4\x5d\x94\xbb\x11\x83\x9f\x78\xd8\x0a\xd2\xf5\x7e\x5d\x43\xea\xbc\x10\xf1\x3a\xc9\xe2\x64\xfb\x53\x65\xd0\xc7\xb4\xa7\xfb\xd4\x05\x53\x25\xd0\xcd\x29\x88\x00\x56\x25\x24\x7d\x5d\xb4\xf3\x41\x9f\xe9\xb5\xf7\xae\x64\x2c\xe3\xc9\x6d\xd5\x84\x3a\x72\x12\xb8\x7a\xd9\x1b\x09\xe8\x38\xda\x26\x4f\x04\xce\x03\x71\x6e\x8a\x44\x7b\x5c\x81\x59\x9c\xd2\xe4\xc3\xba\x59\xa6\xe5\x28\xa7\x8f\x9a\xe4\xd5\x4e\xb9\xca\x7f\xcb\x75\xb8\x2b\x43\x3e\xb3\x15\x46\xb1\xa5\xbc\x9d\x9e\x38\x15\xf1\xbd\x1b\x21\xaa\xf1\x82\x00\x95\xfc\xa7\x77\x47\x39\xa7\x33\x43\x92\xd7\x52\x40\x4b\x06\x81\x8a\xa0\xbd\xf1\x6b\x99\x84\x42\x5b\xe2\x3b\xc5\x5e\x12\x5c\x28\x4d\xb6\x0e\x4e\xc8\x5c\xe8\x01\x8a\xc5\xe7\xe4\x9d\x42\xee\x5d\x9c\xc4\xeb\xeb\x68\x09\x27\x92\x95\x9a\x11\x54\x73\xc4\x12\x80\xfb\x7d\xfe\xc5\x08\x60\x7f\x36\x41\xe0\x10\xba\xd6\x2b\x6c\xf1\xb4\x17\xfe\x26\x34\xe3\x4b\xf8\xa8\xe3\x91\xbe\x4f\x2a\xfc\xda\x81\xb8\xe7\xfe\xd5\x26\x50\x47\xf3\x1a\x65\x32\x81\xe0\x05\xb8\x4f\x32\x31\x26\x00\x4a\x53\x97\xc2\xc3\x0e\x2e\xa1\x26\x54\xab\x05\x8e\x56\x2f\x7d\xaf\x22\x84\x68\xa5\x8b\x97\xf6\xa4\xfd\xa8\xcc\x75\x41\x96\x86\xfd\x27\x3d\x29\x86\x8d\x7f\x4c\xd4\x8e\x73\x41\xf4\x1e\xe2\xdd\x58\x27\x97\xce\x9c\x94\xcf\x7a\x04\x2f\xdc\xed");
assert_return(() => $$.exports["f64.kahan_sum"](0, 256), 4.996401743142033e+300);
assert_return(() => $$.exports["f64.plain_sum"](0, 256), 4.9964017432979576e+300);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2d\x02\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6e\x65\x67\x5f\x73\x75\x62\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6e\x65\x67\x5f\x73\x75\x62\x00\x01\x0a\x13\x02\x08\x00\x20\x00\x20\x01\x93\x8c\x0b\x08\x00\x20\x00\x20\x01\xa1\x9a\x0b");
assert_return(() => $$.exports["f32.no_fold_neg_sub"](f32(-0.0), f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_neg_sub"](f32(0.0), f32(-0.0)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_neg_sub"](f32(-0.0), f32(0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_neg_sub"](f32(0.0), f32(0.0)), f32(-0.0));
assert_return(() => $$.exports["f64.no_fold_neg_sub"](-0.0, -0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_neg_sub"](0.0, -0.0), -0.0);
assert_return(() => $$.exports["f64.no_fold_neg_sub"](-0.0, 0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_neg_sub"](0.0, 0.0), -0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2d\x02\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x6e\x65\x67\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x6e\x65\x67\x00\x01\x0a\x13\x02\x08\x00\x20\x00\x8c\x20\x00\x92\x0b\x08\x00\x20\x00\x9a\x20\x00\xa0\x0b");
assert_return(() => $$.exports["f32.no_fold_add_neg"](f32(0.0)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_add_neg"](f32(-0.0)), f32(0.0));
assert_return_nan(() => $$.exports["f32.no_fold_add_neg"](Infinity));
assert_return_nan(() => $$.exports["f32.no_fold_add_neg"](-Infinity));
assert_return(() => $$.exports["f64.no_fold_add_neg"](0.0), 0.0);
assert_return(() => $$.exports["f64.no_fold_add_neg"](-0.0), 0.0);
assert_return_nan(() => $$.exports["f64.no_fold_add_neg"](Infinity));
assert_return_nan(() => $$.exports["f64.no_fold_add_neg"](-Infinity));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x33\x02\x16\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x36\x78\x5f\x76\x69\x61\x5f\x61\x64\x64\x00\x00\x16\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x36\x78\x5f\x76\x69\x61\x5f\x61\x64\x64\x00\x01\x0a\x29\x02\x13\x00\x20\x00\x20\x00\x92\x20\x00\x92\x20\x00\x92\x20\x00\x92\x20\x00\x92\x0b\x13\x00\x20\x00\x20\x00\xa0\x20\x00\xa0\x20\x00\xa0\x20\x00\xa0\x20\x00\xa0\x0b");
assert_return(() => $$.exports["f32.no_fold_6x_via_add"](f32(-8.55513734559e+29)), f32(-5.13308270959e+30));
assert_return(() => $$.exports["f32.no_fold_6x_via_add"](f32(-1.20950599457e-23)), f32(-7.25703628298e-23));
assert_return(() => $$.exports["f32.no_fold_6x_via_add"](f32(6.64268923825e-24)), f32(3.98561338518e-23));
assert_return(() => $$.exports["f32.no_fold_6x_via_add"](f32(-6.1473459656e-10)), f32(-3.68840735732e-09));
assert_return(() => $$.exports["f32.no_fold_6x_via_add"](f32(-1.20985810077e+24)), f32(-7.25914831637e+24));
assert_return(() => $$.exports["f64.no_fold_6x_via_add"](-3.517044906027714e+20), -2.1102269436166286e+21);
assert_return(() => $$.exports["f64.no_fold_6x_via_add"](-1.4824294109868734e-161), -8.894576465921239e-161);
assert_return(() => $$.exports["f64.no_fold_6x_via_add"](-7.484567838781003e+81), -4.4907407032686014e+82);
assert_return(() => $$.exports["f64.no_fold_6x_via_add"](1.7277868192936067e+226), 1.0366720915761641e+227);
assert_return(() => $$.exports["f64.no_fold_6x_via_add"](-4.311639752519561e+70), -2.5869838515117364e+71);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0f\x02\x60\x03\x7d\x7d\x7d\x01\x7d\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2d\x02\x13\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x64\x69\x76\x00\x00\x13\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x64\x69\x76\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x95\x20\x02\x95\x0b\x0a\x00\x20\x00\x20\x01\xa3\x20\x02\xa3\x0b");
assert_return(() => $$.exports["f32.no_fold_div_div"](f32(-5.93847529169e+23), f32(-3.02656717395e-05), f32(-1584.86816406)), f32(-1.23803086183e+25));
assert_return(() => $$.exports["f32.no_fold_div_div"](f32(1.54389616165e-21), f32(2.53342928037e+33), f32(-2.68447828568e-34)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_div_div"](f32(1.34174233068e+13), f32(2.93392046445e-32), f32(7.638637444e+31)), Infinity);
assert_return(() => $$.exports["f32.no_fold_div_div"](f32(-0.000107765292341), f32(-3.42209429081e+37), f32(-1.65623238865e-13)), f32(-1.90113269357e-29));
assert_return(() => $$.exports["f32.no_fold_div_div"](f32(1.30582499557e+14), f32(9.62453466104e+16), f32(-4.14615451007e+37)), f32(-3.27231217389e-41));
assert_return(() => $$.exports["f64.no_fold_div_div"](4.7776287467101434e+101, 1.0278672042040401e+176, -7.18999894988884e-236), -6.464673011878799e+160);
assert_return(() => $$.exports["f64.no_fold_div_div"](-2.1790236783875714e+238, 2.8324436844616576e-09, 1.861107682598687e+95), -4.133606807992067e+151);
assert_return(() => $$.exports["f64.no_fold_div_div"](-7.287619347826683, -1.3467607316739855e+265, 2.462719007013688e+51), 2.19725454e-316);
assert_return(() => $$.exports["f64.no_fold_div_div"](-2.865523978629633e+248, 1.0211980370639414e-247, 2.876458648332401e+289), -Infinity);
assert_return(() => $$.exports["f64.no_fold_div_div"](-9.525735602663874e-268, 5.0233948816631796e-180, -2.8304570228221077e-42), 6.699534674970116e-47);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x11\x02\x60\x04\x7d\x7d\x7d\x7d\x01\x7d\x60\x04\x7c\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2f\x02\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x64\x69\x76\x73\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x64\x69\x76\x73\x00\x01\x0a\x1d\x02\x0d\x00\x20\x00\x20\x01\x95\x20\x02\x20\x03\x95\x94\x0b\x0d\x00\x20\x00\x20\x01\xa3\x20\x02\x20\x03\xa3\xa2\x0b");
assert_return(() => $$.exports["f32.no_fold_mul_divs"](f32(-2.72347329039e-33), f32(3.89784291064e-28), f32(4.84712309132e-27), f32(-25.3577747345)), f32(1.33558547747e-33));
assert_return(() => $$.exports["f32.no_fold_mul_divs"](f32(-5.37284413169e+30), f32(38340912.0), f32(1.49731622514e-05), f32(0.192138254642)), f32(-1.09204748314e+19));
assert_return(() => $$.exports["f32.no_fold_mul_divs"](f32(-16085042176.0), f32(-1.0929202135e+12), f32(-869606016.0), f32(-1201.20605469)), f32(10654.6386719));
assert_return(() => $$.exports["f32.no_fold_mul_divs"](f32(-1.27122314044e+33), f32(1.07681141781e-10), f32(1.85762710316e-05), f32(4.92686197158e+23)), -Infinity);
assert_return(() => $$.exports["f32.no_fold_mul_divs"](f32(1.37838637654e-16), f32(-6.50462845086e-20), f32(6.81676837137e-28), f32(2.28926270301e-11)), f32(-6.31002953881e-14));
assert_return(() => $$.exports["f64.no_fold_mul_divs"](-3.466499805233369e-247, -4.045567512248635e-140, -6.462341070607592e+164, 1.0045589533354074e+56), -55.12215321310017);
assert_return(() => $$.exports["f64.no_fold_mul_divs"](-5.054883907636325e+34, 2.2223781649976275e-277, -1.5029790371100852e+109, -6.994123759538121e+140), -Infinity);
assert_return(() => $$.exports["f64.no_fold_mul_divs"](-8.361116536344947e+92, -1.0029528876067567e+58, -1.2867801766038772e-42, -4.2230277746883753e+220), 2.540178100556387e-228);
assert_return(() => $$.exports["f64.no_fold_mul_divs"](-1.2020032116411193e+39, -4.667409771338769e-105, 1.0888652376540085e-288, 1.8334948666517216e+67), 0.0);
assert_return(() => $$.exports["f64.no_fold_mul_divs"](6.331839568840419e-06, 5.544474241905778e-84, 2.7822472480359097e-187, -1.4419321081893022e+106), -2.2035374770746518e-215);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0f\x02\x60\x03\x7d\x7d\x7d\x01\x7d\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x2f\x02\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x64\x69\x76\x73\x00\x00\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x64\x69\x76\x73\x00\x01\x0a\x1d\x02\x0d\x00\x20\x00\x20\x02\x95\x20\x01\x20\x02\x95\x92\x0b\x0d\x00\x20\x00\x20\x02\xa3\x20\x01\x20\x02\xa3\xa0\x0b");
assert_return(() => $$.exports["f32.no_fold_add_divs"](f32(377.368896484), f32(-0.0401181839406), f32(-1.36292985605e+38)), f32(-2.76851214838e-36));
assert_return(() => $$.exports["f32.no_fold_add_divs"](f32(-1.82340230412e-19), f32(-3.39702881134e-15), f32(-1.70996707361e+14)), f32(1.98671154112e-29));
assert_return(() => $$.exports["f32.no_fold_add_divs"](f32(-1.96726383556e-14), f32(6.4140987027e-20), f32(-5.41989070176e+14)), f32(3.62969965672e-29));
assert_return(() => $$.exports["f32.no_fold_add_divs"](f32(-4.03850582219e-31), f32(3.84822808143e-30), f32(-3.45237197913e+26)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_add_divs"](f32(0.00109344150405), f32(0.207031235099), f32(1.35097839699e-37)), f32(1.54054772769e+36));
assert_return(() => $$.exports["f64.no_fold_add_divs"](-4.91701943214376e+129, 6.813215632201902e+130, 2.6125410100237784e+274), 2.4196801752520584e-144);
assert_return(() => $$.exports["f64.no_fold_add_divs"](-1.020646795322455e+16, 63.422616671746226, -1.6024747869814892e-288), 6.369190976445851e+303);
assert_return(() => $$.exports["f64.no_fold_add_divs"](-1.5270569633109837e-291, 2.5755503329232514e-294, 5.882693916421492e+151), 0.0);
assert_return(() => $$.exports["f64.no_fold_add_divs"](2.666796487439464e+94, -2.1315692524936578e+99, 1.2377004518680012e-38), -1.7221796932462534e+137);
assert_return(() => $$.exports["f64.no_fold_add_divs"](-1.2952888377288216e-219, 5.808769259900048e-228, 1.6745741699443756e-21), -7.735034106987796e-199);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x35\x02\x17\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x71\x72\x74\x5f\x73\x71\x75\x61\x72\x65\x00\x00\x17\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x71\x72\x74\x5f\x73\x71\x75\x61\x72\x65\x00\x01\x0a\x13\x02\x08\x00\x20\x00\x20\x00\x94\x91\x0b\x08\x00\x20\x00\x20\x00\xa2\x9f\x0b");
assert_return(() => $$.exports["f32.no_fold_sqrt_square"](f32(-1.84600007067e-20)), f32(1.84600104002e-20));
assert_return(() => $$.exports["f32.no_fold_sqrt_square"](f32(-1.7907473239e-22)), f32(1.79526781243e-22));
assert_return(() => $$.exports["f32.no_fold_sqrt_square"](f32(-7.91207848456e-22)), f32(7.91442007616e-22));
assert_return(() => $$.exports["f32.no_fold_sqrt_square"](f32(1.80129377322e-26)), f32(0.0));
assert_return(() => $$.exports["f32.no_fold_sqrt_square"](f32(6.10501968175e+32)), Infinity);
assert_return(() => $$.exports["f64.no_fold_sqrt_square"](6.209297167747496e-160), 6.209299542179727e-160);
assert_return(() => $$.exports["f64.no_fold_sqrt_square"](-2.4211175303738945e-155), 2.4211175303738937e-155);
assert_return(() => $$.exports["f64.no_fold_sqrt_square"](-1.6460687611875645e-157), 1.6460687611532367e-157);
assert_return(() => $$.exports["f64.no_fold_sqrt_square"](-3.797811613378828e-186), 0.0);
assert_return(() => $$.exports["f64.no_fold_sqrt_square"](8.158084284605592e+257), Infinity);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x31\x02\x15\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x73\x71\x72\x74\x73\x00\x00\x15\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x73\x71\x72\x74\x73\x00\x01\x0a\x15\x02\x09\x00\x20\x00\x91\x20\x01\x91\x94\x0b\x09\x00\x20\x00\x9f\x20\x01\x9f\xa2\x0b");
assert_return_nan(() => $$.exports["f32.no_fold_mul_sqrts"](f32(4.38850469474e-38), f32(-1.18673337983e-25)));
assert_return(() => $$.exports["f32.no_fold_mul_sqrts"](f32(2.53659081113e-28), f32(4.13206746597e-10)), f32(3.23749315218e-19));
assert_return(() => $$.exports["f32.no_fold_mul_sqrts"](f32(4.21448322317e-27), f32(97.2491149902)), f32(6.40199048288e-13));
assert_return(() => $$.exports["f32.no_fold_mul_sqrts"](f32(3.72407634228e+30), f32(0.00294490810484)), f32(1.04723751371e+14));
assert_return(() => $$.exports["f32.no_fold_mul_sqrts"](f32(1.86605593445e-17), f32(0.00211126101203)), f32(1.98487545844e-10));
assert_return_nan(() => $$.exports["f64.no_fold_mul_sqrts"](-1.2742064369772862e-191, -0.006829962938197246));
assert_return(() => $$.exports["f64.no_fold_mul_sqrts"](3.7082569269527534e-194, 4.7183002857015043e-122), 4.1829020688865954e-158);
assert_return(() => $$.exports["f64.no_fold_mul_sqrts"](2.329359505918655e-27, 2.0743399642806364e-275), 2.1981545701574452e-151);
assert_return(() => $$.exports["f64.no_fold_mul_sqrts"](1.0541899336289437e-109, 5.98123819872803e-173), 2.511047809129887e-141);
assert_return(() => $$.exports["f64.no_fold_mul_sqrts"](25589482.717358638, 3.913891207119902e+154), 1.0007719590506955e+81);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x31\x02\x15\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x73\x71\x72\x74\x73\x00\x00\x15\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x64\x69\x76\x5f\x73\x71\x72\x74\x73\x00\x01\x0a\x15\x02\x09\x00\x20\x00\x91\x20\x01\x91\x95\x0b\x09\x00\x20\x00\x9f\x20\x01\x9f\xa3\x0b");
assert_return_nan(() => $$.exports["f32.no_fold_div_sqrts"](f32(-58545012.0), f32(-6.44377295414e-18)));
assert_return(() => $$.exports["f32.no_fold_div_sqrts"](f32(7407384064.0), f32(209778928.0)), f32(5.942258358));
assert_return(() => $$.exports["f32.no_fold_div_sqrts"](f32(1.37641256948e-36), f32(54692.8984375)), f32(5.01659272899e-21));
assert_return(() => $$.exports["f32.no_fold_div_sqrts"](f32(9.79288964811e+17), f32(1.26435517611e-09)), f32(2.7830490497e+13));
assert_return(() => $$.exports["f32.no_fold_div_sqrts"](f32(2.91412832627e-34), f32(1.7928174343e-31)), f32(0.0403168201447));
assert_return_nan(() => $$.exports["f64.no_fold_div_sqrts"](-1.2206137319883022e-214, -8.209583449676083e-57));
assert_return(() => $$.exports["f64.no_fold_div_sqrts"](3.3818852462305824e-177, 7.655783976315048e+162), 2.1017671425665687e-170);
assert_return(() => $$.exports["f64.no_fold_div_sqrts"](4.596333567064751e+157, 2.3932467846883046e-33), 1.3858366017266315e+95);
assert_return(() => $$.exports["f64.no_fold_div_sqrts"](2.5327340978668086e-244, 4.475305129961258e+87), 2.3789399141325018e-166);
assert_return(() => $$.exports["f64.no_fold_div_sqrts"](5.103070160197939e-238, 4.601576690980825e+284), 1.0530826009924495e-261);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x37\x02\x18\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x73\x71\x72\x74\x5f\x64\x69\x76\x00\x00\x18\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x6d\x75\x6c\x5f\x73\x71\x72\x74\x5f\x64\x69\x76\x00\x01\x0a\x19\x02\x0b\x00\x20\x00\x20\x01\x91\x94\x20\x01\x95\x0b\x0b\x00\x20\x00\x20\x01\x9f\xa2\x20\x01\xa3\x0b");
assert_return(() => $$.exports["f32.no_fold_mul_sqrt_div"](f32(-4.72855680666e+24), f32(8.67728170885e+27)), -Infinity);
assert_return(() => $$.exports["f32.no_fold_mul_sqrt_div"](f32(-1.17768817886e-36), f32(9.80515309738e-30)), f32(-0.0));
assert_return(() => $$.exports["f32.no_fold_mul_sqrt_div"](f32(816717056.0), f32(3.32317090036e-39)), f32(1.41675681435e+28));
assert_return(() => $$.exports["f32.no_fold_mul_sqrt_div"](f32(-1.19322674463e+13), f32(8.63706680207e+33)), f32(-0.000128392552142));
assert_return(() => $$.exports["f32.no_fold_mul_sqrt_div"](f32(-401.023498535), f32(134.330215454)), f32(-34.6005477905));
assert_return(() => $$.exports["f64.no_fold_mul_sqrt_div"](1.4681346229104905e+210, 2.466074582285183e+228), Infinity);
assert_return(() => $$.exports["f64.no_fold_mul_sqrt_div"](-1.7254022016758028e-249, 5.5835540747130025e-202), -0.0);
assert_return(() => $$.exports["f64.no_fold_mul_sqrt_div"](1.6812810256029166e-128, 7.362783602442129e+168), 6.196112486187196e-213);
assert_return(() => $$.exports["f64.no_fold_mul_sqrt_div"](-1.0605483729939836e+106, 6.22591783694072e-146), -4.2503900822233765e+178);
assert_return(() => $$.exports["f64.no_fold_mul_sqrt_div"](2.6336349695373093e+31, 3.07914132858533e+253), 4.746142447510695e-96);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0f\x02\x60\x03\x7d\x7d\x7d\x01\x7d\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x4d\x02\x23\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6c\x75\x73\x68\x5f\x69\x6e\x74\x65\x72\x6d\x65\x64\x69\x61\x74\x65\x5f\x73\x75\x62\x6e\x6f\x72\x6d\x61\x6c\x00\x00\x23\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6c\x75\x73\x68\x5f\x69\x6e\x74\x65\x72\x6d\x65\x64\x69\x61\x74\x65\x5f\x73\x75\x62\x6e\x6f\x72\x6d\x61\x6c\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x94\x20\x02\x94\x0b\x0a\x00\x20\x00\x20\x01\xa2\x20\x02\xa2\x0b");
assert_return(() => $$.exports["f32.no_flush_intermediate_subnormal"](f32(1.17549435082e-38), f32(1.19209289551e-07), f32(8388608.0)), f32(1.17549435082e-38));
assert_return(() => $$.exports["f64.no_flush_intermediate_subnormal"](2.2250738585072014e-308, 2.220446049250313e-16, 4503599627370496.0), 2.2250738585072014e-308);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x13\x03\x60\x02\x7d\x7d\x01\x7f\x60\x02\x7c\x7c\x01\x7f\x60\x02\x7c\x7d\x01\x7d\x03\x08\x07\x00\x00\x00\x01\x01\x01\x02\x07\x7f\x07\x0f\x66\x33\x32\x2e\x72\x65\x63\x6f\x64\x69\x6e\x67\x5f\x65\x71\x00\x00\x0f\x66\x33\x32\x2e\x72\x65\x63\x6f\x64\x69\x6e\x67\x5f\x6c\x65\x00\x01\x0f\x66\x33\x32\x2e\x72\x65\x63\x6f\x64\x69\x6e\x67\x5f\x6c\x74\x00\x02\x0f\x66\x36\x34\x2e\x72\x65\x63\x6f\x64\x69\x6e\x67\x5f\x65\x71\x00\x03\x0f\x66\x36\x34\x2e\x72\x65\x63\x6f\x64\x69\x6e\x67\x5f\x6c\x65\x00\x04\x0f\x66\x36\x34\x2e\x72\x65\x63\x6f\x64\x69\x6e\x67\x5f\x6c\x74\x00\x05\x0f\x72\x65\x63\x6f\x64\x69\x6e\x67\x5f\x64\x65\x6d\x6f\x74\x65\x00\x06\x0a\x4c\x07\x0a\x00\x20\x00\x20\x01\x94\x20\x00\x5b\x0b\x0a\x00\x20\x00\x20\x01\x94\x20\x00\x5f\x0b\x0a\x00\x20\x00\x20\x01\x94\x20\x00\x5d\x0b\x0a\x00\x20\x00\x20\x01\xa2\x20\x00\x61\x0b\x0a\x00\x20\x00\x20\x01\xa2\x20\x00\x65\x0b\x0a\x00\x20\x00\x20\x01\xa2\x20\x00\x63\x0b\x08\x00\x20\x00\xb6\x20\x01\x94\x0b");
assert_return(() => $$.exports["f32.recoding_eq"](-Infinity, f32(3.0)), 1);
assert_return(() => $$.exports["f32.recoding_le"](-Infinity, f32(3.0)), 1);
assert_return(() => $$.exports["f32.recoding_lt"](-Infinity, f32(3.0)), 0);
assert_return(() => $$.exports["f32.recoding_eq"](f32(0.0), f32(1.0)), 1);
assert_return(() => $$.exports["f32.recoding_le"](f32(0.0), f32(1.0)), 1);
assert_return(() => $$.exports["f32.recoding_lt"](f32(0.0), f32(1.0)), 0);
assert_return(() => $$.exports["f64.recoding_eq"](-Infinity, 3.0), 1);
assert_return(() => $$.exports["f64.recoding_le"](-Infinity, 3.0), 1);
assert_return(() => $$.exports["f64.recoding_lt"](-Infinity, 3.0), 0);
assert_return(() => $$.exports["f64.recoding_eq"](0.0, 1.0), 1);
assert_return(() => $$.exports["f64.recoding_le"](0.0, 1.0), 1);
assert_return(() => $$.exports["f64.recoding_lt"](0.0, 1.0), 0);
assert_return(() => $$.exports["recoding_demote"](2.3860049081905093e-40, f32(1221.0)), f32(2.91331206297e-37));
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0f\x02\x60\x03\x7d\x7d\x7d\x01\x7f\x60\x03\x7c\x7c\x7c\x01\x7f\x03\x03\x02\x00\x01\x07\x41\x02\x1d\x66\x33\x32\x2e\x6e\x6f\x5f\x65\x78\x74\x65\x6e\x64\x65\x64\x5f\x70\x72\x65\x63\x69\x73\x69\x6f\x6e\x5f\x64\x69\x76\x00\x00\x1d\x66\x36\x34\x2e\x6e\x6f\x5f\x65\x78\x74\x65\x6e\x64\x65\x64\x5f\x70\x72\x65\x63\x69\x73\x69\x6f\x6e\x5f\x64\x69\x76\x00\x01\x0a\x17\x02\x0a\x00\x20\x00\x20\x01\x95\x20\x02\x5b\x0b\x0a\x00\x20\x00\x20\x01\xa3\x20\x02\x61\x0b");
assert_return(() => $$.exports["f32.no_extended_precision_div"](f32(3.0), f32(7.0), f32(0.428571432829)), 1);
assert_return(() => $$.exports["f64.no_extended_precision_div"](3.0, 7.0, 0.42857142857142855), 1);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0b\x02\x60\x01\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x35\x02\x17\x66\x33\x32\x2e\x6e\x6f\x5f\x64\x69\x73\x74\x72\x69\x62\x75\x74\x65\x5f\x65\x78\x61\x63\x74\x00\x00\x17\x66\x36\x34\x2e\x6e\x6f\x5f\x64\x69\x73\x74\x72\x69\x62\x75\x74\x65\x5f\x65\x78\x61\x63\x74\x00\x01\x0a\x31\x02\x13\x00\x43\x00\x00\x00\xc1\x20\x00\x94\x43\x00\x00\x00\x41\x20\x00\x94\x92\x0b\x1b\x00\x44\x00\x00\x00\x00\x00\x00\x20\xc0\x20\x00\xa2\x44\x00\x00\x00\x00\x00\x00\x20\x40\x20\x00\xa2\xa0\x0b");
assert_return(() => $$.exports["f32.no_distribute_exact"](f32(-0.0)), f32(0.0));
assert_return(() => $$.exports["f64.no_distribute_exact"](-0.0), 0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x29\x06\x60\x01\x7d\x01\x7d\x60\x04\x7d\x7d\x7d\x7d\x01\x7d\x60\x03\x7d\x7d\x7d\x01\x7d\x60\x01\x7c\x01\x7c\x60\x04\x7c\x7c\x7c\x7c\x01\x7c\x60\x03\x7c\x7c\x7c\x01\x7c\x03\x0b\x0a\x00\x01\x02\x02\x01\x03\x04\x05\x05\x04\x07\xb5\x01\x0a\x08\x66\x33\x32\x2e\x73\x71\x72\x74\x00\x00\x0f\x66\x33\x32\x2e\x78\x6b\x63\x64\x5f\x73\x71\x72\x74\x5f\x32\x00\x01\x0f\x66\x33\x32\x2e\x78\x6b\x63\x64\x5f\x73\x71\x72\x74\x5f\x33\x00\x02\x0f\x66\x33\x32\x2e\x78\x6b\x63\x64\x5f\x73\x71\x72\x74\x5f\x35\x00\x03\x16\x66\x33\x32\x2e\x78\x6b\x63\x64\x5f\x62\x65\x74\x74\x65\x72\x5f\x73\x71\x72\x74\x5f\x35\x00\x04\x08\x66\x36\x34\x2e\x73\x71\x72\x74\x00\x05\x0f\x66\x36\x34\x2e\x78\x6b\x63\x64\x5f\x73\x71\x72\x74\x5f\x32\x00\x06\x0f\x66\x36\x34\x2e\x78\x6b\x63\x64\x5f\x73\x71\x72\x74\x5f\x33\x00\x07\x0f\x66\x36\x34\x2e\x78\x6b\x63\x64\x5f\x73\x71\x72\x74\x5f\x35\x00\x08\x16\x66\x36\x34\x2e\x78\x6b\x63\x64\x5f\x62\x65\x74\x74\x65\x72\x5f\x73\x71\x72\x74\x5f\x35\x00\x09\x0a\x89\x01\x0a\x05\x00\x20\x00\x91\x0b\x10\x00\x20\x00\x20\x01\x95\x20\x02\x20\x03\x20\x02\x93\x95\x92\x0b\x0a\x00\x20\x00\x20\x01\x94\x20\x02\x95\x0b\x0d\x00\x20\x00\x20\x01\x95\x20\x02\x20\x00\x95\x92\x0b\x13\x00\x20\x00\x20\x01\x20\x02\x94\x92\x20\x03\x20\x01\x20\x02\x94\x93\x95\x0b\x05\x00\x20\x00\x9f\x0b\x10\x00\x20\x00\x20\x01\xa3\x20\x02\x20\x03\x20\x02\xa1\xa3\xa0\x0b\x0a\x00\x20\x00\x20\x01\xa2\x20\x02\xa3\x0b\x0d\x00\x20\x00\x20\x01\xa3\x20\x02\x20\x00\xa3\xa0\x0b\x13\x00\x20\x00\x20\x01\x20\x02\xa2\xa0\x20\x03\x20\x01\x20\x02\xa2\xa1\xa3\x0b");
assert_return(() => $$.exports["f32.sqrt"](f32(2.0)), f32(1.41421353817));
assert_return(() => $$.exports["f32.xkcd_sqrt_2"](f32(3.0), f32(5.0), f32(3.14159274101), f32(7.0)), f32(1.41422009468));
assert_return(() => $$.exports["f32.sqrt"](f32(3.0)), f32(1.73205077648));
assert_return(() => $$.exports["f32.xkcd_sqrt_3"](f32(2.0), f32(2.71828174591), f32(3.14159274101)), f32(1.73051190376));
assert_return(() => $$.exports["f32.sqrt"](f32(5.0)), f32(2.23606801033));
assert_return(() => $$.exports["f32.xkcd_sqrt_5"](f32(2.0), f32(2.71828174591), f32(3.0)), f32(2.23575878143));
assert_return(() => $$.exports["f32.xkcd_better_sqrt_5"](f32(13.0), f32(4.0), f32(3.14159274101), f32(24.0)), f32(2.23606801033));
assert_return(() => $$.exports["f64.sqrt"](2.0), 1.4142135623730951);
assert_return(() => $$.exports["f64.xkcd_sqrt_2"](3.0, 5.0, 3.141592653589793, 7.0), 1.4142200580539208);
assert_return(() => $$.exports["f64.sqrt"](3.0), 1.7320508075688772);
assert_return(() => $$.exports["f64.xkcd_sqrt_3"](2.0, 2.718281828459045, 3.141592653589793), 1.7305119588645301);
assert_return(() => $$.exports["f64.sqrt"](5.0), 2.23606797749979);
assert_return(() => $$.exports["f64.xkcd_sqrt_5"](2.0, 2.718281828459045, 3.0), 2.2357588823428847);
assert_return(() => $$.exports["f64.xkcd_better_sqrt_5"](13.0, 4.0, 3.141592653589793, 24.0), 2.2360678094452893);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x29\x02\x11\x66\x33\x32\x2e\x63\x6f\x6d\x70\x75\x74\x65\x5f\x72\x61\x64\x69\x78\x00\x00\x11\x66\x36\x34\x2e\x63\x6f\x6d\x70\x75\x74\x65\x5f\x72\x61\x64\x69\x78\x00\x01\x0a\x9d\x01\x02\x43\x00\x03\x40\x20\x00\x20\x00\x92\x22\x00\x43\x00\x00\x80\x3f\x92\x20\x00\x93\x43\x00\x00\x80\xbf\x92\x43\x00\x00\x00\x00\x5b\x0d\x00\x0b\x03\x40\x20\x00\x20\x01\x43\x00\x00\x80\x3f\x92\x22\x01\x92\x20\x00\x93\x20\x01\x93\x43\x00\x00\x00\x00\x5c\x0d\x00\x0b\x20\x01\x0b\x57\x00\x03\x40\x20\x00\x20\x00\xa0\x22\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xa0\x20\x00\xa1\x44\x00\x00\x00\x00\x00\x00\xf0\xbf\xa0\x44\x00\x00\x00\x00\x00\x00\x00\x00\x61\x0d\x00\x0b\x03\x40\x20\x00\x20\x01\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xa0\x22\x01\xa0\x20\x00\xa1\x20\x01\xa1\x44\x00\x00\x00\x00\x00\x00\x00\x00\x62\x0d\x00\x0b\x20\x01\x0b");
assert_return(() => $$.exports["f32.compute_radix"](f32(1.0), f32(1.0)), f32(2.0));
assert_return(() => $$.exports["f64.compute_radix"](1.0, 1.0), 2.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x0d\x02\x60\x02\x7d\x7d\x01\x7d\x60\x02\x7c\x7c\x01\x7c\x03\x03\x02\x00\x01\x07\x37\x02\x18\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x75\x62\x31\x5f\x6d\x75\x6c\x5f\x61\x64\x64\x00\x00\x18\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x73\x75\x62\x31\x5f\x6d\x75\x6c\x5f\x61\x64\x64\x00\x01\x0a\x27\x02\x10\x00\x20\x00\x43\x00\x00\x80\x3f\x93\x20\x01\x94\x20\x01\x92\x0b\x14\x00\x20\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xa1\x20\x01\xa2\x20\x01\xa0\x0b");
assert_return(() => $$.exports["f32.no_fold_sub1_mul_add"](f32(2.32830643654e-10), f32(1.0)), f32(0.0));
assert_return(() => $$.exports["f64.no_fold_sub1_mul_add"](5.421010862427522e-20, 1.0), 0.0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x12\x03\x60\x03\x7d\x7d\x7d\x01\x7f\x60\x03\x7c\x7c\x7c\x01\x7f\x60\x00\x00\x03\x07\x06\x00\x00\x01\x01\x02\x02\x07\x9f\x01\x06\x1f\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x6c\x65\x5f\x6d\x6f\x6e\x6f\x74\x6f\x6e\x69\x63\x69\x74\x79\x00\x00\x1f\x66\x33\x32\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x67\x65\x5f\x6d\x6f\x6e\x6f\x74\x6f\x6e\x69\x63\x69\x74\x79\x00\x01\x1f\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x6c\x65\x5f\x6d\x6f\x6e\x6f\x74\x6f\x6e\x69\x63\x69\x74\x79\x00\x02\x1f\x66\x36\x34\x2e\x6e\x6f\x5f\x66\x6f\x6c\x64\x5f\x61\x64\x64\x5f\x67\x65\x5f\x6d\x6f\x6e\x6f\x74\x6f\x6e\x69\x63\x69\x74\x79\x00\x03\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x04\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x05\x0a\x83\x01\x06\x0d\x00\x20\x00\x20\x02\x92\x20\x01\x20\x02\x92\x5f\x0b\x0d\x00\x20\x00\x20\x02\x92\x20\x01\x20\x02\x92\x60\x0b\x0d\x00\x20\x00\x20\x02\xa0\x20\x01\x20\x02\xa0\x65\x0b\x0d\x00\x20\x00\x20\x02\xa0\x20\x01\x20\x02\xa0\x66\x0b\x1e\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x00\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x2a\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x02\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["f32.no_fold_add_le_monotonicity"](Infinity, -Infinity, Infinity), 0);
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["f64.no_fold_add_le_monotonicity"](Infinity, -Infinity, Infinity), 0);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x10\x03\x60\x02\x7d\x7d\x01\x7f\x60\x02\x7c\x7c\x01\x7f\x60\x00\x00\x03\x11\x10\x00\x00\x00\x00\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x07\xc1\x01\x10\x0a\x66\x33\x32\x2e\x6e\x6f\x74\x5f\x6c\x74\x00\x00\x0a\x66\x33\x32\x2e\x6e\x6f\x74\x5f\x6c\x65\x00\x01\x0a\x66\x33\x32\x2e\x6e\x6f\x74\x5f\x67\x74\x00\x02\x0a\x66\x33\x32\x2e\x6e\x6f\x74\x5f\x67\x65\x00\x03\x0a\x66\x36\x34\x2e\x6e\x6f\x74\x5f\x6c\x74\x00\x04\x0a\x66\x36\x34\x2e\x6e\x6f\x74\x5f\x6c\x65\x00\x05\x0a\x66\x36\x34\x2e\x6e\x6f\x74\x5f\x67\x74\x00\x06\x0a\x66\x36\x34\x2e\x6e\x6f\x74\x5f\x67\x65\x00\x07\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x08\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x09\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x0a\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x0b\x08\x61\x73\x73\x65\x72\x74\x5f\x34\x00\x0c\x08\x61\x73\x73\x65\x72\x74\x5f\x35\x00\x0d\x08\x61\x73\x73\x65\x72\x74\x5f\x36\x00\x0e\x08\x61\x73\x73\x65\x72\x74\x5f\x37\x00\x0f\x0a\xb9\x02\x10\x08\x00\x20\x00\x20\x01\x5d\x45\x0b\x08\x00\x20\x00\x20\x01\x5f\x45\x0b\x08\x00\x20\x00\x20\x01\x5e\x45\x0b\x08\x00\x20\x00\x20\x01\x60\x45\x0b\x08\x00\x20\x00\x20\x01\x63\x45\x0b\x08\x00\x20\x00\x20\x01\x65\x45\x0b\x08\x00\x20\x00\x20\x01\x64\x45\x0b\x08\x00\x20\x00\x20\x01\x66\x45\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x00\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x01\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x02\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\xc0\x7f\x43\x00\x00\x00\x00\x10\x03\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x04\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x05\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x06\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x44\x00\x00\x00\x00\x00\x00\x00\x00\x10\x07\x41\x01\x46\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
assert_return(() => $$.exports["assert_4"]());
assert_return(() => $$.exports["assert_5"]());
assert_return(() => $$.exports["assert_6"]());
assert_return(() => $$.exports["assert_7"]());
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x09\x02\x60\x00\x01\x7d\x60\x00\x01\x7c\x03\x03\x02\x00\x01\x07\x1d\x02\x0b\x66\x33\x32\x2e\x65\x70\x73\x69\x6c\x6f\x6e\x00\x00\x0b\x66\x36\x34\x2e\x65\x70\x73\x69\x6c\x6f\x6e\x00\x01\x0a\x55\x02\x1f\x00\x43\x00\x00\x80\x3f\x43\x00\x00\x40\x40\x43\x00\x00\x80\x40\x43\x00\x00\x40\x40\x95\x43\x00\x00\x80\x3f\x93\x94\x93\x0b\x33\x00\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\x44\x00\x00\x00\x00\x00\x00\x08\x40\x44\x00\x00\x00\x00\x00\x00\x10\x40\x44\x00\x00\x00\x00\x00\x00\x08\x40\xa3\x44\x00\x00\x00\x00\x00\x00\xf0\x3f\xa1\xa2\xa1\x0b");
assert_return(() => $$.exports["f32.epsilon"](), f32(-1.19209289551e-07));
assert_return(() => $$.exports["f64.epsilon"](), 2.220446049250313e-16);
$$ = instance("\x00\x61\x73\x6d\x0d\x00\x00\x00\x01\x10\x03\x60\x02\x7d\x7d\x01\x7f\x60\x02\x7c\x7c\x01\x7f\x60\x00\x00\x03\x11\x10\x00\x00\x00\x00\x01\x01\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x07\x91\x02\x10\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x74\x72\x69\x63\x68\x6f\x74\x6f\x6d\x79\x5f\x6c\x74\x00\x00\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x74\x72\x69\x63\x68\x6f\x74\x6f\x6d\x79\x5f\x6c\x65\x00\x01\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x74\x72\x69\x63\x68\x6f\x74\x6f\x6d\x79\x5f\x67\x74\x00\x02\x14\x66\x33\x32\x2e\x6e\x6f\x5f\x74\x72\x69\x63\x68\x6f\x74\x6f\x6d\x79\x5f\x67\x65\x00\x03\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x74\x72\x69\x63\x68\x6f\x74\x6f\x6d\x79\x5f\x6c\x74\x00\x04\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x74\x72\x69\x63\x68\x6f\x74\x6f\x6d\x79\x5f\x6c\x65\x00\x05\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x74\x72\x69\x63\x68\x6f\x74\x6f\x6d\x79\x5f\x67\x74\x00\x06\x14\x66\x36\x34\x2e\x6e\x6f\x5f\x74\x72\x69\x63\x68\x6f\x74\x6f\x6d\x79\x5f\x67\x65\x00\x07\x08\x61\x73\x73\x65\x72\x74\x5f\x30\x00\x08\x08\x61\x73\x73\x65\x72\x74\x5f\x31\x00\x09\x08\x61\x73\x73\x65\x72\x74\x5f\x32\x00\x0a\x08\x61\x73\x73\x65\x72\x74\x5f\x33\x00\x0b\x08\x61\x73\x73\x65\x72\x74\x5f\x34\x00\x0c\x08\x61\x73\x73\x65\x72\x74\x5f\x35\x00\x0d\x08\x61\x73\x73\x65\x72\x74\x5f\x36\x00\x0e\x08\x61\x73\x73\x65\x72\x74\x5f\x37\x00\x0f\x0a\xe1\x02\x10\x0d\x00\x20\x00\x20\x01\x5d\x20\x00\x20\x01\x60\x72\x0b\x0d\x00\x20\x00\x20\x01\x5f\x20\x00\x20\x01\x5e\x72\x0b\x0d\x00\x20\x00\x20\x01\x5e\x20\x00\x20\x01\x5f\x72\x0b\x0d\x00\x20\x00\x20\x01\x60\x20\x00\x20\x01\x5d\x72\x0b\x0d\x00\x20\x00\x20\x01\x63\x20\x00\x20\x01\x66\x72\x0b\x0d\x00\x20\x00\x20\x01\x65\x20\x00\x20\x01\x64\x72\x0b\x0d\x00\x20\x00\x20\x01\x64\x20\x00\x20\x01\x65\x72\x0b\x0d\x00\x20\x00\x20\x01\x66\x20\x00\x20\x01\x63\x72\x0b\x19\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x00\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x01\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x02\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x19\x00\x02\x40\x43\x00\x00\x00\x00\x43\x00\x00\xc0\x7f\x10\x03\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x04\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x05\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x06\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b\x21\x00\x02\x40\x44\x00\x00\x00\x00\x00\x00\x00\x00\x44\x00\x00\x00\x00\x00\x00\xf8\x7f\x10\x07\x41\x00\x46\x45\x0d\x00\x0f\x0b\x00\x0b");
assert_return(() => $$.exports["assert_0"]());
assert_return(() => $$.exports["assert_1"]());
assert_return(() => $$.exports["assert_2"]());
assert_return(() => $$.exports["assert_3"]());
assert_return(() => $$.exports["assert_4"]());
assert_return(() => $$.exports["assert_5"]());
assert_return(() => $$.exports["assert_6"]());
assert_return(() => $$.exports["assert_7"]());
