---
test/annexB/built-ins/Function/createdynfn-html-close-comment-params.js:
  default: "SyntaxError: Unexpected token '--'. Expected a parameter pattern or a ')' in parameter list."
  strict mode: "SyntaxError: Unexpected token '--'. Expected a parameter pattern or a ')' in parameter list."
test/annexB/built-ins/Function/createdynfn-html-open-comment-params.js:
  default: "SyntaxError: Unexpected token '}'. Expected a parameter pattern or a ')' in parameter list."
  strict mode: "SyntaxError: Unexpected token '}'. Expected a parameter pattern or a ')' in parameter list."
test/annexB/built-ins/RegExp/prototype/Symbol.split/Symbol.match-getter-recompiles-source.js:
  default: 'Test262Error: Expected SameValue(Â«Â», Â«aÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«Â», Â«aÂ») to be true'
test/annexB/built-ins/RegExp/prototype/compile/pattern-string-invalid-u.js:
  default: 'Test262Error: invalid pattern: { Expected a SyntaxError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: invalid pattern: { Expected a SyntaxError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-block-decl-eval-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-block-decl-eval-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-block-decl-eval-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-block-decl-eval-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-block-decl-eval-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-block-decl-eval-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-a-eval-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-a-eval-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-a-eval-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-a-eval-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-a-eval-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-a-eval-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-b-eval-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-b-eval-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-b-eval-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-b-eval-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-b-eval-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-decl-b-eval-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-stmt-eval-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-stmt-eval-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-stmt-eval-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-stmt-eval-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-stmt-eval-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-else-stmt-eval-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-no-else-eval-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-no-else-eval-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-no-else-eval-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-no-else-eval-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-no-else-eval-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-decl-no-else-eval-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-stmt-else-decl-eval-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-stmt-else-decl-eval-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-stmt-else-decl-eval-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-stmt-else-decl-eval-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-stmt-else-decl-eval-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-if-stmt-else-decl-eval-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-case-eval-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-case-eval-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-case-eval-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-case-eval-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-case-eval-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-case-eval-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-dflt-eval-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-dflt-eval-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-dflt-eval-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-dflt-eval-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-dflt-eval-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/func-switch-dflt-eval-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-block-decl-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-block-decl-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-block-decl-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-block-decl-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-block-decl-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-block-decl-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-a-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-a-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-a-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-a-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-a-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-a-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-b-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-b-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-b-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-b-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-b-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-decl-b-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-stmt-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-stmt-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-stmt-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-stmt-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-stmt-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-else-stmt-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-no-else-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-no-else-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-no-else-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-no-else-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-no-else-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-decl-no-else-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-stmt-else-decl-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-stmt-else-decl-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-stmt-else-decl-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-stmt-else-decl-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-stmt-else-decl-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-if-stmt-else-decl-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-case-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-case-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-case-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-case-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-case-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-case-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-dflt-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-dflt-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-dflt-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-dflt-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-dflt-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/global-switch-dflt-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/direct/var-env-lower-lex-catch-non-strict.js:
  default: "SyntaxError: Can't create duplicate variable in eval: 'err'"
test/annexB/language/eval-code/indirect/global-block-decl-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-block-decl-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-block-decl-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-block-decl-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-block-decl-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-block-decl-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-a-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-a-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-a-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-a-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-a-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-a-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-b-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-b-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-b-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-b-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-b-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-decl-b-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-stmt-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-stmt-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-stmt-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-stmt-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-stmt-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-else-stmt-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-no-else-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-no-else-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-no-else-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-no-else-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-no-else-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-decl-no-else-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-stmt-else-decl-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-stmt-else-decl-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-stmt-else-decl-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-stmt-else-decl-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-stmt-else-decl-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-if-stmt-else-decl-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-case-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-case-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-case-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-case-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-case-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-case-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-dflt-eval-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-dflt-eval-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-dflt-eval-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-dflt-eval-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-dflt-eval-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created following evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/eval-code/indirect/global-switch-dflt-eval-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/expressions/yield/star-iterable-return-emulates-undefined-throws-when-called.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/block-decl-func-skip-arguments.js:
  default: 'Test262Error: Expected SameValue(Â«function arguments() {}Â», Â«[object Arguments]Â») to be true'
test/annexB/language/function-code/block-decl-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/block-decl-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/block-decl-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/block-decl-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/block-decl-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/block-decl-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/block-decl-nested-blocks-with-fun-decl.js:
  default: 'Test262Error: Expected SameValue(Â«2Â», Â«1Â») to be true'
test/annexB/language/function-code/if-decl-else-decl-a-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-a-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-a-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-a-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-a-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-a-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-b-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-b-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-b-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-b-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-b-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-decl-b-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-stmt-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-stmt-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-stmt-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-stmt-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-stmt-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-else-stmt-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-no-else-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-no-else-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-no-else-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-no-else-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-no-else-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-decl-no-else-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-stmt-else-decl-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-stmt-else-decl-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-stmt-else-decl-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-stmt-else-decl-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-stmt-else-decl-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/if-stmt-else-decl-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-case-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-case-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-case-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-case-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-case-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-case-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-dflt-func-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-dflt-func-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-dflt-func-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-dflt-func-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-dflt-func-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/function-code/switch-dflt-func-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/block-decl-global-block-scoping.js:
  default: "TypeError: f is not a function. (In 'f()', 'f' is 123)"
test/annexB/language/global-code/block-decl-global-existing-block-fn-no-init.js:
  default: 'Test262Error: Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/block-decl-global-existing-fn-update.js:
  default: 'Test262Error: Expected SameValue(Â«outer declarationÂ», Â«inner declarationÂ») to be true'
test/annexB/language/global-code/block-decl-global-existing-non-enumerable-global-init.js:
  default: 'Test262Error: descriptor should not be enumerable; descriptor should be configurable'
test/annexB/language/global-code/block-decl-global-init.js:
  default: 'Test262Error: binding is initialized to `undefined` Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/block-decl-global-no-skip-try.js:
  default: 'Test262Error: Initialized binding created prior to evaluation Expected SameValue(Â«function f() { return 123; }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/block-decl-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/block-decl-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/block-decl-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/block-decl-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/block-decl-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/block-decl-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/block-decl-global-skip-early-err.js:
  default: "SyntaxError: Cannot declare a function that shadows a let/const/class/function variable 'f' in strict mode."
test/annexB/language/global-code/if-decl-else-decl-a-global-block-scoping.js:
  default: "TypeError: f is not a function. (In 'f()', 'f' is 123)"
test/annexB/language/global-code/if-decl-else-decl-a-global-existing-block-fn-no-init.js:
  default: 'Test262Error: Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-else-decl-a-global-existing-fn-update.js:
  default: 'Test262Error: Expected SameValue(Â«outer declarationÂ», Â«inner declarationÂ») to be true'
test/annexB/language/global-code/if-decl-else-decl-a-global-existing-non-enumerable-global-init.js:
  default: 'Test262Error: descriptor should not be enumerable; descriptor should be configurable'
test/annexB/language/global-code/if-decl-else-decl-a-global-init.js:
  default: 'Test262Error: binding is initialized to `undefined` Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-else-decl-a-global-no-skip-try.js:
  default: 'Test262Error: Initialized binding created prior to evaluation Expected SameValue(Â«function f() { return 123; }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-else-decl-a-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-a-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-a-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-a-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-a-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-a-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-a-global-skip-early-err.js:
  default: "SyntaxError: Cannot declare a function that shadows a let/const/class/function variable 'f' in strict mode."
test/annexB/language/global-code/if-decl-else-decl-b-global-block-scoping.js:
  default: "TypeError: f is not a function. (In 'f()', 'f' is 123)"
test/annexB/language/global-code/if-decl-else-decl-b-global-existing-block-fn-no-init.js:
  default: 'Test262Error: Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-else-decl-b-global-existing-fn-update.js:
  default: 'Test262Error: Expected SameValue(Â«outer declarationÂ», Â«inner declarationÂ») to be true'
test/annexB/language/global-code/if-decl-else-decl-b-global-existing-non-enumerable-global-init.js:
  default: 'Test262Error: descriptor should not be enumerable; descriptor should be configurable'
test/annexB/language/global-code/if-decl-else-decl-b-global-init.js:
  default: 'Test262Error: binding is initialized to `undefined` Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-else-decl-b-global-no-skip-try.js:
  default: 'Test262Error: Initialized binding created prior to evaluation Expected SameValue(Â«function f() { return 123; }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-else-decl-b-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-b-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-b-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-b-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-b-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-b-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-decl-b-global-skip-early-err.js:
  default: "SyntaxError: Cannot declare a function that shadows a let/const/class/function variable 'f' in strict mode."
test/annexB/language/global-code/if-decl-else-stmt-global-block-scoping.js:
  default: "TypeError: f is not a function. (In 'f()', 'f' is 123)"
test/annexB/language/global-code/if-decl-else-stmt-global-existing-block-fn-no-init.js:
  default: 'Test262Error: Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-else-stmt-global-existing-fn-update.js:
  default: 'Test262Error: Expected SameValue(Â«outer declarationÂ», Â«inner declarationÂ») to be true'
test/annexB/language/global-code/if-decl-else-stmt-global-existing-non-enumerable-global-init.js:
  default: 'Test262Error: descriptor should not be enumerable; descriptor should be configurable'
test/annexB/language/global-code/if-decl-else-stmt-global-init.js:
  default: 'Test262Error: binding is initialized to `undefined` Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-else-stmt-global-no-skip-try.js:
  default: 'Test262Error: Initialized binding created prior to evaluation Expected SameValue(Â«function f() { return 123; }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-else-stmt-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-stmt-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-stmt-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-stmt-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-stmt-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-stmt-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-else-stmt-global-skip-early-err.js:
  default: "SyntaxError: Cannot declare a function that shadows a let/const/class/function variable 'f' in strict mode."
test/annexB/language/global-code/if-decl-no-else-global-block-scoping.js:
  default: "TypeError: f is not a function. (In 'f()', 'f' is 123)"
test/annexB/language/global-code/if-decl-no-else-global-existing-block-fn-no-init.js:
  default: 'Test262Error: Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-no-else-global-existing-fn-update.js:
  default: 'Test262Error: Expected SameValue(Â«outer declarationÂ», Â«inner declarationÂ») to be true'
test/annexB/language/global-code/if-decl-no-else-global-existing-non-enumerable-global-init.js:
  default: 'Test262Error: descriptor should not be enumerable; descriptor should be configurable'
test/annexB/language/global-code/if-decl-no-else-global-init.js:
  default: 'Test262Error: binding is initialized to `undefined` Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-no-else-global-no-skip-try.js:
  default: 'Test262Error: Initialized binding created prior to evaluation Expected SameValue(Â«function f() { return 123; }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-decl-no-else-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-no-else-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-no-else-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-no-else-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-no-else-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-no-else-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-decl-no-else-global-skip-early-err.js:
  default: "SyntaxError: Cannot declare a function that shadows a let/const/class/function variable 'f' in strict mode."
test/annexB/language/global-code/if-stmt-else-decl-global-block-scoping.js:
  default: "TypeError: f is not a function. (In 'f()', 'f' is 123)"
test/annexB/language/global-code/if-stmt-else-decl-global-existing-block-fn-no-init.js:
  default: 'Test262Error: Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-stmt-else-decl-global-existing-fn-update.js:
  default: 'Test262Error: Expected SameValue(Â«outer declarationÂ», Â«inner declarationÂ») to be true'
test/annexB/language/global-code/if-stmt-else-decl-global-existing-non-enumerable-global-init.js:
  default: 'Test262Error: descriptor should not be enumerable; descriptor should be configurable'
test/annexB/language/global-code/if-stmt-else-decl-global-init.js:
  default: 'Test262Error: binding is initialized to `undefined` Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-stmt-else-decl-global-no-skip-try.js:
  default: 'Test262Error: Initialized binding created prior to evaluation Expected SameValue(Â«function f() { return 123; }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/if-stmt-else-decl-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-stmt-else-decl-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-stmt-else-decl-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-stmt-else-decl-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-stmt-else-decl-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-stmt-else-decl-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/if-stmt-else-decl-global-skip-early-err.js:
  default: "SyntaxError: Cannot declare a function that shadows a let/const/class/function variable 'f' in strict mode."
test/annexB/language/global-code/switch-case-global-block-scoping.js:
  default: "TypeError: f is not a function. (In 'f()', 'f' is 123)"
test/annexB/language/global-code/switch-case-global-existing-block-fn-no-init.js:
  default: 'Test262Error: Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/switch-case-global-existing-fn-update.js:
  default: 'Test262Error: Expected SameValue(Â«outer declarationÂ», Â«inner declarationÂ») to be true'
test/annexB/language/global-code/switch-case-global-existing-non-enumerable-global-init.js:
  default: 'Test262Error: descriptor should not be enumerable; descriptor should be configurable'
test/annexB/language/global-code/switch-case-global-init.js:
  default: 'Test262Error: binding is initialized to `undefined` Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/switch-case-global-no-skip-try.js:
  default: 'Test262Error: Initialized binding created prior to evaluation Expected SameValue(Â«function f() { return 123; }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/switch-case-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-case-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-case-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-case-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-case-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-case-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-case-global-skip-early-err.js:
  default: "SyntaxError: Cannot declare a function that shadows a let/const/class/function variable 'f' in strict mode."
test/annexB/language/global-code/switch-dflt-global-block-scoping.js:
  default: "TypeError: f is not a function. (In 'f()', 'f' is 123)"
test/annexB/language/global-code/switch-dflt-global-existing-block-fn-no-init.js:
  default: 'Test262Error: Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/switch-dflt-global-existing-fn-update.js:
  default: 'Test262Error: Expected SameValue(Â«outer declarationÂ», Â«inner declarationÂ») to be true'
test/annexB/language/global-code/switch-dflt-global-existing-non-enumerable-global-init.js:
  default: 'Test262Error: descriptor should not be enumerable; descriptor should be configurable'
test/annexB/language/global-code/switch-dflt-global-init.js:
  default: 'Test262Error: binding is initialized to `undefined` Expected SameValue(Â«function f() {  }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/switch-dflt-global-no-skip-try.js:
  default: 'Test262Error: Initialized binding created prior to evaluation Expected SameValue(Â«function f() { return 123; }Â», Â«undefinedÂ») to be true'
test/annexB/language/global-code/switch-dflt-global-skip-early-err-block.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-dflt-global-skip-early-err-for-in.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-dflt-global-skip-early-err-for-of.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-dflt-global-skip-early-err-for.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-dflt-global-skip-early-err-switch.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-dflt-global-skip-early-err-try.js:
  default: 'Test262Error: An initialized binding is not created prior to evaluation Expected a ReferenceError to be thrown but no exception was thrown at all'
test/annexB/language/global-code/switch-dflt-global-skip-early-err.js:
  default: "SyntaxError: Cannot declare a function that shadows a let/const/class/function variable 'f' in strict mode."
test/annexB/language/statements/for-of/iterator-close-return-emulates-undefined-throws-when-called.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Array/of/return-abrupt-from-data-property.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Array/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«Â», Â«Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«Â», Â«Â») to be true'
test/built-ins/Array/prototype/filter/target-array-with-non-writable-property.js:
  default: 'TypeError: Attempted to assign to readonly property.'
  strict mode: 'TypeError: Attempted to assign to readonly property.'
test/built-ins/Array/prototype/indexOf/calls-only-has-on-prototype-after-length-zeroed.js:
  default: 'Test262Error: [[GetPrototypeOf]] trap called'
  strict mode: 'Test262Error: [[GetPrototypeOf]] trap called'
test/built-ins/Array/prototype/lastIndexOf/calls-only-has-on-prototype-after-length-zeroed.js:
  default: 'Test262Error: [[GetPrototypeOf]] trap called'
  strict mode: 'Test262Error: [[GetPrototypeOf]] trap called'
test/built-ins/Array/prototype/map/target-array-with-non-writable-property.js:
  default: 'TypeError: Attempted to assign to readonly property.'
  strict mode: 'TypeError: Attempted to assign to readonly property.'
test/built-ins/Array/prototype/pop/S15.4.4.6_A2_T2.js:
  default: 'Test262Error: #4: var obj = {}; obj.length = Number.POSITIVE_INFINITY; obj.pop = Array.prototype.pop; obj.pop(); obj.length === 9007199254740990. Actual: 4294967294'
  strict mode: 'Test262Error: #4: var obj = {}; obj.length = Number.POSITIVE_INFINITY; obj.pop = Array.prototype.pop; obj.pop(); obj.length === 9007199254740990. Actual: 4294967294'
test/built-ins/Array/prototype/pop/S15.4.4.6_A3_T1.js:
  default: 'Test262Error: #1: var obj = {}; obj.pop = Array.prototype.pop; obj[0] = "x"; obj[4294967295] = "y"; obj.length = 4294967296; obj.pop() === "y". Actual: undefined'
  strict mode: 'Test262Error: #1: var obj = {}; obj.pop = Array.prototype.pop; obj[0] = "x"; obj[4294967295] = "y"; obj.length = 4294967296; obj.pop() === "y". Actual: undefined'
test/built-ins/Array/prototype/pop/clamps-to-integer-limit.js:
  default: 'Test262Error: Length is 2**53 - 1 Expected SameValue(Â«4294967294Â», Â«9007199254740990Â») to be true'
  strict mode: 'Test262Error: Length is 2**53 - 1 Expected SameValue(Â«4294967294Â», Â«9007199254740990Â») to be true'
test/built-ins/Array/prototype/pop/length-near-integer-limit.js:
  default: "Test262Error: arrayLike['9007199254740990'] is returned from pop() Expected SameValue(Â«undefinedÂ», Â«9007199254740990Â») to be true"
  strict mode: "Test262Error: arrayLike['9007199254740990'] is returned from pop() Expected SameValue(Â«undefinedÂ», Â«9007199254740990Â») to be true"
test/built-ins/Array/prototype/push/S15.4.4.7_A2_T2.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Array/prototype/push/clamps-to-integer-limit.js:
  default: 'Test262Error: Length is 2**53 - 1 Expected SameValue(Â«4294967295Â», Â«9007199254740991Â») to be true'
  strict mode: 'Test262Error: Length is 2**53 - 1 Expected SameValue(Â«4294967295Â», Â«9007199254740991Â») to be true'
test/built-ins/Array/prototype/push/throws-if-integer-limit-exceeded.js:
  default: 'Test262Error: Length is 2**53 - 1 Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Length is 2**53 - 1 Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Array/prototype/reverse/length-exceeding-integer-limit-with-proxy.js:
  default: 'Test262Error: Expected a StopReverse but got a Test262Error'
  strict mode: 'Test262Error: Expected a StopReverse but got a Test262Error'
test/built-ins/Array/prototype/slice/create-proto-from-ctor-realm-non-array.js:
  default: 'Test262Error: Expected SameValue(Â«Â», Â«[object Object]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«Â», Â«[object Object]Â») to be true'
test/built-ins/Array/prototype/slice/length-exceeding-integer-limit-proxied-array.js:
  default: 'Test262Error: Expected [] and [9007199254740989, 9007199254740990] to have the same contents. slice(9007199254740989)'
  strict mode: 'Test262Error: Expected [] and [9007199254740989, 9007199254740990] to have the same contents. slice(9007199254740989)'
test/built-ins/Array/prototype/slice/length-exceeding-integer-limit.js:
  default: 'Test262Error: Expected [] and [9007199254740989, 9007199254740990] to have the same contents. slice(9007199254740989)'
  strict mode: 'Test262Error: Expected [] and [9007199254740989, 9007199254740990] to have the same contents. slice(9007199254740989)'
test/built-ins/Array/prototype/slice/target-array-with-non-writable-property.js:
  default: 'TypeError: Attempted to assign to readonly property.'
  strict mode: 'TypeError: Attempted to assign to readonly property.'
test/built-ins/Array/prototype/splice/S15.4.4.12_A3_T1.js:
  default: 'Test262Error: #1: var obj = {}; obj.splice = Array.prototype.splice; obj[0] = "x"; obj[4294967295] = "y"; obj.length = 4294967296; var arr = obj.splice(4294967295,1); arr.length === 1. Actual: 0'
  strict mode: 'Test262Error: #1: var obj = {}; obj.splice = Array.prototype.splice; obj[0] = "x"; obj[4294967295] = "y"; obj.length = 4294967296; var arr = obj.splice(4294967295,1); arr.length === 1. Actual: 0'
test/built-ins/Array/prototype/splice/clamps-length-to-integer-limit.js:
  default: 'Test262Error: Length is 2**53 - 1 Expected SameValue(Â«4294967295Â», Â«9007199254740991Â») to be true'
  strict mode: 'Test262Error: Length is 2**53 - 1 Expected SameValue(Â«4294967295Â», Â«9007199254740991Â») to be true'
test/built-ins/Array/prototype/splice/create-proto-from-ctor-realm-non-array.js:
  default: 'Test262Error: Expected SameValue(Â«Â», Â«[object Object]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«Â», Â«[object Object]Â») to be true'
test/built-ins/Array/prototype/splice/create-proxy.js:
  default: 'TypeError: Attempted to assign to readonly property.'
  strict mode: 'TypeError: Attempted to assign to readonly property.'
test/built-ins/Array/prototype/splice/create-species-length-exceeding-integer-limit.js:
  default: 'Test262Error: Expected a StopSplice but got a Test262Error'
  strict mode: 'Test262Error: Expected a StopSplice but got a Test262Error'
test/built-ins/Array/prototype/splice/length-and-deleteCount-exceeding-integer-limit.js:
  default: "Test262Error: Expected [] and [9007199254740989, 9007199254740990] to have the same contents. arrayLike['9007199254740989'] and arrayLike['9007199254740990'] are removed"
  strict mode: "Test262Error: Expected [] and [9007199254740989, 9007199254740990] to have the same contents. arrayLike['9007199254740989'] and arrayLike['9007199254740990'] are removed"
test/built-ins/Array/prototype/splice/length-exceeding-integer-limit-shrink-array.js:
  default: "Test262Error: Expected [] and [9007199254740987] to have the same contents. arrayLike['9007199254740987'] is removed"
  strict mode: "Test262Error: Expected [] and [9007199254740987] to have the same contents. arrayLike['9007199254740987'] is removed"
test/built-ins/Array/prototype/splice/property-traps-order-with-species.js:
  default: 'Test262Error: Expected [defineProperty, defineProperty, set, getOwnPropertyDescriptor, defineProperty] and [defineProperty, defineProperty] to have the same contents. undefined'
  strict mode: 'Test262Error: Expected [defineProperty, defineProperty, set, getOwnPropertyDescriptor, defineProperty] and [defineProperty, defineProperty] to have the same contents. undefined'
test/built-ins/Array/prototype/splice/target-array-with-non-writable-property.js:
  default: 'TypeError: Attempted to assign to readonly property.'
  strict mode: 'TypeError: Attempted to assign to readonly property.'
test/built-ins/Array/prototype/splice/throws-if-integer-limit-exceeded.js:
  default: 'Test262Error: Length is 2**53 - 1 Expected a TypeError but got a Error'
  strict mode: 'Test262Error: Length is 2**53 - 1 Expected a TypeError but got a Error'
test/built-ins/Array/prototype/unshift/clamps-to-integer-limit.js:
  default: 'Test262Error: Length is 2**53 - 1 Expected SameValue(Â«4294967295Â», Â«9007199254740991Â») to be true'
  strict mode: 'Test262Error: Length is 2**53 - 1 Expected SameValue(Â«4294967295Â», Â«9007199254740991Â») to be true'
test/built-ins/ArrayBuffer/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object ArrayBuffer]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object ArrayBuffer]Â») to be true'
test/built-ins/ArrayBuffer/prototype/byteLength/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/ArrayBuffer/prototype/slice/species-constructor-is-not-object.js:
  default: 'Test262Error: `constructor` value is null Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: `constructor` value is null Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/ArrayBuffer/prototype/slice/species-is-not-constructor.js:
  default: 'Test262Error: `constructor[Symbol.species]` value is Object Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: `constructor[Symbol.species]` value is Object Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/ArrayBuffer/prototype/slice/species-is-not-object.js:
  default: 'Test262Error: `constructor[Symbol.species]` value is Boolean Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: `constructor[Symbol.species]` value is Boolean Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/ArrayBuffer/prototype/slice/species-returns-larger-arraybuffer.js:
  default: 'Test262Error: Expected SameValue(Â«8Â», Â«10Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«8Â», Â«10Â») to be true'
test/built-ins/ArrayBuffer/prototype/slice/species-returns-not-arraybuffer.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/ArrayBuffer/prototype/slice/species-returns-same-arraybuffer.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/ArrayBuffer/prototype/slice/species-returns-smaller-arraybuffer.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/ArrayBuffer/prototype/slice/species.js:
  default: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«undefinedÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«undefinedÂ») to be true'
test/built-ins/ArrayIteratorPrototype/next/detach-typedarray-in-progress.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/Boolean/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«falseÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«falseÂ», Â«falseÂ») to be true'
test/built-ins/DataView/custom-proto-access-detaches-buffer.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/DataView/detached-buffer.js:
  default: 'Test262Error: throws if buffer is detached Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: throws if buffer is detached Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/DataView/length.js:
  default: 'Test262Error: descriptor value should be 1'
  strict mode: 'Test262Error: descriptor value should be 1'
test/built-ins/DataView/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object DataView]Â», Â«[object DataView]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object DataView]Â», Â«[object DataView]Â») to be true'
test/built-ins/DataView/prototype/byteLength/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/DataView/prototype/byteOffset/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/DataView/prototype/getFloat32/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getFloat32/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getFloat64/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getFloat64/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getInt16/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getInt16/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getInt32/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getInt32/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getInt8/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getInt8/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getUint16/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getUint16/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getUint32/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getUint32/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getUint8/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/getUint8/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setFloat32/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setFloat32/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setFloat64/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setFloat64/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setInt16/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setInt16/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setInt32/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setInt32/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setInt8/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setInt8/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setUint16/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setUint16/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setUint32/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setUint32/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setUint8/detached-buffer-before-outofrange-byteoffset.js:
  default: 'Test262Error: 13 Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: 13 Expected a TypeError but got a RangeError'
test/built-ins/DataView/prototype/setUint8/detached-buffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError'
test/built-ins/Date/proto-from-ctor-realm-one.js:
  default: 'TypeError: Type error'
  strict mode: 'TypeError: Type error'
test/built-ins/Date/proto-from-ctor-realm-two.js:
  default: 'TypeError: Type error'
  strict mode: 'TypeError: Type error'
test/built-ins/Date/proto-from-ctor-realm-zero.js:
  default: 'TypeError: Type error'
  strict mode: 'TypeError: Type error'
test/built-ins/Error/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«ErrorÂ», Â«ErrorÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«ErrorÂ», Â«ErrorÂ») to be true'
test/built-ins/Function/StrictFunction_restricted-properties.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Function/call-bind-this-realm-undef.js:
  default: 'Test262Error: implicit undefined Expected SameValue(Â«[object global]Â», Â«[object Undefined]Â») to be true'
  strict mode: 'Test262Error: implicit undefined Expected SameValue(Â«[object global]Â», Â«[object Undefined]Â») to be true'
test/built-ins/Function/internals/Call/class-ctor-realm.js:
  default: 'Test262Error: Expected a TypeError but got a TypeError'
  strict mode: 'Test262Error: Expected a TypeError but got a TypeError'
test/built-ins/Function/internals/Construct/base-ctor-revoked-proxy-realm.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Function/internals/Construct/base-ctor-revoked-proxy.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Function/internals/Construct/derived-return-val-realm.js:
  default: 'Test262Error: Expected a TypeError but got a TypeError'
  strict mode: 'Test262Error: Expected a TypeError but got a TypeError'
test/built-ins/Function/internals/Construct/derived-this-uninitialized-realm.js:
  default: 'Test262Error: Expected a ReferenceError but got a ReferenceError'
  strict mode: 'Test262Error: Expected a ReferenceError but got a ReferenceError'
test/built-ins/Function/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«function () {'
  strict mode: 'Test262Error: Expected SameValue(Â«function () {'
test/built-ins/Function/prototype/bind/length-exceeds-int32.js:
  default: 'Test262Error: Expected SameValue(Â«0Â», Â«2147483648Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«0Â», Â«2147483648Â») to be true'
test/built-ins/Function/prototype/bind/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«[object Object]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«[object Object]Â») to be true'
test/built-ins/Function/prototype/restricted-property-arguments.js:
  default: "ReferenceError: Can't find variable: verifyNotEnumerable"
  strict mode: "ReferenceError: Can't find variable: verifyNotEnumerable"
test/built-ins/Function/prototype/restricted-property-caller.js:
  default: "ReferenceError: Can't find variable: verifyNotEnumerable"
  strict mode: "ReferenceError: Can't find variable: verifyNotEnumerable"
test/built-ins/Function/prototype/toString/AsyncFunction.js:
  default: "SyntaxError: Unexpected token ';'. Expected a ')' or a ',' after a parameter declaration."
  strict mode: "SyntaxError: Unexpected token ';'. Expected a ')' or a ',' after a parameter declaration."
test/built-ins/Function/prototype/toString/Function.js:
  default: "SyntaxError: Unexpected token ';'. Expected a ')' or a ',' after a parameter declaration."
  strict mode: "SyntaxError: Unexpected token ';'. Expected a ')' or a ',' after a parameter declaration."
test/built-ins/Function/prototype/toString/GeneratorFunction.js:
  default: "SyntaxError: Unexpected keyword 'yield'. Expected a ')' or a ',' after a parameter declaration."
  strict mode: "SyntaxError: Unexpected keyword 'yield'. Expected a ')' or a ',' after a parameter declaration."
test/built-ins/Function/prototype/toString/async-arrow-function.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'async ( /* b */ a /* c */ , /* d */ b /* e */ ) /* f */ => /* g */ { /* h */ ; /* i */ }'.(async /* a */ ( /* b */ a /* c */ , /* d */ b /* e */ ) /* f */ => /* g */ { /* h */ ; /* i */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'async ( /* b */ a /* c */ , /* d */ b /* e */ ) /* f */ => /* g */ { /* h */ ; /* i */ }'.(async /* a */ ( /* b */ a /* c */ , /* d */ b /* e */ ) /* f */ => /* g */ { /* h */ ; /* i */ })"
test/built-ins/Function/prototype/toString/async-function-declaration.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ }'.(async function /* a */ f /* b */ ( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ }'.(async function /* a */ f /* b */ ( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ })"
test/built-ins/Function/prototype/toString/async-function-expression.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'async function F( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ }'.(async function /* a */ F /* b */ ( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'async function F( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ }'.(async function /* a */ F /* b */ ( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ })"
test/built-ins/Function/prototype/toString/async-method-class-expression-static.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/async-method-class-expression.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/async-method-class-statement-static.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/async-method-class-statement.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/async-method-object.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'async function f( /* b */ ) /* c */ { /* d */ }'.(async f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/function-declaration-non-simple-parameter-list.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* c */ a /* d */ = /* e */ 0 /* f */ , /* g */ { /* h */ b /* i */ = /* j */ 0 /* k */ } /* l */ ) /* m */ { /* n */ }'.(function /* a */ f /* b */ ( /* c */ a /* d */ = /* e */ 0 /* f */ , /* g */ { /* h */ b /* i */ = /* j */ 0 /* k */ } /* l */ ) /* m */ { /* n */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* c */ a /* d */ = /* e */ 0 /* f */ , /* g */ { /* h */ b /* i */ = /* j */ 0 /* k */ } /* l */ ) /* m */ { /* n */ }'.(function /* a */ f /* b */ ( /* c */ a /* d */ = /* e */ 0 /* f */ , /* g */ { /* h */ b /* i */ = /* j */ 0 /* k */ } /* l */ ) /* m */ { /* n */ })"
test/built-ins/Function/prototype/toString/function-declaration.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ }'.(function /* a */ f /* b */ ( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ }'.(function /* a */ f /* b */ ( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ })"
test/built-ins/Function/prototype/toString/function-expression.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function F( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ }'.(function /* a */ F /* b */ ( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function F( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ }'.(function /* a */ F /* b */ ( /* c */ x /* d */ , /* e */ y /* f */ ) /* g */ { /* h */ ; /* i */ ; /* j */ })"
test/built-ins/Function/prototype/toString/generator-function-declaration.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function* g( /* d */ x /* e */ , /* f */ y /* g */ ) /* h */ { /* i */ ; /* j */ ; /* k */ }'.(function /* a */ * /* b */ g /* c */ ( /* d */ x /* e */ , /* f */ y /* g */ ) /* h */ { /* i */ ; /* j */ ; /* k */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function* g( /* d */ x /* e */ , /* f */ y /* g */ ) /* h */ { /* i */ ; /* j */ ; /* k */ }'.(function /* a */ * /* b */ g /* c */ ( /* d */ x /* e */ , /* f */ y /* g */ ) /* h */ { /* i */ ; /* j */ ; /* k */ })"
test/built-ins/Function/prototype/toString/generator-function-expression.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function* F( /* d */ x /* e */ , /* f */ y /* g */ ) /* h */ { /* i */ ; /* j */ ; /* k */ }'.(function /* a */ * /* b */ F /* c */ ( /* d */ x /* e */ , /* f */ y /* g */ ) /* h */ { /* i */ ; /* j */ ; /* k */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function* F( /* d */ x /* e */ , /* f */ y /* g */ ) /* h */ { /* i */ ; /* j */ ; /* k */ }'.(function /* a */ * /* b */ F /* c */ ( /* d */ x /* e */ , /* f */ y /* g */ ) /* h */ { /* i */ ; /* j */ ; /* k */ })"
test/built-ins/Function/prototype/toString/generator-method.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function* f( /* c */ ) /* d */ { /* e */ }'.(* /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function* f( /* c */ ) /* d */ { /* e */ }'.(* /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
test/built-ins/Function/prototype/toString/getter-class-expression-static.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
test/built-ins/Function/prototype/toString/getter-class-expression.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
test/built-ins/Function/prototype/toString/getter-class-statement-static.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
test/built-ins/Function/prototype/toString/getter-class-statement.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
test/built-ins/Function/prototype/toString/getter-object.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ ) /* d */ { /* e */ }'.(get /* a */ f /* b */ ( /* c */ ) /* d */ { /* e */ })"
test/built-ins/Function/prototype/toString/line-terminator-normalisation-CR-LF.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f(\r"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f(\r"
test/built-ins/Function/prototype/toString/line-terminator-normalisation-CR.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f(\r// c\rx\r// d\r,\r// e\ry\r// f\r)\r// g\r{\r// h\r;\r// i\r;\r// j\r}'.(function\r// a\rf\r// b\r(\r// c\rx\r// d\r,\r// e\ry\r// f\r)\r// g\r{\r// h\r;\r// i\r;\r// j\r})"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f(\r// c\rx\r// d\r,\r// e\ry\r// f\r)\r// g\r{\r// h\r;\r// i\r;\r// j\r}'.(function\r// a\rf\r// b\r(\r// c\rx\r// d\r,\r// e\ry\r// f\r)\r// g\r{\r// h\r;\r// i\r;\r// j\r})"
test/built-ins/Function/prototype/toString/line-terminator-normalisation-LF.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f("
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f("
test/built-ins/Function/prototype/toString/method-class-expression-static.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/method-class-expression.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/method-class-statement-static.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/method-class-statement.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/method-computed-property-name.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* d */ ) /* e */ { /* f */ }'.([ /* a */ \"f\" /* b */ ] /* c */ ( /* d */ ) /* e */ { /* f */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* d */ ) /* e */ { /* f */ }'.([ /* a */ \"f\" /* b */ ] /* c */ ( /* d */ ) /* e */ { /* f */ })"
test/built-ins/Function/prototype/toString/method-object.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function f( /* b */ ) /* c */ { /* d */ }'.(f /* a */ ( /* b */ ) /* c */ { /* d */ })"
test/built-ins/Function/prototype/toString/setter-class-expression-static.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
test/built-ins/Function/prototype/toString/setter-class-expression.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
test/built-ins/Function/prototype/toString/setter-class-statement-static.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
test/built-ins/Function/prototype/toString/setter-class-statement.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
test/built-ins/Function/prototype/toString/setter-object.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function ( /* c */ a /* d */ ) /* e */ { /* f */ }'.(set /* a */ f /* b */ ( /* c */ a /* d */ ) /* e */ { /* f */ })"
test/built-ins/Function/prototype/toString/unicode.js:
  default: "Test262Error: Conforms to NativeFunction Syntax: 'function a(\\u{62}, \\u0063) { \\u0062 = \\u{00063}; return b; }'.(function \\u0061(\\u{62}, \\u0063) { \\u0062 = \\u{00063}; return b; })"
  strict mode: "Test262Error: Conforms to NativeFunction Syntax: 'function a(\\u{62}, \\u0063) { \\u0062 = \\u{00063}; return b; }'.(function \\u0061(\\u{62}, \\u0063) { \\u0062 = \\u{00063}; return b; })"
test/built-ins/GeneratorFunction/proto-from-ctor-realm.js:
  default: 'TypeError: Type error'
  strict mode: 'TypeError: Type error'
test/built-ins/JSON/parse/revived-proxy.js:
  default: 'Test262Error: proxy for array Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: proxy for array Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/built-ins/JSON/parse/reviver-array-length-coerce-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/built-ins/JSON/parse/reviver-array-length-get-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/built-ins/Map/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object Map]Â», Â«[object Map]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object Map]Â», Â«[object Map]Â») to be true'
test/built-ins/Math/round/S15.8.2.15_A7.js:
  default: "Test262Error: #4: '1 / Math.round(0.49999999999999994) !== 1 / 0'"
  strict mode: "Test262Error: #4: '1 / Math.round(0.49999999999999994) !== 1 / 0'"
test/built-ins/Number/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«0Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«0Â», Â«0Â») to be true'
test/built-ins/Number/prototype/toExponential/range.js:
  default: 'RangeError: toExponential() argument must be between 0 and 20'
  strict mode: 'RangeError: toExponential() argument must be between 0 and 20'
test/built-ins/Number/prototype/toFixed/range.js:
  default: 'RangeError: toFixed() argument must be between 0 and 20'
  strict mode: 'RangeError: toFixed() argument must be between 0 and 20'
test/built-ins/Number/prototype/toPrecision/range.js:
  default: 'RangeError: toPrecision() argument must be between 1 and 21'
  strict mode: 'RangeError: toPrecision() argument must be between 1 and 21'
test/built-ins/Object/defineProperties/15.2.3.7-2-15.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Object/defineProperties/15.2.3.7-5-a-16.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Object/defineProperties/15.2.3.7-5-b-248.js:
  default: 'TypeError: Property description must be an object.'
  strict mode: 'TypeError: Property description must be an object.'
test/built-ins/Object/internals/DefineOwnProperty/consistent-value-function-arguments.js:
  default: 'Test262Error: Expected SameValue(Â«nullÂ», Â«[object Arguments]Â») to be true'
test/built-ins/Object/internals/DefineOwnProperty/consistent-value-function-caller.js:
  default: 'Test262Error: Expected SameValue(Â«nullÂ», Â«function g() {'
test/built-ins/Object/internals/DefineOwnProperty/consistent-value-regexp-dollar1.js:
  default: 'Test262Error: Expected SameValue(Â«Â», Â«xÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«Â», Â«xÂ») to be true'
test/built-ins/Object/keys/property-traps-order-with-proxied-array.js:
  default: 'Test262Error: Expected [ownKeys, getOwnPropertyDescriptor] and [ownKeys] to have the same contents. undefined'
  strict mode: 'Test262Error: Expected [ownKeys, getOwnPropertyDescriptor] and [ownKeys] to have the same contents. undefined'
test/built-ins/Object/proto-from-ctor.js:
  default: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«[object Object]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«[object Object]Â») to be true'
test/built-ins/Object/prototype/toString/proxy-function.js:
  default: 'Test262Error: function proxy Expected SameValue(Â«[object Object]Â», Â«[object Function]Â») to be true'
  strict mode: 'Test262Error: function proxy Expected SameValue(Â«[object Object]Â», Â«[object Function]Â») to be true'
test/built-ins/Promise/all/resolve-element-function-nonconstructor.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Promise/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object Promise]Â», Â«[object Promise]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object Promise]Â», Â«[object Promise]Â») to be true'
test/built-ins/Promise/reject-function-nonconstructor.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Promise/resolve-function-nonconstructor.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Proxy/apply/arguments-realm.js:
  default: 'Test262Error: Expected SameValue(Â«function Array() {'
  strict mode: 'Test262Error: Expected SameValue(Â«function Array() {'
test/built-ins/Proxy/apply/trap-is-not-callable-realm.js:
  default: 'Test262Error: Expected a TypeError but got a TypeError'
  strict mode: 'Test262Error: Expected a TypeError but got a TypeError'
test/built-ins/Proxy/construct/arguments-realm.js:
  default: 'Test262Error: Expected SameValue(Â«function Array() {'
  strict mode: 'Test262Error: Expected SameValue(Â«function Array() {'
test/built-ins/Proxy/construct/trap-is-not-callable-realm.js:
  default: 'Test262Error: Expected a TypeError but got a TypeError'
  strict mode: 'Test262Error: Expected a TypeError but got a TypeError'
test/built-ins/Proxy/construct/trap-is-undefined-proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«[object Object]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«[object Object]Â») to be true'
test/built-ins/Proxy/create-handler-is-revoked-proxy.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Proxy/ownKeys/return-duplicate-entries-throws.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/Proxy/ownKeys/return-duplicate-symbol-entries-throws.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/named-groups/groups-object-subclass-sans.js:
  default: 'Test262Error: Expected SameValue(Â«bÂ», Â«$<a>Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«bÂ», Â«$<a>Â») to be true'
test/built-ins/RegExp/named-groups/groups-object-subclass.js:
  default: 'Test262Error: Expected SameValue(Â«bÂ», Â«$<a>Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«bÂ», Â«$<a>Â») to be true'
test/built-ins/RegExp/named-groups/groups-object-undefined.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/built-ins/RegExp/named-groups/groups-object.js:
  default: 'Test262Error: Expected SameValue(Â«nullÂ», Â«[object Object]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«nullÂ», Â«[object Object]Â») to be true'
test/built-ins/RegExp/named-groups/non-unicode-malformed.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/named-groups/string-replace-nocaptures.js:
  default: 'Test262Error: Expected SameValue(Â«$<snd>$<fst>cdÂ», Â«$<$<fst>cdÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«$<snd>$<fst>cdÂ», Â«$<$<fst>cdÂ») to be true'
test/built-ins/RegExp/named-groups/unicode-malformed.js:
  default: 'Test262Error: Lone k Expected a SyntaxError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Lone k Expected a SyntaxError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/named-groups/unicode-property-names.js:
  default: 'SyntaxError: Invalid regular expression: invalid group specifier name'
  strict mode: 'SyntaxError: Invalid regular expression: invalid group specifier name'
test/built-ins/RegExp/property-escapes/binary-properties-with-value.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{ASCII=Yes}/u\")', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{ASCII=Yes}/u\")', 'assert.throws.early' is undefined)"
test/built-ins/RegExp/property-escapes/character-class-range-end.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/character-class-range-no-dash-end.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/character-class-range-no-dash-start.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/character-class-range-start.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/grammar-extensions.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{^General_Category=Letter}/u\")', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{^General_Category=Letter}/u\")', 'assert.throws.early' is undefined)"
test/built-ins/RegExp/property-escapes/loose-matching.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{any}/u\")', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{any}/u\")', 'assert.throws.early' is undefined)"
test/built-ins/RegExp/property-escapes/non-binary-properties-without-value.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{General_Category}/u\")', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{General_Category}/u\")', 'assert.throws.early' is undefined)"
test/built-ins/RegExp/property-escapes/non-existent-properties.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{UnknownBinaryProperty}/u\")', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{UnknownBinaryProperty}/u\")', 'assert.throws.early' is undefined)"
test/built-ins/RegExp/property-escapes/non-existent-property-value-General_Category-negated.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/non-existent-property-value-Script-negated.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/non-existent-property-value-Script.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/non-existent-property-value-Script_Extensions-negated.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/non-existent-property-value-Script_Extensions.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/non-existent-property-value-general-category.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/built-ins/RegExp/property-escapes/non-existent-property-values.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{General_Category=WAT}/u\")', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{General_Category=WAT}/u\")', 'assert.throws.early' is undefined)"
test/built-ins/RegExp/property-escapes/unsupported-binary-properties.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{Composition_Exclusion}/u\")', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{Composition_Exclusion}/u\")', 'assert.throws.early' is undefined)"
test/built-ins/RegExp/property-escapes/unsupported-properties.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{UnknownBinaryProperty}/u\")', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, \"/\\\\p{UnknownBinaryProperty}/u\")', 'assert.throws.early' is undefined)"
test/built-ins/RegExp/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«/(?:)/Â», Â«/(?:)/Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«/(?:)/Â», Â«/(?:)/Â») to be true'
test/built-ins/RegExp/prototype/Symbol.match/builtin-infer-unicode.js:
  default: 'Test262Error: Expected SameValue(Â«í¼Â», Â«nullÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«í¼Â», Â«nullÂ») to be true'
test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-capture.js:
  default: 'Test262Error: Expected SameValue(Â«Â», Â«foo[toString value]barÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«Â», Â«foo[toString value]barÂ») to be true'
test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-length.js:
  default: 'Test262Error: Expected SameValue(Â«Â», Â«foobar$3Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«Â», Â«foobar$3Â») to be true'
test/built-ins/RegExp/prototype/Symbol.replace/result-coerce-matched.js:
  default: 'Test262Error: Expected SameValue(Â«Â», Â«foo[toString value]barÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«Â», Â«foo[toString value]barÂ») to be true'
test/built-ins/RegExp/prototype/Symbol.replace/subst-capture-idx-1.js:
  default: 'Test262Error: Expected SameValue(Â«a[cd]eÂ», Â«a[cd$4$0]eÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«a[cd]eÂ», Â«a[cd$4$0]eÂ») to be true'
test/built-ins/RegExp/prototype/Symbol.replace/subst-capture-idx-2.js:
  default: 'Test262Error: Expected SameValue(Â«a[cd]eÂ», Â«a[cd$04$00]eÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«a[cd]eÂ», Â«a[cd$04$00]eÂ») to be true'
test/built-ins/RegExp/prototype/Symbol.search/u-lastindex-advance.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«-1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«-1Â») to be true'
test/built-ins/RegExp/prototype/Symbol.split/u-lastindex-adv-thru-failure.js:
  default: 'Test262Error: Expected SameValue(Â«2Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«2Â», Â«1Â») to be true'
test/built-ins/RegExp/prototype/dotAll/cross-realm.js:
  default: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/prototype/exec/S15.10.6.2_A5_T3.js:
  default: "TypeError: null is not an object (evaluating '__executed[0]')"
  strict mode: "TypeError: null is not an object (evaluating '__executed[0]')"
test/built-ins/RegExp/prototype/exec/failure-lastindex-access.js:
  default: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
test/built-ins/RegExp/prototype/exec/success-lastindex-access.js:
  default: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
test/built-ins/RegExp/prototype/exec/u-lastindex-adv.js:
  default: 'Test262Error: Expected SameValue(Â«í¼Â», Â«nullÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«í¼Â», Â«nullÂ») to be true'
test/built-ins/RegExp/prototype/global/cross-realm.js:
  default: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/prototype/ignoreCase/cross-realm.js:
  default: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/prototype/multiline/cross-realm.js:
  default: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/prototype/source/cross-realm.js:
  default: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/prototype/sticky/cross-realm.js:
  default: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/prototype/test/S15.10.6.3_A1_T22.js:
  default: 'Test262Error: #1: __re = /(?:ab|cd)\d?/g; __re.lastIndex=-1; __executed = __re.test("aacd22 "); __executed === true'
  strict mode: 'Test262Error: #1: __re = /(?:ab|cd)\d?/g; __re.lastIndex=-1; __executed = __re.test("aacd22 "); __executed === true'
test/built-ins/RegExp/prototype/unicode/cross-realm.js:
  default: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: cross-realm RegExp.prototype Expected a TypeError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/unicode_restricted_brackets.js:
  default: 'Test262Error: RegExp("]", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: RegExp("]", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/unicode_restricted_character_class_escape.js:
  default: 'Test262Error: RegExp("[\d-a]", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: RegExp("[\d-a]", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/unicode_restricted_identity_escape.js:
  default: "Test262Error: Invalid IdentityEscape in AtomEscape: '\\"
  strict mode: "Test262Error: Invalid IdentityEscape in AtomEscape: '\\"
test/built-ins/RegExp/unicode_restricted_identity_escape_alpha.js:
  default: "Test262Error: IdentityEscape in AtomEscape: 'c' Expected a SyntaxError to be thrown but no exception was thrown at all"
  strict mode: "Test262Error: IdentityEscape in AtomEscape: 'c' Expected a SyntaxError to be thrown but no exception was thrown at all"
test/built-ins/RegExp/unicode_restricted_identity_escape_c.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/unicode_restricted_incomple_quantifier.js:
  default: 'Test262Error: RegExp("a{", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: RegExp("a{", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/unicode_restricted_octal_escape.js:
  default: 'Test262Error: RegExp("[\1]", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: RegExp("[\1]", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
test/built-ins/RegExp/unicode_restricted_quantifiable_assertion.js:
  default: 'Test262Error: RegExp("(?=.)*", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: RegExp("(?=.)*", "u"):  Expected a SyntaxError to be thrown but no exception was thrown at all'
test/built-ins/Set/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object Set]Â», Â«[object Set]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object Set]Â», Â«[object Set]Â») to be true'
test/built-ins/String/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«Â», Â«Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«Â», Â«Â») to be true'
test/built-ins/ThrowTypeError/extensible.js:
  default: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/built-ins/ThrowTypeError/frozen.js:
  default: 'Test262Error: Expected SameValue(Â«falseÂ», Â«trueÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«falseÂ», Â«trueÂ») to be true'
test/built-ins/ThrowTypeError/length.js:
  default: 'Test262Error: Expected obj[length] to have configurable:false.'
  strict mode: 'Test262Error: Expected obj[length] to have configurable:false.'
test/built-ins/ThrowTypeError/unique-per-realm-non-simple.js:
  default: 'Test262Error: callee.get Expected SameValue(Â«function () {'
test/built-ins/TypedArray/prototype/fill/fill-values-conversion-once.js:
  default: 'Test262Error: additional unexpected ToNumber() calls Expected SameValue(Â«3Â», Â«2Â») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: additional unexpected ToNumber() calls Expected SameValue(Â«3Â», Â«2Â») to be true (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/filter/speciesctor-get-ctor-returns-throws.js:
  default: 'Test262Error: 42 Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: 42 Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/filter/speciesctor-get-species-custom-ctor-length-throws.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/indexOf/length-zero-returns-minus-one.js:
  default: 'Test262Error:  (Testing with Float64Array.)'
  strict mode: 'Test262Error:  (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/lastIndexOf/length-zero-returns-minus-one.js:
  default: 'Test262Error:  (Testing with Float64Array.)'
  strict mode: 'Test262Error:  (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/slice/detached-buffer-zero-count-custom-ctor-other-targettype.js:
  default: 'TypeError: Underlying ArrayBuffer has been detached from the view (Testing with Float64Array.)'
  strict mode: 'TypeError: Underlying ArrayBuffer has been detached from the view (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/slice/detached-buffer-zero-count-custom-ctor-same-targettype.js:
  default: 'TypeError: Underlying ArrayBuffer has been detached from the view (Testing with Float64Array.)'
  strict mode: 'TypeError: Underlying ArrayBuffer has been detached from the view (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/slice/speciesctor-get-species-custom-ctor-length-throws.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/sort/comparefn-nonfunction-call-throws.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/toLocaleString/calls-tostring-from-each-value.js:
  default: 'Test262Error: should not call valueOf if toString is present (Testing with Float64Array.)'
  strict mode: 'Test262Error: should not call valueOf if toString is present (Testing with Float64Array.)'
test/built-ins/TypedArray/prototype/toLocaleString/calls-valueof-from-each-value.js:
  default: 'Test262Error: returns expected value Expected SameValue(Â«hacks2,hacks1Â», Â«hacks1,hacks2Â») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: returns expected value Expected SameValue(Â«hacks2,hacks1Â», Â«hacks1,hacks2Â») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/buffer-arg/bufferbyteoffset-throws-from-modulo-element-size.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/buffer-arg/byteoffset-to-number-detachbuffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/buffer-arg/detachedbuffer.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/buffer-arg/length-to-number-detachbuffer.js:
  default: 'Test262Error: Expected a TypeError but got a RangeError (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError but got a RangeError (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/buffer-arg/proto-from-ctor-realm.js:
  default: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
  strict mode: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/length-arg/proto-from-ctor-realm.js:
  default: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
  strict mode: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/no-args/proto-from-ctor-realm.js:
  default: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
  strict mode: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/object-arg/length-excessive-throws.js:
  default: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a RangeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/object-arg/proto-from-ctor-realm.js:
  default: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
  strict mode: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/detached-when-species-retrieved-different-type.js:
  default: 'Test262Error: TypeError thrown for detached source buffer Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: TypeError thrown for detached source buffer Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/detached-when-species-retrieved-same-type.js:
  default: 'Test262Error: TypeError thrown for detached source buffer Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: TypeError thrown for detached source buffer Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-access-throws.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-custom-species-proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object ArrayBuffer]Â») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object ArrayBuffer]Â») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-custom-species.js:
  default: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object Object]Â») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object Object]Â») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-not-object-throws.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-species-access-throws.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-species-not-ctor-throws.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/other-ctor-buffer-ctor-species-prototype-throws.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/proto-from-ctor-realm.js:
  default: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
  strict mode: 'TypeError: Receiver should be a typed array view (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-access-throws.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-custom-proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object ArrayBuffer]Â») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object ArrayBuffer]Â») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-custom.js:
  default: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object Object]Â») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected SameValue(Â«[object ArrayBuffer]Â», Â«[object Object]Â») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-not-ctor.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-prototype-throws.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-species-throws.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/ctors/typedarray-arg/same-ctor-buffer-ctor-value-not-obj-throws.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/from/custom-ctor-returns-other-instance.js:
  default: 'TypeError: TypedArray.from requires its this argument subclass a TypedArray constructor (Testing with Float64Array.)'
  strict mode: 'TypeError: TypedArray.from requires its this argument subclass a TypedArray constructor (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/from/custom-ctor.js:
  default: 'Test262Error: Expected a Test262Error but got a TypeError (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a Test262Error but got a TypeError (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/from/new-instance-using-custom-ctor.js:
  default: 'TypeError: TypedArray.from requires its this argument subclass a TypedArray constructor (Testing with Float64Array.)'
  strict mode: 'TypeError: TypedArray.from requires its this argument subclass a TypedArray constructor (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/from/set-value-abrupt-completion.js:
  default: 'Test262Error: interrupted source iteration Expected SameValue(Â«1Â», Â«[object Object]Â») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: interrupted source iteration Expected SameValue(Â«1Â», Â«[object Object]Â») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/conversion-operation-consistent-nan.js:
  default: 'TypeError: Attempting to store non-enumerable or non-writable property on a typed array at index: 0 (Testing with Float32Array.)'
  strict mode: 'TypeError: Attempting to store non-enumerable or non-writable property on a typed array at index: 0 (Testing with Float32Array.)'
test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/conversion-operation.js:
  default: 'TypeError: Attempting to store non-enumerable or non-writable property on a typed array at index: 0 (Testing with Float64Array.)'
  strict mode: 'TypeError: Attempting to store non-enumerable or non-writable property on a typed array at index: 0 (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/desc-value-throws.js:
  default: 'Test262Error: Expected a Test262Error but got a TypeError (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a Test262Error but got a TypeError (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/detached-buffer-realm.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/detached-buffer.js:
  default: 'Test262Error: Throws TypeError on valid numeric index if instance has a detached buffer Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Throws TypeError on valid numeric index if instance has a detached buffer Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/set-value.js:
  default: 'Test262Error: set value for sample[0] returns true Expected SameValue(Â«falseÂ», Â«trueÂ») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: set value for sample[0] returns true Expected SameValue(Â«falseÂ», Â«trueÂ») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/DefineOwnProperty/tonumber-value-detached-buffer.js:
  default: 'Test262Error: detaching a ArrayBuffer during defining an element of a typed array viewing it should throw Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: detaching a ArrayBuffer during defining an element of a typed array viewing it should throw Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/Get/key-is-not-integer.js:
  default: 'Test262Error: OrdinaryGet was called! Ref: 9.1.8.1 3.c (Testing with Float64Array.)'
  strict mode: 'Test262Error: OrdinaryGet was called! Ref: 9.1.8.1 3.c (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/Get/key-is-not-minus-zero.js:
  default: 'Test262Error: OrdinaryGet was called! Ref: 9.1.8.1 3.c (Testing with Float64Array.)'
  strict mode: 'Test262Error: OrdinaryGet was called! Ref: 9.1.8.1 3.c (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/Get/key-is-out-of-bounds.js:
  default: 'Test262Error: OrdinaryGet was called! Ref: 9.1.8.1 3.c (Testing with Float64Array.)'
  strict mode: 'Test262Error: OrdinaryGet was called! Ref: 9.1.8.1 3.c (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/GetOwnProperty/enumerate-detached-buffer.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/HasProperty/abrupt-from-ordinary-has-parent-hasproperty.js:
  default: 'Test262Error:  (Testing with Float64Array.)'
  strict mode: 'Test262Error:  (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/HasProperty/detached-buffer-realm.js:
  default: 'Test262Error: 0 Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: 0 Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/HasProperty/detached-buffer.js:
  default: 'Test262Error: 0 Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: 0 Expected a TypeError to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/HasProperty/inherited-property.js:
  default: 'Test262Error: 42 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: 42 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-greater-than-last-index.js:
  default: 'Test262Error: 1 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: 1 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-lower-than-zero.js:
  default: 'Test262Error: -1 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: -1 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-minus-zero.js:
  default: 'Test262Error: -0 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: -0 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/HasProperty/key-is-not-integer.js:
  default: 'Test262Error: 1.1 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
  strict mode: 'Test262Error: 1.1 Expected SameValue(Â«trueÂ», Â«falseÂ») to be true (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/internals/Set/tonumber-value-throws.js:
  default: 'Test262Error: ToNumber runs before ToInteger(index) Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
  strict mode: 'Test262Error: ToNumber runs before ToInteger(index) Expected a Test262Error to be thrown but no exception was thrown at all (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/of/custom-ctor-returns-other-instance.js:
  default: 'TypeError: TypedArray.of requires its this argument to subclass a TypedArray constructor (Testing with Float64Array.)'
  strict mode: 'TypeError: TypedArray.of requires its this argument to subclass a TypedArray constructor (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/of/custom-ctor.js:
  default: 'Test262Error: Expected a Test262Error but got a TypeError (Testing with Float64Array.)'
  strict mode: 'Test262Error: Expected a Test262Error but got a TypeError (Testing with Float64Array.)'
test/built-ins/TypedArrayConstructors/of/new-instance-using-custom-ctor.js:
  default: 'TypeError: TypedArray.of requires its this argument to subclass a TypedArray constructor (Testing with Float64Array.)'
  strict mode: 'TypeError: TypedArray.of requires its this argument to subclass a TypedArray constructor (Testing with Float64Array.)'
test/built-ins/WeakMap/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object WeakMap]Â», Â«[object WeakMap]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object WeakMap]Â», Â«[object WeakMap]Â») to be true'
test/built-ins/WeakSet/proto-from-ctor-realm.js:
  default: 'Test262Error: Expected SameValue(Â«[object WeakSet]Â», Â«[object WeakSet]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object WeakSet]Â», Â«[object WeakSet]Â») to be true'
test/harness/assert-throws-early-incorrect-ctor.js:
  default: "Test262Error: '1=1' is a ReferenceError Expected a Test262Error but got a TypeError"
  strict mode: "Test262Error: '1=1' is a ReferenceError Expected a Test262Error but got a TypeError"
test/harness/assert-throws-early-not-early.js:
  default: 'Test262Error: Expected a Test262Error but got a TypeError'
  strict mode: 'Test262Error: Expected a Test262Error but got a TypeError'
test/harness/assert-throws-early-referenceerror.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(ReferenceError, '1 = 1;')', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(ReferenceError, '1 = 1;')', 'assert.throws.early' is undefined)"
test/harness/assert-throws-early-syntaxerror.js:
  default: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, 'let let')', 'assert.throws.early' is undefined)"
  strict mode: "TypeError: assert.throws.early is not a function. (In 'assert.throws.early(SyntaxError, 'let let')', 'assert.throws.early' is undefined)"
test/intl402/Collator/prototype/compare/compare-function-name.js:
  default: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/intl402/Collator/usage-de.js:
  default: 'Test262Error: Expected [Ã, AE] and [AE, Ã] to have the same contents. search'
  strict mode: 'Test262Error: Expected [Ã, AE] and [AE, Ã] to have the same contents. search'
test/intl402/DateTimeFormat/prototype/format/format-function-name.js:
  default: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/intl402/DateTimeFormat/prototype/resolvedOptions/order.js:
  default: 'Test262Error: Expected [locale, calendar, numberingSystem, timeZone, weekday, era, year, month, day, hour, hourCycle, hour12, minute, second, timeZoneName] and [locale, calendar, numberingSystem, timeZone, hourCycle, hour12, weekday, era, year, month, day, hour, minute, second, timeZoneName] to have the same contents. undefined'
  strict mode: 'Test262Error: Expected [locale, calendar, numberingSystem, timeZone, weekday, era, year, month, day, hour, hourCycle, hour12, minute, second, timeZoneName] and [locale, calendar, numberingSystem, timeZone, hourCycle, hour12, weekday, era, year, month, day, hour, minute, second, timeZoneName] to have the same contents. undefined'
test/intl402/Intl/getCanonicalLocales/Locale-object.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"en-gb-oed\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"en-gb-oed\")')"
test/intl402/Intl/getCanonicalLocales/invalid-tags.js:
  default: 'Test262Error: Test data "de-gregory-gregory" is a canonicalized and structurally valid language tag.'
  strict mode: 'Test262Error: Test data "de-gregory-gregory" is a canonicalized and structurally valid language tag.'
test/intl402/ListFormat/constructor/constructor/locales-invalid.js:
  default: 'Test262Error: Expected a CustomError but got a TypeError'
  strict mode: 'Test262Error: Expected a CustomError but got a TypeError'
test/intl402/ListFormat/constructor/constructor/locales-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat()')"
test/intl402/ListFormat/constructor/constructor/newtarget-undefined.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/ListFormat/constructor/constructor/options-bad-combinations.js:
  default: 'Test262Error: conjunction is an invalid type option value when style is narrow. Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: conjunction is an invalid type option value when style is narrow. Expected a RangeError but got a TypeError'
test/intl402/ListFormat/constructor/constructor/options-invalid.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/ListFormat/constructor/constructor/options-localeMatcher-invalid.js:
  default: 'Test262Error: null is an invalid localeMatcher option value Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: null is an invalid localeMatcher option value Expected a RangeError but got a TypeError'
test/intl402/ListFormat/constructor/constructor/options-order.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat')"
test/intl402/ListFormat/constructor/constructor/options-style-invalid.js:
  default: 'Test262Error: null is an invalid style option value Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: null is an invalid style option value Expected a RangeError but got a TypeError'
test/intl402/ListFormat/constructor/constructor/options-style-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat([], {\"style\": validOption})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat([], {\"style\": validOption})')"
test/intl402/ListFormat/constructor/constructor/options-throwing-getters.js:
  default: 'Test262Error: Exception from type getter should be propagated Expected a CustomError but got a TypeError'
  strict mode: 'Test262Error: Exception from type getter should be propagated Expected a CustomError but got a TypeError'
test/intl402/ListFormat/constructor/constructor/options-toobject-prototype.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat([], options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat([], options)')"
test/intl402/ListFormat/constructor/constructor/options-toobject.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat([], options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat([], options)')"
test/intl402/ListFormat/constructor/constructor/options-type-invalid.js:
  default: 'Test262Error: null is an invalid type option value Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: null is an invalid type option value Expected a RangeError but got a TypeError'
test/intl402/ListFormat/constructor/constructor/options-type-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat([], {\"type\": validOption})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat([], {\"type\": validOption})')"
test/intl402/ListFormat/constructor/constructor/options-undefined.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(...args)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(...args)')"
test/intl402/ListFormat/constructor/constructor/subclassing.js:
  default: 'TypeError: The superclass is not an object.'
  strict mode: 'TypeError: The superclass is not an object.'
test/intl402/ListFormat/constructor/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/ListFormat/constructor/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/ListFormat/constructor/prop-desc.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/ListFormat/constructor/prototype.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(Intl.ListFormat)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(Intl.ListFormat)')"
test/intl402/ListFormat/constructor/supportedLocalesOf/basic.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/locales-invalid.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/options-localeMatcher-invalid.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/options-null.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/options-toobject.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/options-undefined.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/constructor/supportedLocalesOf/result-type.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.supportedLocalesOf')"
test/intl402/ListFormat/instance/extensibility.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat()')"
test/intl402/ListFormat/instance/prototype.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat()')"
test/intl402/ListFormat/prototype/constructor/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/format/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/format/en-us-default.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\")')"
test/intl402/ListFormat/prototype/format/en-us-disjunction.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
test/intl402/ListFormat/prototype/format/en-us-narrow.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
test/intl402/ListFormat/prototype/format/en-us-short.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
test/intl402/ListFormat/prototype/format/en-us-unit.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
test/intl402/ListFormat/prototype/format/es-es-long.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
test/intl402/ListFormat/prototype/format/es-es-narrow.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
test/intl402/ListFormat/prototype/format/es-es-short.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
test/intl402/ListFormat/prototype/format/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/format/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/format/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/formatToParts/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/formatToParts/en-us-default.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\")')"
test/intl402/ListFormat/prototype/formatToParts/en-us-disjunction.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", { \"type\": \"disjunction\", })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", { \"type\": \"disjunction\", })')"
test/intl402/ListFormat/prototype/formatToParts/en-us-narrow.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
test/intl402/ListFormat/prototype/formatToParts/en-us-short.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
test/intl402/ListFormat/prototype/formatToParts/en-us-unit.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-US\", {"
test/intl402/ListFormat/prototype/formatToParts/es-es-long.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
test/intl402/ListFormat/prototype/formatToParts/es-es-narrow.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
test/intl402/ListFormat/prototype/formatToParts/es-es-short.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"es-ES\", {"
test/intl402/ListFormat/prototype/formatToParts/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/formatToParts/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/formatToParts/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/ListFormat/prototype/resolvedOptions/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/resolvedOptions/caching.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-us\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-us\")')"
test/intl402/ListFormat/prototype/resolvedOptions/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/resolvedOptions/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/resolvedOptions/order.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat()')"
test/intl402/ListFormat/prototype/resolvedOptions/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/resolvedOptions/type.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-us\", { \"style\": \"short\", \"type\": \"unit\" })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.ListFormat(\"en-us\", { \"style\": \"short\", \"type\": \"unit\" })')"
test/intl402/ListFormat/prototype/toStringTag/toString.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/ListFormat/prototype/toStringTag/toStringTag.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.ListFormat.prototype')"
test/intl402/Locale/constructor-getter-order.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale')"
test/intl402/Locale/constructor-locale-object.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"en-US\")')"
test/intl402/Locale/constructor-newtarget-undefined.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/Locale/constructor-non-iana-canon.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(tag)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(tag)')"
test/intl402/Locale/constructor-options-calendar-invalid.js:
  default: 'Test262Error: new Intl.Locale("en", {calendar: ""}) throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("en", {calendar: ""}) throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-options-calendar-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', { calendar })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', { calendar })')"
test/intl402/Locale/constructor-options-casefirst-invalid.js:
  default: 'Test262Error: new Intl.Locale("en", {caseFirst: ""}) throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("en", {caseFirst: ""}) throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-options-casefirst-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', { caseFirst })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', { caseFirst })')"
test/intl402/Locale/constructor-options-collation-invalid.js:
  default: 'Test262Error: `new Intl.Locale("en", {collation: invalidCollationOption})` throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: `new Intl.Locale("en", {collation: invalidCollationOption})` throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-options-collation-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {collation})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {collation})')"
test/intl402/Locale/constructor-options-hourcycle-invalid.js:
  default: 'Test262Error: new Intl.Locale("en", {hourCycle: ""}) throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("en", {hourCycle: ""}) throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-options-hourcycle-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {hourCycle})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {hourCycle})')"
test/intl402/Locale/constructor-options-language-grandfathered.js:
  default: 'Test262Error: new Intl.Locale("nb", {language: "no-bok"}) throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("nb", {language: "no-bok"}) throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-options-language-invalid.js:
  default: 'Test262Error: new Intl.Locale("en", {language: ""}) throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("en", {language: ""}) throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-options-language-valid-undefined.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {language: undefined})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {language: undefined})')"
test/intl402/Locale/constructor-options-language-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {language})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {language})')"
test/intl402/Locale/constructor-options-numberingsystem-invalid.js:
  default: 'Test262Error: new Intl.Locale("en", {numberingSystem: ""}) throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("en", {numberingSystem: ""}) throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-options-numberingsystem-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', { numberingSystem })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', { numberingSystem })')"
test/intl402/Locale/constructor-options-numeric-undefined.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', options)')"
test/intl402/Locale/constructor-options-numeric-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {numeric})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {numeric})')"
test/intl402/Locale/constructor-options-region-invalid.js:
  default: 'Test262Error: new Intl.Locale("en", {region: ""}) throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("en", {region: ""}) throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-options-region-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', options)')"
test/intl402/Locale/constructor-options-script-invalid.js:
  default: 'Test262Error: new Intl.Locale("en", {script: ""}) throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("en", {script: ""}) throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-options-script-valid-undefined.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {script: undefined})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', {script: undefined})')"
test/intl402/Locale/constructor-options-script-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', { script })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en', { script })')"
test/intl402/Locale/constructor-options-throwing-getters.js:
  default: 'Test262Error: new Intl.Locale("en", {get language() {throw new CustomError();}}) throws CustomError Expected a CustomError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("en", {get language() {throw new CustomError();}}) throws CustomError Expected a CustomError but got a TypeError'
test/intl402/Locale/constructor-parse-twice.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(tag, options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(tag, options)')"
test/intl402/Locale/constructor-tag-tostring.js:
  default: 'Test262Error: Expected a CustomError but got a TypeError'
  strict mode: 'Test262Error: Expected a CustomError but got a TypeError'
test/intl402/Locale/constructor-tag.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(canonical)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(canonical)')"
test/intl402/Locale/constructor-unicode-ext-invalid.js:
  default: 'Test262Error: new Intl.Locale("da-u") throws RangeError Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: new Intl.Locale("da-u") throws RangeError Expected a RangeError but got a TypeError'
test/intl402/Locale/constructor-unicode-ext-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(langtag)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(langtag)')"
test/intl402/Locale/extensions-grandfathered.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(tag, options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(tag, options)')"
test/intl402/Locale/extensions-private.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"x-default\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"x-default\", {"
test/intl402/Locale/function-prototype.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(Intl.Locale)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(Intl.Locale)')"
test/intl402/Locale/getters-grandfathered.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"i-default\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"i-default\")')"
test/intl402/Locale/getters-missing.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"sv\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"sv\")')"
test/intl402/Locale/getters-privateuse.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"x-private\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(\"x-private\")')"
test/intl402/Locale/getters.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(langtag)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(langtag)')"
test/intl402/Locale/instance-extensibility.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en')')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en')')"
test/intl402/Locale/instance.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en')')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale('en')')"
test/intl402/Locale/invalid-tag-throws-boolean.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/Locale/invalid-tag-throws-null.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/Locale/invalid-tag-throws-number.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/Locale/invalid-tag-throws-symbol.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/Locale/invalid-tag-throws-undefined.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/Locale/invalid-tag-throws.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/Locale/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/Locale/likely-subtags-grandfathered.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(tag)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(tag)')"
test/intl402/Locale/likely-subtags.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(maximal)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Locale(maximal)')"
test/intl402/Locale/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/Locale/prop-desc.js:
  default: 'Test262Error: obj should have an own property Locale'
  strict mode: 'Test262Error: obj should have an own property Locale'
test/intl402/Locale/prototype/baseName/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/baseName/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/baseName/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/calendar/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/calendar/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/calendar/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/caseFirst/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/caseFirst/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/caseFirst/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/collation/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/collation/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/collation/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/constructor/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/hourCycle/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/hourCycle/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/hourCycle/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/language/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/language/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/language/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/maximize/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/maximize/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/maximize/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/maximize/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/minimize/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/minimize/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/minimize/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/minimize/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/numberingSystem/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/numberingSystem/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/numberingSystem/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/numeric/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/numeric/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/numeric/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/Locale/prototype/region/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/region/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/region/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/script/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/script/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/script/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/toString/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/toString/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/toStringTag/toString-removed-tag.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/toStringTag/toString.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/prototype/toStringTag/toStringTag.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Locale.prototype')"
test/intl402/Locale/subclassing.js:
  default: 'TypeError: The superclass is not an object.'
  strict mode: 'TypeError: The superclass is not an object.'
test/intl402/NumberFormat/currencyDisplay-unit.js:
  default: 'RangeError: currencyDisplay must be either "code", "symbol", or "name"'
  strict mode: 'RangeError: currencyDisplay must be either "code", "symbol", or "name"'
test/intl402/NumberFormat/prototype/format/format-fraction-digits-precision.js:
  default: 'Test262Error: Formatted value for 12344501000000000000000000000000000, en-US-u-nu-arab and options {"useGrouping":false,"minimumIntegerDigits":3,"minimumFractionDigits":1,"maximumFractionDigits":3} is Ù¡Ù¢Ù£Ù¤Ù¤Ù¥Ù Ù¡Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù«Ù ; expected Ù¡Ù¢Ù£Ù¤Ù¤Ù¥Ù Ù¡Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù¤Ù¨Ù§Ù¨Ù¡Ù¥Ù¤Ù¤Ù¤Ù¦Ù§Ù¨Ù£Ù¡Ù¡Ù©Ù£Ù¦Ù«Ù .'
  strict mode: 'Test262Error: Formatted value for 12344501000000000000000000000000000, en-US-u-nu-arab and options {"useGrouping":false,"minimumIntegerDigits":3,"minimumFractionDigits":1,"maximumFractionDigits":3} is Ù¡Ù¢Ù£Ù¤Ù¤Ù¥Ù Ù¡Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù«Ù ; expected Ù¡Ù¢Ù£Ù¤Ù¤Ù¥Ù Ù¡Ù Ù Ù Ù Ù Ù Ù Ù Ù Ù¤Ù¨Ù§Ù¨Ù¡Ù¥Ù¤Ù¤Ù¤Ù¦Ù§Ù¨Ù£Ù¡Ù¡Ù©Ù£Ù¦Ù«Ù .'
test/intl402/NumberFormat/prototype/format/format-fraction-digits.js:
  default: 'Test262Error: Formatted value for -0, en-US-u-nu-arab and options {"useGrouping":false,"minimumIntegerDigits":3,"minimumFractionDigits":1,"maximumFractionDigits":3} is Ù Ù Ù Ù«Ù ; expected Ø-Ù Ù Ù Ù«Ù .'
  strict mode: 'Test262Error: Formatted value for -0, en-US-u-nu-arab and options {"useGrouping":false,"minimumIntegerDigits":3,"minimumFractionDigits":1,"maximumFractionDigits":3} is Ù Ù Ù Ù«Ù ; expected Ø-Ù Ù Ù Ù«Ù .'
test/intl402/NumberFormat/prototype/format/format-function-name.js:
  default: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/intl402/NumberFormat/prototype/format/format-negative-numbers.js:
  default: 'Test262Error: Intl.NumberFormat is formatting 0 and -0 the same way. Expected SameValue(Â«0Â», Â«0Â») to be false'
  strict mode: 'Test262Error: Intl.NumberFormat is formatting 0 and -0 the same way. Expected SameValue(Â«0Â», Â«0Â») to be false'
test/intl402/NumberFormat/prototype/format/format-significant-digits-precision.js:
  default: 'Test262Error: Formatted value for 123.44500, en-US-u-nu-arab and options {"useGrouping":false,"minimumSignificantDigits":3,"maximumSignificantDigits":5} is Ù¡Ù¢Ù£Ù«Ù¤Ù¥; expected Ù¡Ù¢Ù£Ù«Ù¤Ù¤.'
  strict mode: 'Test262Error: Formatted value for 123.44500, en-US-u-nu-arab and options {"useGrouping":false,"minimumSignificantDigits":3,"maximumSignificantDigits":5} is Ù¡Ù¢Ù£Ù«Ù¤Ù¥; expected Ù¡Ù¢Ù£Ù«Ù¤Ù¤.'
test/intl402/NumberFormat/prototype/format/format-significant-digits.js:
  default: 'Test262Error: Formatted value for -0, en-US-u-nu-arab and options {"useGrouping":false,"minimumSignificantDigits":3,"maximumSignificantDigits":5} is Ù Ù«Ù Ù ; expected Ø-Ù Ù«Ù Ù .'
  strict mode: 'Test262Error: Formatted value for -0, en-US-u-nu-arab and options {"useGrouping":false,"minimumSignificantDigits":3,"maximumSignificantDigits":5} is Ù Ù«Ù Ù ; expected Ø-Ù Ù«Ù Ù .'
test/intl402/NumberFormat/style-unit.js:
  default: 'RangeError: style must be either "decimal", "percent", or "currency"'
  strict mode: 'RangeError: style must be either "decimal", "percent", or "currency"'
test/intl402/RelativeTimeFormat/constructor/constructor/locales-invalid.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/RelativeTimeFormat/constructor/constructor/locales-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
test/intl402/RelativeTimeFormat/constructor/constructor/newtarget-undefined.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/RelativeTimeFormat/constructor/constructor/options-invalid.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/RelativeTimeFormat/constructor/constructor/options-localeMatcher-invalid.js:
  default: 'Test262Error: null is an invalid localeMatcher option value Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: null is an invalid localeMatcher option value Expected a RangeError but got a TypeError'
test/intl402/RelativeTimeFormat/constructor/constructor/options-numeric-invalid.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/RelativeTimeFormat/constructor/constructor/options-numeric-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat([], {\"numeric\": validOption})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat([], {\"numeric\": validOption})')"
test/intl402/RelativeTimeFormat/constructor/constructor/options-order.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat')"
test/intl402/RelativeTimeFormat/constructor/constructor/options-proto.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
test/intl402/RelativeTimeFormat/constructor/constructor/options-style-invalid.js:
  default: 'Test262Error: null is an invalid style option value Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: null is an invalid style option value Expected a RangeError but got a TypeError'
test/intl402/RelativeTimeFormat/constructor/constructor/options-style-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat([], {\"style\": validOption})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat([], {\"style\": validOption})')"
test/intl402/RelativeTimeFormat/constructor/constructor/options-throwing-getters.js:
  default: 'Test262Error: Exception from localeMatcher getter should be propagated Expected a CustomError but got a TypeError'
  strict mode: 'Test262Error: Exception from localeMatcher getter should be propagated Expected a CustomError but got a TypeError'
test/intl402/RelativeTimeFormat/constructor/constructor/options-toobject-prototype.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat([], options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat([], options)')"
test/intl402/RelativeTimeFormat/constructor/constructor/options-toobject.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat([], options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat([], options)')"
test/intl402/RelativeTimeFormat/constructor/constructor/options-undefined.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(...args)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(...args)')"
test/intl402/RelativeTimeFormat/constructor/constructor/subclassing.js:
  default: 'TypeError: The superclass is not an object.'
  strict mode: 'TypeError: The superclass is not an object.'
test/intl402/RelativeTimeFormat/constructor/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/RelativeTimeFormat/constructor/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/RelativeTimeFormat/constructor/prop-desc.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/RelativeTimeFormat/constructor/prototype.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(Intl.RelativeTimeFormat)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(Intl.RelativeTimeFormat)')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/basic.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/locales-invalid.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/options-localeMatcher-invalid.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/options-null.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/options-toobject.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/options-undefined.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/result-type.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.supportedLocalesOf')"
test/intl402/RelativeTimeFormat/instance/extensibility.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
test/intl402/RelativeTimeFormat/instance/prototype.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
test/intl402/RelativeTimeFormat/prototype/constructor/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/format/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/format/en-us-numeric-always.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/format/en-us-numeric-auto.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\", { \"numeric\": \"auto\" })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\", { \"numeric\": \"auto\" })')"
test/intl402/RelativeTimeFormat/prototype/format/en-us-style-short.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\", {"
test/intl402/RelativeTimeFormat/prototype/format/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/format/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/format/pl-pl-style-long.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
test/intl402/RelativeTimeFormat/prototype/format/pl-pl-style-narrow.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
test/intl402/RelativeTimeFormat/prototype/format/pl-pl-style-short.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
test/intl402/RelativeTimeFormat/prototype/format/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/format/unit-invalid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/format/unit-plural.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/format/value-non-finite.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/format/value-symbol.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/format/value-tonumber.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/en-us-numeric-always.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/en-us-numeric-auto.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\", { \"numeric\": \"auto\" })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\", { \"numeric\": \"auto\" })')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/en-us-style-short.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\", {"
test/intl402/RelativeTimeFormat/prototype/formatToParts/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/pl-pl-style-long.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
test/intl402/RelativeTimeFormat/prototype/formatToParts/pl-pl-style-narrow.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
test/intl402/RelativeTimeFormat/prototype/formatToParts/pl-pl-style-short.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"pl-PL\", {"
test/intl402/RelativeTimeFormat/prototype/formatToParts/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/result-type.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/unit-invalid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/unit-plural.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/value-non-finite.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/value-symbol.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/formatToParts/value-tonumber.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-US\")')"
test/intl402/RelativeTimeFormat/prototype/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/RelativeTimeFormat/prototype/resolvedOptions/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/resolvedOptions/caching.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-us\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-us\")')"
test/intl402/RelativeTimeFormat/prototype/resolvedOptions/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/resolvedOptions/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/resolvedOptions/order.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat()')"
test/intl402/RelativeTimeFormat/prototype/resolvedOptions/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/resolvedOptions/type.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-us\", { \"style\": \"short\", \"numeric\": \"auto\" })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.RelativeTimeFormat(\"en-us\", { \"style\": \"short\", \"numeric\": \"auto\" })')"
test/intl402/RelativeTimeFormat/prototype/toStringTag/toString.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/RelativeTimeFormat/prototype/toStringTag/toStringTag.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.RelativeTimeFormat.prototype')"
test/intl402/Segmenter/constructor/constructor/locales-invalid.js:
  default: 'Test262Error: Expected a CustomError but got a TypeError'
  strict mode: 'Test262Error: Expected a CustomError but got a TypeError'
test/intl402/Segmenter/constructor/constructor/locales-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/constructor/constructor/newtarget-undefined.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/Segmenter/constructor/constructor/options-granularity-invalid.js:
  default: 'Test262Error: null is an invalid style option value Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: null is an invalid style option value Expected a RangeError but got a TypeError'
test/intl402/Segmenter/constructor/constructor/options-granularity-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], { granularity })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], { granularity })')"
test/intl402/Segmenter/constructor/constructor/options-lineBreakStyle-invalid.js:
  default: 'Test262Error: null is an invalid style option value Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: null is an invalid style option value Expected a RangeError but got a TypeError'
test/intl402/Segmenter/constructor/constructor/options-lineBreakStyle-valid.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], { granularity: \"line\", lineBreakStyle })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], { granularity: \"line\", lineBreakStyle })')"
test/intl402/Segmenter/constructor/constructor/options-localeMatcher-invalid.js:
  default: 'Test262Error: null is an invalid localeMatcher option value Expected a RangeError but got a TypeError'
  strict mode: 'Test262Error: null is an invalid localeMatcher option value Expected a RangeError but got a TypeError'
test/intl402/Segmenter/constructor/constructor/options-order.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter')"
test/intl402/Segmenter/constructor/constructor/options-throwing-getters.js:
  default: 'Test262Error: Exception from localeMatcher getter should be propagated Expected a CustomError but got a TypeError'
  strict mode: 'Test262Error: Exception from localeMatcher getter should be propagated Expected a CustomError but got a TypeError'
test/intl402/Segmenter/constructor/constructor/options-toobject-prototype.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], options)')"
test/intl402/Segmenter/constructor/constructor/options-toobject.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], options)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], options)')"
test/intl402/Segmenter/constructor/constructor/options-undefined.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(...args)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(...args)')"
test/intl402/Segmenter/constructor/constructor/options-valid-combinations.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], input)')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], input)')"
test/intl402/Segmenter/constructor/constructor/subclassing.js:
  default: 'TypeError: The superclass is not an object.'
  strict mode: 'TypeError: The superclass is not an object.'
test/intl402/Segmenter/constructor/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/Segmenter/constructor/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/Segmenter/constructor/prop-desc.js:
  default: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«undefinedÂ», Â«functionÂ») to be true'
test/intl402/Segmenter/constructor/prototype.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(Intl.Segmenter)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getPrototypeOf(Intl.Segmenter)')"
test/intl402/Segmenter/constructor/supportedLocalesOf/basic.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/locales-empty.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/locales-invalid.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/locales-specific.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/options-localeMatcher-invalid.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/options-null.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/options-toobject.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/options-undefined.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/constructor/supportedLocalesOf/result-type.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.supportedLocalesOf')"
test/intl402/Segmenter/instance/extensibility.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/instance/prototype.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/iterator/branding.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/iterator/breakType.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/iterator/following.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/iterator/granularity.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en\", { granularity })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en\", { granularity })')"
test/intl402/Segmenter/iterator/next.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/iterator/position.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/iterator/preceding.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/iterator/prototype.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter()')"
test/intl402/Segmenter/prototype/constructor/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Object.getOwnPropertyDescriptor(obj, name)')"
test/intl402/Segmenter/prototype/resolvedOptions/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/resolvedOptions/caching.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en-us\")')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en-us\")')"
test/intl402/Segmenter/prototype/resolvedOptions/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/resolvedOptions/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/resolvedOptions/order.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {"
test/intl402/Segmenter/prototype/resolvedOptions/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/resolvedOptions/type-with-lbs.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en-us\", { \"lineBreakStyle\": \"loose\", \"granularity\": \"line\" })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en-us\", { \"lineBreakStyle\": \"loose\", \"granularity\": \"line\" })')"
test/intl402/Segmenter/prototype/resolvedOptions/type-without-lbs.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en-us\", { \"lineBreakStyle\": \"loose\", \"granularity\": \"word\" })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en-us\", { \"lineBreakStyle\": \"loose\", \"granularity\": \"word\" })')"
test/intl402/Segmenter/prototype/segment/branding.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/segment/length.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/segment/name.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/segment/prop-desc.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/segment/segment-grapheme-following.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
test/intl402/Segmenter/prototype/segment/segment-grapheme-iterable.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
test/intl402/Segmenter/prototype/segment/segment-grapheme-next.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
test/intl402/Segmenter/prototype/segment/segment-grapheme-preceding.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
test/intl402/Segmenter/prototype/segment/segment-grapheme.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"grapheme\"})')"
test/intl402/Segmenter/prototype/segment/segment-line-following-modes.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter("
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter("
test/intl402/Segmenter/prototype/segment/segment-line-following.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
test/intl402/Segmenter/prototype/segment/segment-line-iterable.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
test/intl402/Segmenter/prototype/segment/segment-line-next.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
test/intl402/Segmenter/prototype/segment/segment-line-preceding.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
test/intl402/Segmenter/prototype/segment/segment-line.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"line\"})')"
test/intl402/Segmenter/prototype/segment/segment-sentence-following.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
test/intl402/Segmenter/prototype/segment/segment-sentence-iterable.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
test/intl402/Segmenter/prototype/segment/segment-sentence-next.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
test/intl402/Segmenter/prototype/segment/segment-sentence-preceding.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
test/intl402/Segmenter/prototype/segment/segment-sentence.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"sentence\"})')"
test/intl402/Segmenter/prototype/segment/segment-tostring.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en\", { \"granularity\": \"word\" })')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter(\"en\", { \"granularity\": \"word\" })')"
test/intl402/Segmenter/prototype/segment/segment-word-following.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
test/intl402/Segmenter/prototype/segment/segment-word-iterable.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
test/intl402/Segmenter/prototype/segment/segment-word-next.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
test/intl402/Segmenter/prototype/segment/segment-word-preceding.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
test/intl402/Segmenter/prototype/segment/segment-word.js:
  default: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
  strict mode: "TypeError: undefined is not a constructor (evaluating 'new Intl.Segmenter([], {granularity: \"word\"})')"
test/intl402/Segmenter/prototype/toStringTag/toString.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/intl402/Segmenter/prototype/toStringTag/toStringTag.js:
  default: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
  strict mode: "TypeError: undefined is not an object (evaluating 'Intl.Segmenter.prototype')"
test/language/arguments-object/cls-decl-private-gen-meth-args-trailing-comma-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-gen-meth-args-trailing-comma-null.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-gen-meth-args-trailing-comma-single-args.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-gen-meth-args-trailing-comma-spread-operator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-gen-meth-args-trailing-comma-undefined.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-gen-meth-static-args-trailing-comma-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-gen-meth-static-args-trailing-comma-null.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-gen-meth-static-args-trailing-comma-single-args.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-gen-meth-static-args-trailing-comma-spread-operator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-gen-meth-static-args-trailing-comma-undefined.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-null.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-single-args.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-spread-operator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-args-trailing-comma-undefined.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-null.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-single-args.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-spread-operator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-decl-private-meth-static-args-trailing-comma-undefined.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-args-trailing-comma-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-args-trailing-comma-null.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-args-trailing-comma-single-args.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-args-trailing-comma-spread-operator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-args-trailing-comma-undefined.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-static-args-trailing-comma-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-static-args-trailing-comma-null.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-static-args-trailing-comma-single-args.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-static-args-trailing-comma-spread-operator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-gen-meth-static-args-trailing-comma-undefined.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-null.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-single-args.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-spread-operator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-args-trailing-comma-undefined.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-null.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-single-args.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-spread-operator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/cls-expr-private-meth-static-args-trailing-comma-undefined.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/arguments-object/mapped/nonconfigurable-nonenumerable-nonwritable-descriptors-set-by-arguments.js:
  default: 'Test262Error: Expected obj[0] to have enumerable:false.'
test/language/arguments-object/mapped/nonconfigurable-nonenumerable-nonwritable-descriptors-set-by-param.js:
  default: 'Test262Error: Expected obj[0] to have enumerable:false.'
test/language/arguments-object/mapped/nonconfigurable-nonwritable-descriptors-define-property-consecutive.js:
  default: 'Test262Error: Expected obj[0] to have configurable:false.'
test/language/arguments-object/mapped/nonconfigurable-nonwritable-descriptors-set-by-arguments.js:
  default: 'Test262Error: Expected obj[0] to have configurable:false.'
test/language/arguments-object/mapped/nonconfigurable-nonwritable-descriptors-set-by-param.js:
  default: 'Test262Error: Expected obj[0] to have configurable:false.'
test/language/asi/S7.9_A5.7_T1.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'SyntaxError: The prefix-increment operator requires a reference expression.'
test/language/block-scope/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-class-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-const-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-let-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-var-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/class-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/class-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/class-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/const-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/const-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/const-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-class-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-const-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-let-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-var-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-class-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-const-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-let-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-var-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/let-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/let-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/let-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/var-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/var-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/block-scope/syntax/redeclaration/var-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/computed-property-names/class/static/method-number.js:
  default: "Test262Error: `compareArray(Object.getOwnPropertyNames(C), ['1', '2', 'length', 'prototype', 'a', 'c', 'name'])` returns `true`"
  strict mode: "Test262Error: `compareArray(Object.getOwnPropertyNames(C), ['1', '2', 'length', 'prototype', 'a', 'c', 'name'])` returns `true`"
test/language/computed-property-names/class/static/method-string.js:
  default: "Test262Error: `compareArray(Object.getOwnPropertyNames(C), ['length', 'prototype', 'a', 'b', 'c', 'd', 'name'])` returns `true`"
  strict mode: "Test262Error: `compareArray(Object.getOwnPropertyNames(C), ['length', 'prototype', 'a', 'b', 'c', 'd', 'name'])` returns `true`"
test/language/computed-property-names/class/static/method-symbol.js:
  default: "Test262Error: `compareArray(Object.getOwnPropertyNames(C), ['length', 'prototype', 'a', 'c', 'name'])` returns `true`"
  strict mode: "Test262Error: `compareArray(Object.getOwnPropertyNames(C), ['length', 'prototype', 'a', 'c', 'name'])` returns `true`"
test/language/computed-property-names/to-name-side-effects/class.js:
  default: 'Test262Error: The result of `counter++` is `0` Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: The result of `counter++` is `0` Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/computed-property-names/to-name-side-effects/numbers-class.js:
  default: 'Test262Error: The result of `counter++` is `0` Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: The result of `counter++` is `0` Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/computed-property-names/to-name-side-effects/object.js:
  default: 'Test262Error: The result of `counter++` is `0` Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: The result of `counter++` is `0` Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/eval-code/direct/new.target-arrow.js:
  default: 'Test262Error: Expected SameValue(Â«function ReferenceError() {'
  strict mode: 'Test262Error: Expected SameValue(Â«function ReferenceError() {'
test/language/eval-code/direct/non-definable-function-with-function.js:
  default: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«undefinedÂ») to be true'
test/language/eval-code/direct/non-definable-function-with-variable.js:
  default: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«undefinedÂ») to be true'
test/language/eval-code/direct/non-definable-global-function.js:
  default: 'Test262Error: Expected true but got false'
test/language/eval-code/direct/non-definable-global-generator.js:
  default: 'Test262Error: Expected true but got false'
test/language/eval-code/direct/var-env-func-init-global-update-configurable.js:
  default: 'Test262Error: Expected obj[f] to have enumerable:true.'
test/language/eval-code/direct/var-env-global-lex-non-strict.js:
  default: "TypeError: Can't create duplicate global variable in eval: 'x'"
test/language/eval-code/direct/var-env-lower-lex-catch-non-strict.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/eval-code/direct/var-env-lower-lex-non-strict.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/eval-code/indirect/non-definable-function-with-function.js:
  default: 'Test262Error: declaration preceding Expected SameValue(Â«[object Object]Â», Â«undefinedÂ») to be true'
  strict mode: 'Test262Error: declaration preceding Expected SameValue(Â«[object Object]Â», Â«undefinedÂ») to be true'
test/language/eval-code/indirect/non-definable-function-with-variable.js:
  default: 'Test262Error: declaration preceding Expected SameValue(Â«[object Object]Â», Â«undefinedÂ») to be true'
  strict mode: 'Test262Error: declaration preceding Expected SameValue(Â«[object Object]Â», Â«undefinedÂ») to be true'
test/language/eval-code/indirect/non-definable-global-function.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/eval-code/indirect/non-definable-global-generator.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/eval-code/indirect/var-env-func-init-global-update-configurable.js:
  default: 'Test262Error: Expected obj[f] to have enumerable:true.'
  strict mode: 'Test262Error: Expected obj[f] to have enumerable:true.'
test/language/eval-code/indirect/var-env-global-lex-non-strict.js:
  default: 'Test262Error: Expected SameValue(Â«function TypeError() {'
  strict mode: 'Test262Error: Expected SameValue(Â«function TypeError() {'
test/language/expressions/arrow-function/scope-body-lex-distinct.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/expressions/arrow-function/scope-param-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/arrow-function/scope-param-elem-var-open.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/arrow-function/scope-param-rest-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/assignment/S11.13.1_A5_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/assignment/S11.13.1_A5_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "ReferenceError: Can't find variable: x"
test/language/expressions/assignment/S11.13.1_A7_T1.js:
  default: 'Test262Error: Expected a TypeError but got a Test262Error'
  strict mode: 'Test262Error: Expected a TypeError but got a Test262Error'
test/language/expressions/assignment/S11.13.1_A7_T2.js:
  default: 'Test262Error: Expected a TypeError but got a Test262Error'
  strict mode: 'Test262Error: Expected a TypeError but got a Test262Error'
test/language/expressions/assignment/S11.13.1_A7_T3.js:
  default: 'Test262Error: Expected a DummyError but got a Test262Error'
  strict mode: 'Test262Error: Expected a DummyError but got a Test262Error'
test/language/expressions/assignment/destructuring/iterator-destructuring-property-reference-target-evaluation-order.js:
  default: 'Test262Error: Expected [source, iterator, iterator-step, iterator-done, target, target-key, target-key-tostring, set] and [source, iterator, target, target-key, target-key-tostring, iterator-step, iterator-done, set] to have the same contents. undefined'
  strict mode: 'Test262Error: Expected [source, iterator, iterator-step, iterator-done, target, target-key, target-key-tostring, set] and [source, iterator, target, target-key, target-key-tostring, iterator-step, iterator-done, set] to have the same contents. undefined'
test/language/expressions/assignment/destructuring/keyed-destructuring-property-reference-target-evaluation-order.js:
  default: 'Test262Error: Expected [source, source-key, source-key-tostring, get, target, target-key, target-key-tostring, set] and [source, source-key, source-key-tostring, target, target-key, target-key-tostring, get, set] to have the same contents. undefined'
  strict mode: 'Test262Error: Expected [source, source-key, source-key-tostring, get, target, target-key, target-key-tostring, set] and [source, source-key, source-key-tostring, target, target-key, target-key-tostring, get, set] to have the same contents. undefined'
test/language/expressions/assignment/destructuring/obj-prop-__proto__dup.js:
  default: 'SyntaxError: Attempted to redefine __proto__ property.'
  strict mode: 'SyntaxError: Attempted to redefine __proto__ property.'
test/language/expressions/assignment/dstr-array-elem-iter-rtrn-close-err.js:
  default: "TypeError: undefined is not a function (near '...[ {}[ yield ] ]...')"
  strict mode: "TypeError: undefined is not a function (near '...[ {}[ yield ] ]...')"
test/language/expressions/assignment/dstr-array-elem-iter-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr-array-elem-iter-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
test/language/expressions/assignment/dstr-array-elem-iter-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/expressions/assignment/dstr-array-elem-iter-thrw-close.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-list-rtrn-close-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-list-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-list-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-list-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-list-thrw-close.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-rest-rtrn-close-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-rest-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-rest-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-rest-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
test/language/expressions/assignment/dstr-array-elem-trlg-iter-rest-thrw-close.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
test/language/expressions/assignment/dstr-array-rest-iter-rtrn-close-err.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/expressions/assignment/dstr-array-rest-iter-rtrn-close-null.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/expressions/assignment/dstr-array-rest-iter-rtrn-close.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/expressions/assignment/dstr-array-rest-iter-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«0Â») to be true'
test/language/expressions/assignment/dstr-array-rest-iter-thrw-close.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«0Â») to be true'
test/language/expressions/assignment/dstr-array-rest-lref-err.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/expressions/assignment/fn-name-lhs-cover.js:
  default: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/language/expressions/assignment/fn-name-lhs-member.js:
  default: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/language/expressions/assignment/non-simple-target.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/assignment/target-boolean.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/assignment/target-cover-newtarget.js:
  default: "SyntaxError: new.target can't be the left hand side of an assignment expression."
  strict mode: "SyntaxError: new.target can't be the left hand side of an assignment expression."
test/language/expressions/assignment/target-cover-yieldexpr.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/assignment/target-newtarget.js:
  default: "SyntaxError: new.target can't be the left hand side of an assignment expression."
  strict mode: "SyntaxError: new.target can't be the left hand side of an assignment expression."
test/language/expressions/assignment/target-null.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/assignment/target-number.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/assignment/target-string.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/async-arrow-function/await-as-param-ident-nested-arrow-parameter-position.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/async-arrow-function/await-as-param-nested-arrow-body-position.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/async-function/early-errors-expression-not-simple-assignment-target.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/await/early-errors-await-not-simple-assignment-target.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/call/eval-realm-indirect.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/call/eval-spread-empty-leading.js:
  default: 'Test262Error: Expected SameValue(Â«localÂ», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«localÂ», Â«0Â») to be true'
test/language/expressions/call/eval-spread-empty-trailing.js:
  default: 'Test262Error: Expected SameValue(Â«localÂ», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«localÂ», Â«0Â») to be true'
test/language/expressions/call/eval-spread.js:
  default: 'Test262Error: Expected SameValue(Â«localÂ», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«localÂ», Â«1Â») to be true'
test/language/expressions/call/tco-cross-realm-class-construct.js:
  default: 'Test262Error: Expected a TypeError but got a TypeError'
  strict mode: 'Test262Error: Expected a TypeError but got a TypeError'
test/language/expressions/call/tco-cross-realm-class-derived-construct.js:
  default: 'Test262Error: Expected a TypeError but got a TypeError'
  strict mode: 'Test262Error: Expected a TypeError but got a TypeError'
test/language/expressions/call/tco-cross-realm-fun-call.js:
  default: 'Test262Error: Expected a TypeError but got a TypeError'
  strict mode: 'Test262Error: Expected a TypeError but got a TypeError'
test/language/expressions/call/tco-cross-realm-fun-construct.js:
  default: 'Test262Error: Expected a TypeError but got a TypeError'
  strict mode: 'Test262Error: Expected a TypeError but got a TypeError'
test/language/expressions/call/tco-non-eval-function-dynamic.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/call/tco-non-eval-function.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/call/tco-non-eval-global.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/call/tco-non-eval-with.js:
  default: 'RangeError: Maximum call stack size exceeded.'
test/language/expressions/class/class-name-ident-await-escaped.js:
  default: "SyntaxError: Unexpected escaped characters in keyword token: 'aw\\u0061it'"
  strict mode: "SyntaxError: Unexpected escaped characters in keyword token: 'aw\\u0061it'"
test/language/expressions/class/class-name-ident-await.js:
  default: "SyntaxError: Unexpected identifier 'await'. Expected opening '{' at the start of a class body."
  strict mode: "SyntaxError: Unexpected identifier 'await'. Expected opening '{' at the start of a class body."
test/language/expressions/class/class-name-ident-static-escaped.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/expressions/class/class-name-ident-static.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/expressions/class/constructor-this-tdz-during-initializers.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/dstr-private-gen-meth-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-dflt-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-dflt-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-gen-meth-static-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-dflt-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-dflt-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/dstr-private-meth-static-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-gen-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-gen-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-gen-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-gen-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-gen-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-gen-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-async-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-async-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-async-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-async-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-async-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-async-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-async-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-async-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-gen-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-gen-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-gen-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-gen-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-gen-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-gen-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-gen-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-gen-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-after-same-line-static-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-after-same-line-static-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-asi-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-asi-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-asi-5.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-computed-name-propname-constructor.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-computed-name-static-propname-prototype.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-computed-name-toprimitive-symbol.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-computed-name-toprimitive.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-computed-variable-name-propname-constructor.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-ctor-called-after-fields-init.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-direct-eval-err-contains-supercall-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-direct-eval-err-contains-supercall-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-direct-eval-err-contains-supercall.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-direct-eval-err-contains-superproperty-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-direct-eval-err-contains-superproperty-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-indirect-eval-err-contains-supercall-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-indirect-eval-err-contains-supercall-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-indirect-eval-err-contains-supercall.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-indirect-eval-err-contains-superproperty-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-derived-cls-indirect-eval-err-contains-superproperty-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-direct-eval-err-contains-arguments.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-direct-eval-err-contains-newtarget.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-evaluation-error-computed-name-referenceerror.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-evaluation-error-computed-name-toprimitive-err.js:
  default: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-evaluation-error-computed-name-toprimitive-returns-noncallable.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-evaluation-error-computed-name-toprimitive-returns-nonobject.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-evaluation-error-computed-name-tostring-err.js:
  default: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-evaluation-error-computed-name-valueof-err.js:
  default: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-indirect-eval-err-contains-arguments.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-indirect-eval-err-contains-newtarget.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-init-err-evaluation.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-init-value-defined-after-class.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-init-value-incremental.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-literal-names-asi.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-literal-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-private-field-usage.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-private-method-getter-usage.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-private-method-usage.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-private-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-private-getter-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-private-getter.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-private-method-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-private-method.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-private-setter-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-private-setter.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-rs-static-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-static-private-fields.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-static-private-methods-proxy.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-definitions-static-private-methods-with-fields.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-static-private-methods.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-definitions-string-literal-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-stacked-definitions-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-stacked-definitions-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-stacked-definitions-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-stacked-definitions-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-stacked-definitions-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-stacked-definitions-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-stacked-definitions-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-multiple-stacked-definitions-static-private-methods.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-multiple-stacked-definitions-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-no-sc-line-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-no-sc-line-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-no-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-no-sc-line-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-no-sc-line-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-no-sc-line-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-no-sc-line-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-no-sc-line-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-gen-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-gen-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-gen-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-gen-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-gen-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-gen-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-gen-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-gen-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-new-sc-line-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-new-sc-line-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-private-derived-cls-direct-eval-err-contains-supercall-1.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-derived-cls-direct-eval-err-contains-supercall-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-derived-cls-direct-eval-err-contains-supercall.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-derived-cls-direct-eval-err-contains-superproperty-1.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-derived-cls-direct-eval-err-contains-superproperty-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-derived-cls-indirect-eval-err-contains-supercall-1.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-derived-cls-indirect-eval-err-contains-supercall-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-derived-cls-indirect-eval-err-contains-supercall.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-derived-cls-indirect-eval-err-contains-superproperty-1.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-derived-cls-indirect-eval-err-contains-superproperty-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-direct-eval-err-contains-arguments.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-direct-eval-err-contains-newtarget.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-indirect-eval-err-contains-arguments.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-private-indirect-eval-err-contains-newtarget.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-redeclaration-symbol.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-redeclaration.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-regular-definitions-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-regular-definitions-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-regular-definitions-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-regular-definitions-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-regular-definitions-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-regular-definitions-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-regular-definitions-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-regular-definitions-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-run-once-on-double-super.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-async-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-async-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-async-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-async-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-async-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-async-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-async-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-async-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-gen-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-gen-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-gen-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-gen-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-gen-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-gen-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-gen-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-same-line-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-same-line-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-wrapped-in-sc-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-wrapped-in-sc-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-wrapped-in-sc-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-wrapped-in-sc-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-wrapped-in-sc-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-wrapped-in-sc-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/fields-wrapped-in-sc-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/fields-wrapped-in-sc-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/gen-private-method-static-yield-spread-arr-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/gen-private-method-static-yield-spread-arr-single.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/gen-private-method-static-yield-spread-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/gen-private-method-yield-spread-arr-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/gen-private-method-yield-spread-arr-single.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/gen-private-method-yield-spread-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/name.js:
  default: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/language/expressions/class/private-accessor-name/inst-private-escape-sequence-ZWJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/inst-private-escape-sequence-ZWNJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/inst-private-escape-sequence-u2118.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/inst-private-escape-sequence-u6F.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/inst-private-name-ZWJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/inst-private-name-ZWNJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/inst-private-name-common.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/inst-private-name-dollar.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/inst-private-name-u2118.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/inst-private-name-underscore.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-escape-sequence-ZWJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-escape-sequence-ZWNJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-escape-sequence-u2118.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-escape-sequence-u6F.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-name-ZWJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-name-ZWNJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-name-common.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-name-dollar.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-name-u2118.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-accessor-name/static-private-name-underscore.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-fields-proxy-default-handler-throws.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-methods/prod-private-async-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-methods/prod-private-generator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/private-methods/prod-private-method-initialize-order.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/private-methods/prod-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/static-private-fields-proxy-default-handler-throws.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/static-private-methods-proxy-default-handler-throws.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-field-classelementname-initializer-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/syntax/valid/grammar-field-classelementname-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/syntax/valid/grammar-field-identifier-alt.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/syntax/valid/grammar-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/syntax/valid/grammar-fields-multi-line.js:
  default: "SyntaxError: Unexpected identifier 'y'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'y'. Expected an opening '(' before a method's parameter list."
test/language/expressions/class/syntax/valid/grammar-privatemeth-duplicate-get-set.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-privatename-classelementname-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-privatename-classelementname-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-privatename-no-initializer-with-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-privatenames-multi-line.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-static-ctor-async-meth-valid.js:
  default: "SyntaxError: Cannot declare an async method named 'constructor'."
  strict mode: "SyntaxError: Cannot declare an async method named 'constructor'."
test/language/expressions/class/syntax/valid/grammar-static-ctor-gen-meth-valid.js:
  default: "SyntaxError: Cannot declare a generator function named 'constructor'."
  strict mode: "SyntaxError: Cannot declare a generator function named 'constructor'."
test/language/expressions/class/syntax/valid/grammar-static-private-async-meth-prototype.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-static-private-gen-meth-prototype.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/class/syntax/valid/grammar-static-private-meth-prototype.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/expressions/compound-assignment/S11.13.2_A5.10_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.10_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.10_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.10_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.10_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.11_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.11_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.11_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.11_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.11_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.1_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.1_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.1_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.1_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.1_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.2_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.2_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.2_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.2_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.2_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.3_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.3_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.3_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.3_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.3_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.4_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.4_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.4_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.4_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.4_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.5_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.5_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.5_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.5_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.5_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.6_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.6_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.6_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.6_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.6_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.7_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.7_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.7_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.7_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.7_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.8_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.8_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.8_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.8_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.8_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A5.9_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.9_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.9_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.9_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/compound-assignment/S11.13.2_A5.9_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/compound-assignment/S11.13.2_A7.10_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.11_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.1_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.2_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.3_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.4_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.5_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.6_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.7_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.8_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/S11.13.2_A7.9_T4.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/compound-assignment/add-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/btws-and-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/btws-or-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/btws-xor-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/div-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/left-shift-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/mod-div-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/mult-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/right-shift-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/subtract-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/compound-assignment/u-right-shift-non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/conditional/in-branch-1.js:
  default: "SyntaxError: Unexpected keyword 'in'. Expected ':' in ternary operator."
  strict mode: "SyntaxError: Unexpected keyword 'in'. Expected ':' in ternary operator."
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-1-update-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-10-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-11-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-12-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-13-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-14-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-15-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-16-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-17-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-2-update-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-3-update-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-4-update-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-5-lhs-equals-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-6-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-7-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-8-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/dynamic-import/syntax/invalid/invalid-asssignmenttargettype-reference-error-9-lhs-assignment-operator-assignment-expression.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/function/name.js:
  default: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/language/expressions/function/scope-body-lex-distinct.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/expressions/function/scope-param-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/function/scope-param-elem-var-open.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/function/scope-param-rest-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/generators/generator-created-after-decl-inst.js:
  default: 'Test262Error: Expected SameValue(Â«[object Generator]Â», Â«[object Generator]Â») to be false'
  strict mode: 'Test262Error: Expected SameValue(Â«[object Generator]Â», Â«[object Generator]Â») to be false'
test/language/expressions/generators/name.js:
  default: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/language/expressions/generators/scope-body-lex-distinct.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/expressions/generators/scope-param-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/generators/scope-param-elem-var-open.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/generators/scope-param-rest-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/import.meta/import-meta-is-an-ordinary-object.js:
  module: 'SyntaxError: Cannot use new with import.'
test/language/expressions/import.meta/syntax/invalid-assignment-target-assignment-expr.js:
  module: "SyntaxError: import.meta can't be the left hand side of an assignment expression."
test/language/expressions/import.meta/syntax/invalid-assignment-target-for-in-loop.js:
  module: 'Test262: This statement should not be evaluated.'
test/language/expressions/import.meta/syntax/invalid-assignment-target-for-of-loop.js:
  module: 'Test262: This statement should not be evaluated.'
test/language/expressions/import.meta/syntax/invalid-assignment-target-update-expr.js:
  module: "SyntaxError: import.meta can't come before a postfix operator."
test/language/expressions/instanceof/prototype-getter-with-primitive.js:
  default: "Test262Error: getter for 'prototype' called"
  strict mode: "Test262Error: getter for 'prototype' called"
test/language/expressions/new/non-ctor-err-realm.js:
  default: 'Test262Error: production including Arguments Expected a TypeError but got a TypeError'
  strict mode: 'Test262Error: production including Arguments Expected a TypeError but got a TypeError'
test/language/expressions/object/__proto__-permitted-dup.js:
  default: 'SyntaxError: Attempted to redefine __proto__ property.'
  strict mode: 'SyntaxError: Attempted to redefine __proto__ property.'
test/language/expressions/object/computed-property-evaluation-order.js:
  default: 'Test262Error: Expected SameValue(Â«2Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«2Â», Â«1Â») to be true'
test/language/expressions/object/method-definition/escaped-get.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/object/method-definition/escaped-set.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/object/method-definition/yield-as-function-expression-binding-identifier.js:
  strict mode: "SyntaxError: Cannot use 'yield' as a function name in strict mode."
test/language/expressions/object/method-definition/yield-as-identifier-in-nested-function.js:
  strict mode: "SyntaxError: Unexpected keyword 'yield'. Cannot use yield expression out of generator."
test/language/expressions/object/scope-gen-meth-body-lex-distinct.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/expressions/object/scope-gen-meth-param-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/object/scope-gen-meth-param-elem-var-open.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/object/scope-gen-meth-param-rest-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/object/scope-getter-body-lex-distinc.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/expressions/object/scope-meth-body-lex-distinct.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/expressions/object/scope-meth-param-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/object/scope-meth-param-elem-var-open.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/object/scope-meth-param-rest-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/expressions/object/scope-setter-body-lex-distinc.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/expressions/postfix-decrement/S11.3.2_A5_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/postfix-decrement/S11.3.2_A5_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/postfix-decrement/S11.3.2_A5_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/postfix-decrement/S11.3.2_A5_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/postfix-decrement/S11.3.2_A5_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/postfix-decrement/S11.3.2_A6_T3.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/postfix-decrement/non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/postfix-decrement/target-cover-newtarget.js:
  default: "SyntaxError: new.target can't come before a postfix operator."
  strict mode: "SyntaxError: new.target can't come before a postfix operator."
test/language/expressions/postfix-decrement/target-cover-yieldexpr.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/postfix-decrement/target-newtarget.js:
  default: "SyntaxError: new.target can't come before a postfix operator."
  strict mode: "SyntaxError: new.target can't come before a postfix operator."
test/language/expressions/postfix-increment/S11.3.1_A5_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/postfix-increment/S11.3.1_A5_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/postfix-increment/S11.3.1_A5_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/postfix-increment/S11.3.1_A5_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/postfix-increment/S11.3.1_A5_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/postfix-increment/S11.3.1_A6_T3.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/postfix-increment/non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/postfix-increment/target-cover-newtarget.js:
  default: "SyntaxError: new.target can't come before a postfix operator."
  strict mode: "SyntaxError: new.target can't come before a postfix operator."
test/language/expressions/postfix-increment/target-cover-yieldexpr.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/postfix-increment/target-newtarget.js:
  default: "SyntaxError: new.target can't come before a postfix operator."
  strict mode: "SyntaxError: new.target can't come before a postfix operator."
test/language/expressions/prefix-decrement/S11.4.5_A5_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/prefix-decrement/S11.4.5_A5_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/prefix-decrement/S11.4.5_A5_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/prefix-decrement/S11.4.5_A5_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/prefix-decrement/S11.4.5_A5_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/prefix-decrement/S11.4.5_A6_T3.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/prefix-decrement/non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/prefix-decrement/target-cover-newtarget.js:
  default: "SyntaxError: new.target can't come after a prefix operator."
  strict mode: "SyntaxError: new.target can't come after a prefix operator."
test/language/expressions/prefix-decrement/target-cover-yieldexpr.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/prefix-decrement/target-newtarget.js:
  default: "SyntaxError: new.target can't come after a prefix operator."
  strict mode: "SyntaxError: new.target can't come after a prefix operator."
test/language/expressions/prefix-increment/S11.4.4_A5_T1.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/prefix-increment/S11.4.4_A5_T2.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/prefix-increment/S11.4.4_A5_T3.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/prefix-increment/S11.4.4_A5_T4.js:
  default: "ReferenceError: Can't find variable: x"
test/language/expressions/prefix-increment/S11.4.4_A5_T5.js:
  default: "ReferenceError: Can't find variable: x"
  strict mode: "TypeError: undefined is not an object (evaluating 'delete this.x')"
test/language/expressions/prefix-increment/S11.4.4_A6_T3.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/expressions/prefix-increment/non-simple.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/prefix-increment/target-cover-newtarget.js:
  default: "SyntaxError: new.target can't come after a prefix operator."
  strict mode: "SyntaxError: new.target can't come after a prefix operator."
test/language/expressions/prefix-increment/target-cover-yieldexpr.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/prefix-increment/target-newtarget.js:
  default: "SyntaxError: new.target can't come after a prefix operator."
  strict mode: "SyntaxError: new.target can't come after a prefix operator."
test/language/expressions/super/call-proto-not-ctor.js:
  default: 'Test262Error: did not perform ArgumentsListEvaluation Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: did not perform ArgumentsListEvaluation Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/language/expressions/this/S11.1.1_A1.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/expressions/yield/star-iterable.js:
  default: 'Test262Error: First result `done` flag Expected SameValue(Â«falseÂ», Â«undefinedÂ») to be true'
  strict mode: 'Test262Error: First result `done` flag Expected SameValue(Â«falseÂ», Â«undefinedÂ») to be true'
test/language/expressions/yield/star-rhs-iter-nrml-res-done-no-value.js:
  default: 'Test262Error: access count (first iteration) Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: access count (first iteration) Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/expressions/yield/star-rhs-iter-rtrn-res-done-no-value.js:
  default: 'Test262Error: access count (second iteration) Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: access count (second iteration) Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/expressions/yield/star-rhs-iter-thrw-res-done-no-value.js:
  default: 'Test262Error: access count (second iteration) Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: access count (second iteration) Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/function-code/each-param-has-own-non-shared-eval-scope.js:
  default: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
test/language/function-code/each-param-has-own-scope.js:
  default: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
test/language/function-code/eval-param-env-with-computed-key.js:
  default: 'Test262Error: Expected SameValue(Â«innerÂ», Â«outerÂ») to be true'
test/language/function-code/eval-param-env-with-prop-initializer.js:
  default: 'Test262Error: Expected SameValue(Â«innerÂ», Â«outerÂ») to be true'
test/language/global-code/script-decl-func-err-non-configurable.js:
  default: 'Test262Error: writable, non-enumerable data property Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: writable, non-enumerable data property Expected a TypeError to be thrown but no exception was thrown at all'
test/language/global-code/script-decl-func-err-non-extensible.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/global-code/script-decl-var-err.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/literals/numeric/numeric-separator-literal-bil-bd-nsl-bd.js:
  default: 'SyntaxError: No space between binary literal and identifier'
  strict mode: 'SyntaxError: No space between binary literal and identifier'
test/language/literals/numeric/numeric-separator-literal-bil-bd-nsl-bds.js:
  default: 'SyntaxError: No space between binary literal and identifier'
  strict mode: 'SyntaxError: No space between binary literal and identifier'
test/language/literals/numeric/numeric-separator-literal-bil-bds-nsl-bd.js:
  default: 'SyntaxError: No space between binary literal and identifier'
  strict mode: 'SyntaxError: No space between binary literal and identifier'
test/language/literals/numeric/numeric-separator-literal-bil-bds-nsl-bds.js:
  default: 'SyntaxError: No space between binary literal and identifier'
  strict mode: 'SyntaxError: No space between binary literal and identifier'
test/language/literals/numeric/numeric-separator-literal-dd-dot-dd-ep-sign-minus-dd-nsl-dd.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dd-dot-dd-ep-sign-minus-dds-nsl-dd.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dd-dot-dd-ep-sign-plus-dd-nsl-dd.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dd-dot-dd-ep-sign-plus-dds-nsl-dd.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dd-nsl-dd-one-of.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dds-dot-dd-nsl-dd-ep-dd.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dds-nsl-dd.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dot-dd-nsl-dd-ep.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dot-dd-nsl-dds-ep.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dot-dds-nsl-dd-ep.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-dot-dds-nsl-dds-ep.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-hil-hd-nsl-hd.js:
  default: 'SyntaxError: No space between hexadecimal literal and identifier'
  strict mode: 'SyntaxError: No space between hexadecimal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-hil-hd-nsl-hds.js:
  default: 'SyntaxError: No space between hexadecimal literal and identifier'
  strict mode: 'SyntaxError: No space between hexadecimal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-hil-hds-nsl-hd.js:
  default: 'SyntaxError: No space between hexadecimal literal and identifier'
  strict mode: 'SyntaxError: No space between hexadecimal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-hil-hds-nsl-hds.js:
  default: 'SyntaxError: No space between hexadecimal literal and identifier'
  strict mode: 'SyntaxError: No space between hexadecimal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-hil-od-nsl-od-one-of.js:
  default: 'SyntaxError: No space between hexadecimal literal and identifier'
  strict mode: 'SyntaxError: No space between hexadecimal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-nzd-nsl-dd-one-of.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-nzd-nsl-dd.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-nzd-nsl-dds.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-oil-od-nsl-od-one-of.js:
  default: 'SyntaxError: No space between octal literal and identifier'
  strict mode: 'SyntaxError: No space between octal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-oil-od-nsl-od.js:
  default: 'SyntaxError: No space between octal literal and identifier'
  strict mode: 'SyntaxError: No space between octal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-oil-od-nsl-ods.js:
  default: 'SyntaxError: No space between octal literal and identifier'
  strict mode: 'SyntaxError: No space between octal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-oil-ods-nsl-od.js:
  default: 'SyntaxError: No space between octal literal and identifier'
  strict mode: 'SyntaxError: No space between octal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-oil-ods-nsl-ods.js:
  default: 'SyntaxError: No space between octal literal and identifier'
  strict mode: 'SyntaxError: No space between octal literal and identifier'
test/language/literals/numeric/numeric-separator-literal-sign-minus-dds-nsl-dd.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/numeric/numeric-separator-literal-sign-plus-dds-nsl-dd.js:
  default: 'SyntaxError: No identifiers allowed directly after numeric literal'
  strict mode: 'SyntaxError: No identifiers allowed directly after numeric literal'
test/language/literals/regexp/early-err-bad-flag.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/early-err-dup-flag.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname-2-u.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname-2.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname-3-u.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname-3.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname-4-u.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname-4.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname-5.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname-u.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname-without-group-u.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-dangling-groupname.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-incomplete-groupname-2.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-incomplete-groupname-3.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-incomplete-groupname-4.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-incomplete-groupname-5.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-incomplete-groupname-6.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-incomplete-groupname-u.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-3-u.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/named-groups/invalid-incomplete-groupname.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-dec-esc.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-class-escape.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-extended-pattern-char.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-legacy-octal-escape.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-a.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-ab.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-b.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-non-empty-class-ranges.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-oob-decimal-escape.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-optional-lookahead.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-optional-negative-lookahead.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-range-lookahead.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/literals/regexp/u-invalid-range-negative-lookahead.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/module-code/eval-rqstd-once.js:
  module: "SyntaxError: Unexpected identifier 'as'. Expected 'from' before exported module name."
test/language/module-code/eval-rqstd-order.js:
  module: "SyntaxError: Unexpected identifier 'as'. Expected 'from' before exported module name."
test/language/module-code/eval-self-once.js:
  module: "SyntaxError: Unexpected identifier 'as'. Expected 'from' before exported module name."
test/language/module-code/instn-once.js:
  module: "SyntaxError: Unexpected identifier 'as'. Expected 'from' before exported module name."
test/language/module-code/instn-resolve-order-depth.js:
  module: "SyntaxError: 'break' is only valid inside a switch or loop statement."
test/language/module-code/instn-resolve-order-src.js:
  module: "SyntaxError: 'break' is only valid inside a switch or loop statement."
test/language/module-code/instn-star-as-props-dflt-skip.js:
  module: "SyntaxError: Unexpected identifier 'as'. Expected 'from' before exported module name."
test/language/module-code/instn-star-props-nrml.js:
  module: "SyntaxError: Unexpected identifier 'as'. Expected 'from' before exported module name."
test/language/module-code/namespace/internals/define-own-property.js:
  module: 'Test262Error: Reflect.defineProperty: local1 Expected SameValue(Â«falseÂ», Â«trueÂ») to be true'
test/language/module-code/namespace/internals/get-nested-namespace-dflt-skip.js:
  module: "SyntaxError: Unexpected identifier 'as'. Expected 'from' before exported module name."
test/language/module-code/namespace/internals/get-nested-namespace-props-nrml.js:
  module: "SyntaxError: Unexpected identifier 'as'. Expected 'from' before exported module name."
test/language/module-code/namespace/internals/object-keys-binding-uninit.js:
  module: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
test/language/module-code/namespace/internals/set.js:
  module: 'Test262Error: Reflect.defineProperty: local1 Expected SameValue(Â«falseÂ», Â«trueÂ») to be true'
test/language/module-code/parse-err-hoist-lex-fun.js:
  module: 'Test262: This statement should not be evaluated.'
test/language/module-code/parse-err-hoist-lex-gen.js:
  module: 'Test262: This statement should not be evaluated.'
test/language/module-code/parse-err-reference.js:
  module: 'Test262: This statement should not be evaluated.'
test/language/module-code/privatename-valid-no-earlyerr.js:
  module: "SyntaxError: Invalid character: '#'"
test/language/statements/class/class-name-ident-await-escaped.js:
  default: "SyntaxError: Unexpected escaped characters in keyword token: 'aw\\u0061it'"
  strict mode: "SyntaxError: Unexpected escaped characters in keyword token: 'aw\\u0061it'"
test/language/statements/class/class-name-ident-await.js:
  default: "SyntaxError: Unexpected identifier 'await'"
  strict mode: "SyntaxError: Unexpected identifier 'await'"
test/language/statements/class/class-name-ident-static-escaped.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/class/class-name-ident-static.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/class/classelementname-abrupt-completion.js:
  default: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/dstr-private-gen-meth-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-dflt-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-dflt-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-gen-meth-static-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-dflt-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-init-iter-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-init-iter-no-close.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-name-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-elem-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-elem-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-elision-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-elision-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-empty-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-empty-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-rest-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-ary-rest-iter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-hole.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-init-undef.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-iter-complete.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-iter-done.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-id-iter-val.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-obj-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-obj-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elem-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elision-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-rest-ary-elem.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-rest-ary-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-rest-ary-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-rest-ary-rest.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-rest-id-elision.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-rest-id-exhausted.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-rest-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-rest-obj-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-ary-ptrn-rest-obj-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-dflt-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-empty.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-arrow.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-class.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-cover.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-fn.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-id-init-fn-name-gen.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-prop-ary-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-prop-ary-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-prop-ary.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-prop-id-init-skipped.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-prop-id-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-prop-id-trailing-comma.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-prop-id.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-prop-obj-init.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-prop-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-rest-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-rest-skip-non-enumerable.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/dstr-private-meth-static-obj-ptrn-rest-val-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fielddefinition-initializer-abrupt-completion.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-gen-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-gen-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-gen-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-gen-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-gen-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-gen-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-gen-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-async-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-async-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-async-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-async-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-async-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-async-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-async-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-async-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-gen-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-gen-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-gen-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-gen-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-gen-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-gen-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-gen-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-gen-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-after-same-line-static-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-after-same-line-static-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-asi-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-asi-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-asi-5.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-computed-name-propname-constructor.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-computed-name-static-computed-var-propname-constructor.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-computed-name-static-computed-var-propname-prototype.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-computed-name-static-propname-constructor.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-computed-name-static-propname-prototype.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-computed-name-toprimitive-symbol.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-computed-name-toprimitive.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-computed-variable-name-propname-constructor.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-ctor-called-after-fields-init.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-direct-eval-err-contains-supercall-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-direct-eval-err-contains-supercall-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-direct-eval-err-contains-supercall.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-direct-eval-err-contains-superproperty-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-direct-eval-err-contains-superproperty-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-indirect-eval-err-contains-supercall-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-indirect-eval-err-contains-supercall-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-indirect-eval-err-contains-supercall.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-indirect-eval-err-contains-superproperty-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-derived-cls-indirect-eval-err-contains-superproperty-2.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-direct-eval-err-contains-arguments.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-direct-eval-err-contains-newtarget.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-evaluation-error-computed-name-referenceerror.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-evaluation-error-computed-name-toprimitive-err.js:
  default: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-evaluation-error-computed-name-toprimitive-returns-noncallable.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-evaluation-error-computed-name-toprimitive-returns-nonobject.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-evaluation-error-computed-name-tostring-err.js:
  default: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-evaluation-error-computed-name-valueof-err.js:
  default: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-hash-constructor-is-a-valid-name.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-indirect-eval-err-contains-arguments.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-indirect-eval-err-contains-newtarget.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-init-err-evaluation.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-init-value-defined-after-class.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-init-value-incremental.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-literal-names-asi.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-literal-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-private-field-usage.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-private-method-getter-usage.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-private-method-usage.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-private-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-private-getter-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-private-getter.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-private-method-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-private-method.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-private-setter-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-private-setter.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-rs-static-privatename-identifier.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-static-private-fields.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-static-private-methods-with-fields.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-static-private-methods.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-definitions-string-literal-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-stacked-definitions-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-stacked-definitions-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-stacked-definitions-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-stacked-definitions-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-stacked-definitions-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-stacked-definitions-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-stacked-definitions-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-multiple-stacked-definitions-static-private-methods.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-multiple-stacked-definitions-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-no-sc-line-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-no-sc-line-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-no-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-no-sc-line-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-no-sc-line-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-no-sc-line-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-no-sc-line-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-no-sc-line-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-gen-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-gen-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-gen-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-gen-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-gen-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-gen-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-gen-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-gen-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-new-sc-line-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-new-sc-line-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-private-derived-cls-direct-eval-err-contains-supercall-1.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-derived-cls-direct-eval-err-contains-supercall-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-derived-cls-direct-eval-err-contains-supercall.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-derived-cls-direct-eval-err-contains-superproperty-1.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-derived-cls-direct-eval-err-contains-superproperty-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-derived-cls-indirect-eval-err-contains-supercall-1.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-derived-cls-indirect-eval-err-contains-supercall-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-derived-cls-indirect-eval-err-contains-supercall.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-derived-cls-indirect-eval-err-contains-superproperty-1.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-derived-cls-indirect-eval-err-contains-superproperty-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-direct-eval-err-contains-arguments.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-direct-eval-err-contains-newtarget.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-indirect-eval-err-contains-arguments.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-private-indirect-eval-err-contains-newtarget.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-redeclaration-symbol.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-redeclaration.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-regular-definitions-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-regular-definitions-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-regular-definitions-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-regular-definitions-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-regular-definitions-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-regular-definitions-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-regular-definitions-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-regular-definitions-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-async-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-async-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-async-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-async-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-async-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-async-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-async-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-async-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-gen-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-gen-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-gen-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-gen-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-gen-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-gen-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-gen-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-gen-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-method-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-method-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-method-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-method-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-method-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-method-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-same-line-method-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-same-line-method-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-wrapped-in-sc-computed-names.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-wrapped-in-sc-computed-symbol-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-wrapped-in-sc-grammar-privatename-identifier-semantics-stringvalue.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-literal-names-asi.js:
  default: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'b'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-wrapped-in-sc-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-wrapped-in-sc-private-field-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-private-method-getter-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-private-method-usage.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-private-names.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-field-identifier-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-wrapped-in-sc-rs-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/fields-wrapped-in-sc-rs-private-getter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-private-getter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-private-method-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-private-setter-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-private-setter.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-async-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-async-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-async-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-async-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-generator-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-generator-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-method-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-method-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-privatename-identifier-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-privatename-identifier-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-privatename-identifier-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-privatename-identifier-initializer-alt-by-classname.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-privatename-identifier-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-privatename-identifier-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-rs-static-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-static-private-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-static-private-methods-with-fields.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-static-private-methods.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/fields-wrapped-in-sc-string-literal-names.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/gen-private-method-static-yield-spread-arr-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/gen-private-method-static-yield-spread-arr-single.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/gen-private-method-static-yield-spread-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/gen-private-method-yield-spread-arr-multiple.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/gen-private-method-yield-spread-arr-single.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/gen-private-method-yield-spread-obj.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-escape-sequence-ZWJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-escape-sequence-ZWNJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-escape-sequence-u2118.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-escape-sequence-u6F.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-name-ZWJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-name-ZWNJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-name-common.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-name-dollar.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-name-u2118.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/inst-private-name-underscore.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-escape-sequence-ZWJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-escape-sequence-ZWNJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-escape-sequence-u2118.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-escape-sequence-u6F.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-name-ZWJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-name-ZWNJ.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-name-common.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-name-dollar.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-name-u2118.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-accessor-name/static-private-name-underscore.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-methods/prod-private-async-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-methods/prod-private-generator.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/private-methods/prod-private-method-initialize-order.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/private-methods/prod-private-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldadd-typeerror.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldget-success-1.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldget-success-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldget-success-3.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldget-success-4.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldget-success-5.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldget-typeerror-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/privatefieldget-typeerror-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldget-typeerror-3.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldget-typeerror-4.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldget-typeerror-5.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldset-typeerror-1.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/privatefieldset-typeerror-2.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldset-typeerror-3.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldset-typeerror-4.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatefieldset-typeerror-5.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatename-not-valid-eval-earlyerr-3.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/privatename-not-valid-eval-earlyerr-4.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatename-not-valid-eval-earlyerr-5.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/privatename-valid-no-earlyerr.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/static-classelementname-abrupt-completion.js:
  default: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '}'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/static-fielddefinition-initializer-abrupt-completion.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/static-private-fields-proxy-default-handler-throws.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/subclass/bound-function.js:
  default: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«[object Object]Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«[object Object]Â», Â«[object Object]Â») to be true'
test/language/statements/class/subclass/builtin-objects/ArrayBuffer/regular-subclassing.js:
  default: 'Test262Error: Expected true but got false'
  strict mode: 'Test262Error: Expected true but got false'
test/language/statements/class/subclass/class-definition-null-proto-super.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/statements/class/subclass/class-definition-superclass-generator.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/statements/class/super-fielddefinition-initializer-abrupt-completion.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/syntax/valid/grammar-field-classelementname-initializer-alt.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/syntax/valid/grammar-field-classelementname-initializer.js:
  default: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token '='. Expected an opening '(' before a method's parameter list."
test/language/statements/class/syntax/valid/grammar-field-identifier-alt.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/syntax/valid/grammar-field-identifier.js:
  default: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected token ';'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/syntax/valid/grammar-fields-multi-line.js:
  default: "SyntaxError: Unexpected identifier 'y'. Expected an opening '(' before a method's parameter list."
  strict mode: "SyntaxError: Unexpected identifier 'y'. Expected an opening '(' before a method's parameter list."
test/language/statements/class/syntax/valid/grammar-privatemeth-duplicate-get-set.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/syntax/valid/grammar-privatemeth-duplicate-meth-nestedclassmeth.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/syntax/valid/grammar-privatename-classelementname-initializer-alt.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/syntax/valid/grammar-privatename-classelementname-initializer.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/syntax/valid/grammar-privatename-identifier.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/syntax/valid/grammar-privatename-no-initializer-with-method.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/syntax/valid/grammar-privatenames-multi-line.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/syntax/valid/grammar-static-ctor-async-meth-valid.js:
  default: "SyntaxError: Cannot declare an async method named 'constructor'."
  strict mode: "SyntaxError: Cannot declare an async method named 'constructor'."
test/language/statements/class/syntax/valid/grammar-static-ctor-gen-meth-valid.js:
  default: "SyntaxError: Cannot declare a generator function named 'constructor'."
  strict mode: "SyntaxError: Cannot declare a generator function named 'constructor'."
test/language/statements/class/syntax/valid/grammar-static-private-async-meth-prototype.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/syntax/valid/grammar-static-private-gen-meth-prototype.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/class/syntax/valid/grammar-static-private-meth-prototype.js:
  default: "SyntaxError: Invalid character: '#'"
  strict mode: "SyntaxError: Invalid character: '#'"
test/language/statements/do-while/let-array-with-newline.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/12.6.4-2.js:
  default: 'Test262Error: accessedProp Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
  strict mode: 'Test262Error: accessedProp Expected SameValue(Â«trueÂ», Â«falseÂ») to be true'
test/language/statements/for-in/dstr-array-elem-nested-array-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-array-elem-nested-obj-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-array-elem-target-simple-strict.js:
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-array-rest-before-element.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-array-rest-before-elision.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-array-rest-before-rest.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-array-rest-elision-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-array-rest-init.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-array-rest-nested-array-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-array-rest-nested-obj-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-obj-id-simple-strict.js:
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-obj-prop-nested-array-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-obj-prop-nested-obj-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/dstr-obj-rest-not-last-element-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/head-lhs-cover-non-asnmt-trgt.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/head-lhs-invalid-asnmt-ptrn-ary.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/head-lhs-invalid-asnmt-ptrn-obj.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/head-lhs-let.js:
  default: "SyntaxError: Cannot use the keyword 'in' as a lexical variable name."
test/language/statements/for-in/head-lhs-non-asnmt-trgt.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/identifier-let-allowed-as-lefthandside-expression-not-strict.js:
  default: "SyntaxError: Cannot use the keyword 'in' as a lexical variable name."
test/language/statements/for-in/let-array-with-newline.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/for-in/scope-body-lex-open.js:
  default: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
test/language/statements/for-in/scope-head-lex-close.js:
  default: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
test/language/statements/for-in/scope-head-lex-open.js:
  default: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr-array-elem-iter-rtrn-close-err.js:
  default: "TypeError: undefined is not a function (near '...[ {}[ yield ] ]...')"
  strict mode: "TypeError: undefined is not a function (near '...[ {}[ yield ] ]...')"
test/language/statements/for-of/dstr-array-elem-iter-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr-array-elem-iter-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
test/language/statements/for-of/dstr-array-elem-iter-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/statements/for-of/dstr-array-elem-iter-thrw-close.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/statements/for-of/dstr-array-elem-nested-array-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-array-elem-nested-obj-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-array-elem-target-simple-strict.js:
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-array-elem-trlg-iter-list-rtrn-close-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr-array-elem-trlg-iter-list-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr-array-elem-trlg-iter-list-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«0Â», Â«1Â») to be true'
test/language/statements/for-of/dstr-array-elem-trlg-iter-list-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/statements/for-of/dstr-array-elem-trlg-iter-list-thrw-close.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/statements/for-of/dstr-array-elem-trlg-iter-rest-rtrn-close-err.js:
  default: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a Test262Error to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr-array-elem-trlg-iter-rest-rtrn-close-null.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr-array-elem-trlg-iter-rest-rtrn-close.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
test/language/statements/for-of/dstr-array-elem-trlg-iter-rest-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
test/language/statements/for-of/dstr-array-elem-trlg-iter-rest-thrw-close.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«1Â») to be true'
test/language/statements/for-of/dstr-array-rest-before-element.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-array-rest-before-elision.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-array-rest-before-rest.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-array-rest-elision-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-array-rest-init.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-array-rest-iter-rtrn-close-err.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/statements/for-of/dstr-array-rest-iter-rtrn-close-null.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/statements/for-of/dstr-array-rest-iter-rtrn-close.js:
  default: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
  strict mode: "TypeError: undefined is not a function (near '...[...{}[yield]]...')"
test/language/statements/for-of/dstr-array-rest-iter-thrw-close-err.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«0Â») to be true'
test/language/statements/for-of/dstr-array-rest-iter-thrw-close.js:
  default: 'Test262Error: Expected SameValue(Â«11Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«11Â», Â«0Â») to be true'
test/language/statements/for-of/dstr-array-rest-lref-err.js:
  default: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«1Â», Â«0Â») to be true'
test/language/statements/for-of/dstr-array-rest-nested-array-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-array-rest-nested-obj-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-obj-id-put-const.js:
  default: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a TypeError to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr-obj-id-put-let.js:
  default: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
  strict mode: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
test/language/statements/for-of/dstr-obj-id-simple-strict.js:
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-obj-prop-nested-array-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-obj-prop-nested-obj-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/dstr-obj-rest-not-last-element-invalid.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/head-decl-no-expr.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/head-expr-no-expr.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/head-lhs-cover-non-asnmt-trgt.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/head-lhs-invalid-asnmt-ptrn-ary.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/head-lhs-invalid-asnmt-ptrn-obj.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/head-lhs-non-asnmt-trgt.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/head-var-no-expr.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/for-of/let-array-with-newline.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/for/head-lhs-let.js:
  default: "SyntaxError: Unexpected token ';'. Expected a parameter pattern or a ')' in parameter list."
test/language/statements/for/let-array-with-newline.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/for/scope-body-lex-open.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
  strict mode: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/statements/function/scope-body-lex-distinct.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/statements/function/scope-param-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/statements/function/scope-param-elem-var-open.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/statements/function/scope-param-rest-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/statements/generators/generator-created-after-decl-inst.js:
  default: 'Test262Error: Expected SameValue(Â«[object Generator]Â», Â«[object Generator]Â») to be false'
  strict mode: 'Test262Error: Expected SameValue(Â«[object Generator]Â», Â«[object Generator]Â») to be false'
test/language/statements/generators/scope-body-lex-distinct.js:
  default: 'Test262Error: Expected a SyntaxError to be thrown but no exception was thrown at all'
test/language/statements/generators/scope-param-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/statements/generators/scope-param-elem-var-open.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/statements/generators/scope-param-rest-elem-var-close.js:
  default: 'Test262Error: Expected SameValue(Â«insideÂ», Â«outsideÂ») to be true'
test/language/statements/if/if-async-fun-else-async-fun.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/if/if-async-fun-else-stmt.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/if/if-async-fun-no-else.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/if/if-gen-else-gen.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/if/if-gen-else-stmt.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/if/if-gen-no-else.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/if/if-stmt-else-async-fun.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/if/if-stmt-else-gen.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/if/let-array-with-newline.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/labeled/decl-async-function.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/labeled/decl-gen.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/labeled/let-array-with-newline.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/labeled/value-await-non-module-escaped.js:
  default: "SyntaxError: Unexpected escaped characters in keyword token: 'aw\\u0061it'"
  strict mode: "SyntaxError: Unexpected escaped characters in keyword token: 'aw\\u0061it'"
test/language/statements/labeled/value-yield-non-strict-escaped.js:
  default: "SyntaxError: Unexpected escaped characters in keyword token: 'yi\\u0065ld'"
test/language/statements/labeled/value-yield-non-strict.js:
  strict mode: "SyntaxError: Cannot use 'yield' as a label in strict mode."
test/language/statements/let/block-local-closure-set-before-initialization.js:
  default: 'Test262Error: Expected a ReferenceError to be thrown but no exception was thrown at all'
test/language/statements/let/syntax/attempt-to-redeclare-let-binding-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/let/syntax/escaped-let.js:
  default: "SyntaxError: Unexpected escaped characters in keyword token: 'l\\u0065t'"
test/language/statements/switch/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-class-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-const-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-let-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/async-function-declaration-attempt-to-redeclare-with-var-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/class-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/class-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/class-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/const-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/const-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/const-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-class-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-const-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-let-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-var-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-class-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-const-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-let-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/generator-declaration-attempt-to-redeclare-with-var-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/let-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/let-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/let-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/var-declaration-attempt-to-redeclare-with-async-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/var-declaration-attempt-to-redeclare-with-function-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/switch/syntax/redeclaration/var-declaration-attempt-to-redeclare-with-generator-declaration.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/try/early-catch-function.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/try/early-catch-lex.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/try/early-catch-var.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/statements/try/scope-catch-param-lex-open.js:
  default: "SyntaxError: Unexpected identifier 'x'. Cannot declare a lexical variable twice: 'x'."
  strict mode: "SyntaxError: Unexpected identifier 'x'. Cannot declare a lexical variable twice: 'x'."
test/language/statements/while/let-array-with-newline.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/statements/with/let-array-with-newline.js:
  default: 'Test262: This statement should not be evaluated.'
test/language/types/boolean/S8.3_A2.1.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/types/boolean/S8.3_A2.2.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/types/reference/S8.7.2_A1_T1.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/types/reference/S8.7.2_A1_T2.js:
  default: 'Test262: This statement should not be evaluated.'
  strict mode: 'Test262: This statement should not be evaluated.'
test/language/types/reference/put-value-prop-base-primitive-realm.js:
  default: 'Test262Error: number Expected SameValue(Â«0Â», Â«1Â») to be true'
  strict mode: 'Test262Error: number Expected SameValue(Â«0Â», Â«1Â») to be true'
test/language/types/reference/put-value-prop-base-primitive.js:
  default: 'Test262Error: number Expected SameValue(Â«0Â», Â«1Â») to be true'
  strict mode: 'TypeError: Attempted to assign to readonly property.'
