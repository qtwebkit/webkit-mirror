2015-10-20  Matthew Hanson  <matthew_hanson@apple.com>

        Merge r190510. rdar://problem/22900764

    2015-10-02  Alex Christensen  <achristensen@webkit.org>

            Reloading without content blockers doesn't apply to resource loads after the main frame finishes
            https://bugs.webkit.org/show_bug.cgi?id=149430
            rdar://problem/22742222

            Reviewed by Geoffrey Garen.

            * WebKitTestRunner/cocoa/TestControllerCocoa.mm:
            (WTR::TestController::cocoaResetStateToConsistentValues):
            * WebKitTestRunner/mac/TestControllerMac.mm:
            (WTR::TestController::platformConfigureViewForTest):
            Test what happens when you disable content blockers from the SPI.

2015-10-15  Matthew Hanson  <matthew_hanson@apple.com>

        Rollout r188486. rdar://problem/22707497

2015-10-14  Matthew Hanson  <matthew_hanson@apple.com>

        Merge r188486. rdar://problem/22707497

    2015-08-13  Andy Estes  <aestes@apple.com>

            [Cocoa] Downloads do not start if policy decision is made asynchronously
            https://bugs.webkit.org/show_bug.cgi?id=147985

            Reviewed by Brady Eidson.

            Added a new API test.

            * TestWebKitAPI/Tests/WebKit2Cocoa/Download.mm:
            (-[AsynchronousDownloadNavigationDelegate webView:decidePolicyForNavigationResponse:decisionHandler:]):
            (-[AsynchronousDownloadDelegate _downloadDidStart:]):
            (TEST):

2015-10-08  Andy Estes  <aestes@apple.com>

        Merge r188486, r188517, r188531, r188844, r188845, r188851, r188852, r188880, r188881, r188988, r189193, r189289, and r190133.
        rdar://problem/22846460

    2015-09-22  Andy Estes  <aestes@apple.com>

            ContentFiltering.AllowDownloadAfterAddData is very flaky
            https://bugs.webkit.org/show_bug.cgi?id=148885
            <rdar://problem/22729563>

            Reviewed by Alexey Proskuryakov.

            The AllowDownload* tests were relying on -_downloadDidStart: being called before -webView:didFinishNavigation:,
            but there is no guarantee of this. For tests that should allow a download, spin the runloop until
            -_downloadDidStart: is called. The test will now timeout on failure, but will no longer produce false failures.

            * TestWebKitAPI/Tests/WebKit2Cocoa/ContentFiltering.mm:
            (downloadTest):

    2015-08-26  Andy Estes  <aestes@apple.com>

            [Content Filtering] Determine navigation and content policy before continuing to filter a load
            https://bugs.webkit.org/show_bug.cgi?id=148506

            Reviewed by Brady Eidson.

            Added download API tests covering every decision and decision point.
            Removed _WKDownload.AsynchronousDownloadPolicy in favor of these new tests.

            * TestWebKitAPI/Configurations/Base.xcconfig: Added $(BUILT_PRODUCTS_DIR)/WebCoreTestSupport to the header search path.
            * TestWebKitAPI/Configurations/WebProcessPlugIn.xcconfig: Removed it from here.
            * TestWebKitAPI/Tests/WebKit2Cocoa/BundleParametersPlugIn.mm:
            (-[BundleParametersPlugIn observeValueForKeyPath:ofObject:change:context:]): Called -valueForKeyPath:, which
            returns an id, instead of -valueForKey:, which always returns an NSString even if the object is of another type.
            * TestWebKitAPI/Tests/WebKit2Cocoa/ContentFiltering.mm: Added a class that can send a MockContentFilter
            decision and decision point as a bundle parameter.
            (+[MockContentFilterEnabler supportsSecureCoding]):
            (-[MockContentFilterEnabler copyWithZone:]):
            (-[MockContentFilterEnabler initWithCoder:]):
            (-[MockContentFilterEnabler initWithDecision:decisionPoint:]):
            (-[MockContentFilterEnabler encodeWithCoder:]):
            (configurationWithContentFilterSettings): Added a helper function to create a WKWebViewConfiguration with MockConentFilter settings.
            (TEST): Renamed ContentFiltering.ServerRedirect to ContentFiltering.URLAfterServerRedirect.
            (-[BecomeDownloadDelegate webView:decidePolicyForNavigationResponse:decisionHandler:]): Decided _WKNavigationResponsePolicyBecomeDownload.
            (-[BecomeDownloadDelegate webView:didFailProvisionalNavigation:withError:]): Set isDone to true.
            (-[BecomeDownloadDelegate webView:didFinishNavigation:]): Ditto.
            (-[ContentFilteringDownloadDelegate _downloadDidStart:]): Set downloadDidStart to true.
            (downloadTest): Added a helper function to test downloads with a given decision and decision point.
            * TestWebKitAPI/Tests/WebKit2Cocoa/ContentFilteringPlugIn.mm: Added a corresponding bundle class that decodes
            the MockContentFilter decision and decision point, and sets these values in the MockContentFilterSettings
            singleton. This class is duplicated in the bundle to prevent TestWebKitAPI from having to link to WebCoreTestSupport.
            (+[MockContentFilterEnabler supportsSecureCoding]):
            (-[MockContentFilterEnabler copyWithZone:]):
            (-[MockContentFilterEnabler initWithCoder:]):
            (-[MockContentFilterEnabler dealloc]):
            (-[MockContentFilterEnabler encodeWithCoder:]):
            (-[ContentFilteringPlugIn webProcessPlugIn:initializeWithObject:]): Start observing changes to the MockContentFilterEnabler key path.
            (-[ContentFilteringPlugIn dealloc]): Stop observing.
            (-[ContentFilteringPlugIn observeValueForKeyPath:ofObject:change:context:]): Store a MockContentFilterEnabler in _contentFilterEnabler.
            (+[ServerRedirectPlugIn initialize]): Deleted.
            * TestWebKitAPI/Tests/WebKit2Cocoa/Download.mm:
            (-[AsynchronousDownloadNavigationDelegate webView:decidePolicyForNavigationResponse:decisionHandler:]): Deleted.
            (-[AsynchronousDownloadDelegate _downloadDidStart:]): Deleted.
            (TEST): Deleted.

    2015-08-26  Andy Estes  <aestes@apple.com>

            Crash when following a Google search link to Twitter with Limit Adult Content enabled
            https://bugs.webkit.org/show_bug.cgi?id=147651

            Rubber-stamped by Brady Eidson.

            Taught TestRunner how to decide the navigation policy after a delay.

            * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
            * WebKitTestRunner/InjectedBundle/InjectedBundlePage.cpp:
            (WTR::InjectedBundlePage::decidePolicyForNavigationAction):
            * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
            (WTR::TestRunner::setShouldDecideNavigationPolicyAfterDelay):
            * WebKitTestRunner/InjectedBundle/TestRunner.h:
            (WTR::TestRunner::shouldDecideNavigationPolicyAfterDelay):
            * WebKitTestRunner/TestController.cpp:
            (WTR::TestController::initialize):
            (WTR::TestController::resetStateToConsistentValues):
            (WTR::TestController::decidePolicyForNavigationAction):
            * WebKitTestRunner/TestController.h:
            (WTR::TestController::setShouldDecideNavigationPolicyAfterDelay):
            * WebKitTestRunner/TestInvocation.cpp:
            (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):

    2015-08-24  Andy Estes  <aestes@apple.com>

            REGRESSION (r188851): WebKit2.BundleParameters fails on iOS

            * TestWebKitAPI/Configurations/WebProcessPlugIn.xcconfig: Specify LD_RUNPATH_SEARCH_PATHS correctly for iOS.

    2015-08-23  Andy Estes  <aestes@apple.com>

            Addressed a missed piece of review feedback from r188851.

            * TestWebKitAPI/Tests/WebKit2Cocoa/ContentFiltering.mm:

    2015-08-23  Andy Estes  <aestes@apple.com>

            [Content Filtering] REGRESSION (r182356): Provisional URL is incorrect in didReceiveServerRedirectForProvisionalLoadForFrame when Content Filtering is enabled
            https://bugs.webkit.org/show_bug.cgi?id=147872
            rdar://problem/22044000

            Reviewed by Dan Bernstein.
            
            Added an API test.

            * TestWebKitAPI/Configurations/WebProcessPlugIn.xcconfig: Linked libWebCoreTestSupport in order to use MockContentFilter.
            * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
            * TestWebKitAPI/Tests/WebKit2Cocoa/ContentFiltering.mm: Added.
            (-[ServerRedirectNavigationDelegate webView:didStartProvisionalNavigation:]): Expect the initial request URL.
            (-[ServerRedirectNavigationDelegate webView:didReceiveServerRedirectForProvisionalNavigation:]): Expect the redirect URL.
            (-[ServerRedirectNavigationDelegate webView:didCommitNavigation:]):
            (TEST): Tested that -[WKWebView URL] is updated after a redirect when content filtering is enabled.
            * TestWebKitAPI/Tests/WebKit2Cocoa/ContentFilteringPlugIn.mm: Added.
            (+[ServerRedirectPlugIn initialize]): Enable MockContentFilter.
            * TestWebKitAPI/cocoa/TestProtocol.h: Renamed from Tools/TestWebKitAPI/mac/TestProtocol.h.
            * TestWebKitAPI/cocoa/TestProtocol.mm: Renamed from Tools/TestWebKitAPI/mac/TestProtocol.mm.

    2015-08-23  Andy Estes  <aestes@apple.com>

            Fixed the 32-bit Mac build after r188844.

            * TestWebKitAPI/WKWebViewConfigurationExtras.h:
            * TestWebKitAPI/WKWebViewConfigurationExtras.mm:

    2015-08-22  Andy Estes  <aestes@apple.com>

            [Cocoa] API tests using the Modern WebKit API should be able to create web process plug-ins
            https://bugs.webkit.org/show_bug.cgi?id=148317

            Reviewed by Dan Bernstein.

            Added the ability for Modern WebKit API tests to create WKWebProcessPlugIns. A test can create a plug-in by
            creating a class that conforms to WKWebProcessPlugIn, adding it to the WebProcessPlugIn target, and using the
            WKWebViewConfiguration returned by +[WKWebViewConfiguration testwebkitapi_configurationWithTestPlugInClassName:]
            when creating WKWebViews.

            Since TestWebKitAPI relies on a bundle parameter to know which test class to instantiate in the plug-in, I also
            added a new API test for bundle parameters.

            * TestWebKitAPI/Configurations/WebProcessPlugIn.xcconfig: Added. Named the bundle TestWebKitAPI.wkbundle and
            named its executable TestWebKitAPI.bundle.
            * TestWebKitAPI/PlatformUtilities.h: Declared TestPlugInClassNameParameter.
            * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj: Added the WebProcessPlugIn target.
            * TestWebKitAPI/Tests/WebKit2Cocoa/BundleParameters.mm: Added.
            (TEST): Tested bundle parameters by verifying that parameter changes in the UI process are observed in the bundle.
            * TestWebKitAPI/Tests/WebKit2Cocoa/BundleParametersPlugIn.mm: Added.
            (-[BundleParametersPlugIn webProcessPlugIn:didCreateBrowserContextController:]): Started observing changes to a
            bundle parameter and asked for an initial notification.
            (-[BundleParametersPlugIn dealloc]): Stopped observing changes to a bundle parameter.
            (-[BundleParametersPlugIn observeValueForKeyPath:ofObject:change:context:]): When a bundle parameter changes,
            mirror its value in the main frame's JSContext.
            * TestWebKitAPI/WKWebViewConfigurationExtras.h: Added.
            * TestWebKitAPI/WKWebViewConfigurationExtras.mm: Added.
            (+[WKWebViewConfiguration testwebkitapi_configurationWithTestPlugInClassName:]): Created a configuration with
            TestWebKitAPI's bundle URL and set a bundle parameter indicating the test plug-in's class name.
            * TestWebKitAPI/cocoa/PlatformUtilitiesCocoa.mm: Defined TestPlugInClassNameParameter.
            * TestWebKitAPI/cocoa/WebProcessPlugIn/Info.plist: Added. Set the principal class to WebProcessPlugIn.
            * TestWebKitAPI/cocoa/WebProcessPlugIn/WebProcessPlugIn.mm: Added.
            (-[WebProcessPlugIn webProcessPlugIn:initializeWithObject:]): Forwarded to a newly-created test class instance.
            (-[WebProcessPlugIn respondsToSelector:]): Returned YES if the test class instance response.
            (-[WebProcessPlugIn forwardingTargetForSelector:]): Forwarded unimplemented methods to the test class instance.

    2015-08-11  Andy Estes  <aestes@apple.com>

            [Cocoa] Add redirect support to CustomProtocolManager
            https://bugs.webkit.org/show_bug.cgi?id=147871

            Reviewed by Dan Bernstein.

            Updated WebKit2CustomProtocolsTest.MainResource to generate a redirect response.

            * TestWebKitAPI/Tests/CustomProtocolsSyncXHRTest.mm:
            (TestWebKitAPI::TEST): Unregesitered TestProtocol.
            * TestWebKitAPI/Tests/WebKit2/custom-protocol-sync-xhr.html: Changed scheme to http.
            * TestWebKitAPI/Tests/WebKit2ObjC/CustomProtocolsTest.mm:
            (-[CustomProtocolsLoadDelegate browsingContextControllerDidStartProvisionalLoad:]): Expected a certain provisional URL.
            (-[CustomProtocolsLoadDelegate browsingContextControllerDidReceiveServerRedirectForProvisionalLoad:]): Ditto.
            (-[CustomProtocolsLoadDelegate browsingContextControllerDidCommitLoad:]): Expected a certain committed URL.
            (-[CustomProtocolsLoadDelegate browsingContextControllerDidFinishLoad:]): Expected isLoading to be false.
            (TestWebKitAPI::TEST): Used the new load delegate and unregistered TestProtocol.
            * TestWebKitAPI/Tests/WebKit2ObjC/PreventImageLoadWithAutoResizing.mm:
            (TestWebKitAPI::TEST): Unregistered TestProtocol.
            * TestWebKitAPI/mac/TestProtocol.mm: Changed scheme to http.
            (+[TestProtocol canInitWithRequest:]): Changed to use property syntax.
            (-[TestProtocol startLoading]): Taught to handle redirect responses.

    2015-08-13  Andy Estes  <aestes@apple.com>

            [Cocoa] Downloads do not start if policy decision is made asynchronously
            https://bugs.webkit.org/show_bug.cgi?id=147985

            Reviewed by Brady Eidson.

            Added a new API test.

            * TestWebKitAPI/Tests/WebKit2Cocoa/Download.mm:
            (-[AsynchronousDownloadNavigationDelegate webView:decidePolicyForNavigationResponse:decisionHandler:]):
            (-[AsynchronousDownloadDelegate _downloadDidStart:]):
            (TEST):

2015-09-20  Babak Shafiei  <bshafiei@apple.com>

        Merge r189997.

    2015-09-18  Andy Estes  <aestes@apple.com>

            [iOS] did{Start,Finish}LoadForQuickLookDocumentInMainFrame is never called on WKNavigationDelegate
            https://bugs.webkit.org/show_bug.cgi?id=149360

            Reviewed by Tim Horton.

            Added an API test.

            * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
            * TestWebKitAPI/Tests/WebKit2Cocoa/QuickLook.mm: Added.
            (-[QuickLookNavigationDelegate _webView:didStartLoadForQuickLookDocumentInMainFrameWithFileName:uti:]):
            (-[QuickLookNavigationDelegate _webView:didFinishLoadForQuickLookDocumentInMainFrame:]):
            (-[QuickLookNavigationDelegate webView:didFinishNavigation:]):
            (TEST):
            * TestWebKitAPI/ios/pages.pages: Added.

2015-08-26  Andy Estes  <aestes@apple.com>

        Merge r188988.

    2015-08-26  Andy Estes  <aestes@apple.com>

            Crash when following a Google search link to Twitter with Limit Adult Content enabled
            https://bugs.webkit.org/show_bug.cgi?id=147651

            Rubber-stamped by Brady Eidson.

            Taught TestRunner how to decide the navigation policy after a delay.

            * WebKitTestRunner/InjectedBundle/Bindings/TestRunner.idl:
            * WebKitTestRunner/InjectedBundle/InjectedBundlePage.cpp:
            (WTR::InjectedBundlePage::decidePolicyForNavigationAction):
            * WebKitTestRunner/InjectedBundle/TestRunner.cpp:
            (WTR::TestRunner::setShouldDecideNavigationPolicyAfterDelay):
            * WebKitTestRunner/InjectedBundle/TestRunner.h:
            (WTR::TestRunner::shouldDecideNavigationPolicyAfterDelay):
            * WebKitTestRunner/TestController.cpp:
            (WTR::TestController::initialize):
            (WTR::TestController::resetStateToConsistentValues):
            (WTR::TestController::decidePolicyForNavigationAction):
            * WebKitTestRunner/TestController.h:
            (WTR::TestController::setShouldDecideNavigationPolicyAfterDelay):
            * WebKitTestRunner/TestInvocation.cpp:
            (WTR::TestInvocation::didReceiveMessageFromInjectedBundle):

2015-08-26  Babak Shafiei  <bshafiei@apple.com>

        Merge r188311.

    2015-08-11  Alexey Proskuryakov  <ap@apple.com>

            Make ASan build not depend on asan.xcconfig
            https://bugs.webkit.org/show_bug.cgi?id=147840
            rdar://problem/21093702

            Reviewed by Daniel Bates.

            * asan/asan.xcconfig:
            * asan/webkit-asan-ignore.txt: Removed. It's no longer needed, as unsafe functions
            are now marked in source code.

2015-08-05  Matthew Hanson  <matthew_hanson@apple.com>

        Merge r187962. rdar://problem/21827815

    2015-08-05  Daniel Bates  <dabates@apple.com>

            REGRESSION (r185111): Clicking phone numbers doesn't prompt to call sometimes
            https://bugs.webkit.org/show_bug.cgi?id=147678
            <rdar://problem/21827815>

            Reviewed by Brady Eidson.

            Add a test to ensure that we restore the "should open external URLs" policy on
            page reload after the web content process crashes.

            * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
            * TestWebKitAPI/Tests/WebKit2/should-open-external-schemes.html: Added.
            * TestWebKitAPI/Tests/WebKit2Cocoa/ShouldOpenExternalURLsInNewWindowActions.mm:
            (TEST):

2015-07-27  Babak Shafiei  <bshafiei@apple.com>

        Merge r187371.

    2015-07-24  Chris Fleizach  <cfleizach@apple.com>

            AX: scrollable elements do not allow 3-finger swipe
            https://bugs.webkit.org/show_bug.cgi?id=141893

            Reviewed by Mario Sanchez Prada.

            Support global notification listeners for iOS code.
            Fix an issue in DRT where the dictionary of data was not being passed back to the layout test for the notication callback.
            Implement scrollUp/Down/Left/Right.

            * DumpRenderTree/AccessibilityController.h:
            * DumpRenderTree/AccessibilityUIElement.cpp:
            (increaseTextSelectionCallback):
            (scrollPageUpCallback):
            (scrollPageDownCallback):
            (scrollPageLeftCallback):
            (scrollPageRightCallback):
            (decreaseTextSelectionCallback):
            (getElementTextLengthCallback):
            (AccessibilityUIElement::getJSClass):
            * DumpRenderTree/AccessibilityUIElement.h:
            * DumpRenderTree/ios/AccessibilityControllerIOS.mm:
            (AccessibilityController::~AccessibilityController):
            (AccessibilityController::elementAtPoint):
            (AccessibilityController::addNotificationListener):
            (AccessibilityController::platformResetToConsistentState):
            (AccessibilityController::removeNotificationListener):
            * DumpRenderTree/ios/AccessibilityUIElementIOS.mm:
            (AccessibilityUIElement::AccessibilityUIElement):
            (AccessibilityUIElement::subrole):
            (AccessibilityUIElement::scrollPageUp):
            (AccessibilityUIElement::scrollPageDown):
            (AccessibilityUIElement::scrollPageLeft):
            (AccessibilityUIElement::scrollPageRight):
            (AccessibilityUIElement::roleDescription):
            * DumpRenderTree/mac/AccessibilityNotificationHandler.mm:
            (-[AccessibilityNotificationHandler _notificationReceived:]):
            * WebKitTestRunner/InjectedBundle/AccessibilityController.h:
            * WebKitTestRunner/InjectedBundle/AccessibilityUIElement.cpp:
            (WTR::AccessibilityUIElement::linkedElement):
            (WTR::AccessibilityUIElement::headerElementAtIndex):
            (WTR::AccessibilityUIElement::assistiveTechnologySimulatedFocus):
            (WTR::AccessibilityUIElement::scrollPageUp):
            (WTR::AccessibilityUIElement::scrollPageDown):
            (WTR::AccessibilityUIElement::scrollPageLeft):
            (WTR::AccessibilityUIElement::scrollPageRight):
            * WebKitTestRunner/InjectedBundle/AccessibilityUIElement.h:
            * WebKitTestRunner/InjectedBundle/Bindings/AccessibilityUIElement.idl:
            * WebKitTestRunner/InjectedBundle/ios/AccessibilityControllerIOS.mm:
            (WTR::AccessibilityController::addNotificationListener):
            (WTR::AccessibilityController::removeNotificationListener):
            * WebKitTestRunner/InjectedBundle/ios/AccessibilityUIElementIOS.mm:
            (WTR::AccessibilityUIElement::AccessibilityUIElement):
            (WTR::AccessibilityUIElement::assistiveTechnologySimulatedFocus):
            (WTR::AccessibilityUIElement::scrollPageUp):
            (WTR::AccessibilityUIElement::scrollPageDown):
            (WTR::AccessibilityUIElement::scrollPageLeft):
            (WTR::AccessibilityUIElement::scrollPageRight):
            (WTR::AccessibilityUIElement::increaseTextSelection):

2015-07-23  Lucas Forschler  <lforschler@apple.com>

        Merge r187125

    2015-07-21  Filip Pizlo  <fpizlo@apple.com>

            Fixed VM pool allocation should have a reserve for allocations that cannot fail
            https://bugs.webkit.org/show_bug.cgi?id=147154
            rdar://problem/21847618

            Reviewed by Geoffrey Garen.

            Add a new test mode where we artificially limit JIT memory to 50KB. If our JIT OOM
            mitigations work, these should all pass. Prior to this patch there were >20 failures.

            * Scripts/run-jsc-stress-tests:

== Rolled over to ChangeLog-2015-07-23 ==
