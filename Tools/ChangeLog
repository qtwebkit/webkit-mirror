2018-01-24  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227527. rdar://problem/36830339

    2018-01-23  Mark Lam  <mark.lam@apple.com>

            Update Poisoned pointers to take a Poison class instead of a uintptr_t&.
            https://bugs.webkit.org/show_bug.cgi?id=182017
            <rdar://problem/36795513>

            Reviewed by Filip Pizlo and JF Bastien.

            * TestWebKitAPI/Tests/WTF/Poisoned.cpp:
            (TestWebKitAPI::TEST):
            * TestWebKitAPI/Tests/WTF/PoisonedRef.cpp:
            (TestWebKitAPI::TEST):
            (TestWebKitAPI::passWithRef):
            * TestWebKitAPI/Tests/WTF/PoisonedRefPtr.cpp:
            (TestWebKitAPI::TEST):
            (TestWebKitAPI::f1):
            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtr.cpp:
            (TestWebKitAPI::TEST):
            (TestWebKitAPI::poisonedPtrFoo):
            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtrForNonTriviallyDestructibleArrays.cpp:
            (TestWebKitAPI::TEST):
            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtrForTriviallyDestructibleArrays.cpp:
            (TestWebKitAPI::TEST):

2018-01-24  Ryan Haddad  <ryanhaddad@apple.com>

        Cherry-pick r226897. rdar://problem/36837397

    2018-01-12  Alex Christensen  <achristensen@webkit.org>

            REGRESSION (r226818): API test WebKitLegacy.LoadInvalidURLRequest is failing
            https://bugs.webkit.org/show_bug.cgi?id=181595

            This test was testing behavior of an invalid URL that WebCore parses but NSURL does not.
            It was using example.com<> but after r226479 < and > are considered invalid by WebCore.
            I change the < and > to $ to make this test pass and continue to test what it used to.

            * TestWebKitAPI/Tests/mac/LoadInvalidURLRequest.html:
            * TestWebKitAPI/Tests/mac/LoadInvalidURLRequest.mm:
            (-[LoadInvalidURLWebFrameLoadDelegate webView:didFailProvisionalLoadWithError:forFrame:]):

2018-01-23  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227457. rdar://problem/36807161

    2018-01-23  Eric Carlson  <eric.carlson@apple.com>

            Resign NowPlaying status when no media element is eligible
            https://bugs.webkit.org/show_bug.cgi?id=181914
            <rdar://problem/35294116>

            Reviewed by Jer Noble.

            * TestWebKitAPI/Tests/WebKitCocoa/NowPlayingControlsTests.mm:
            (-[NowPlayingTestWebView hasActiveNowPlayingSession]):
            (TestWebKitAPI::TEST):
            * TestWebKitAPI/Tests/WebKitCocoa/large-video-test-now-playing.html:

2018-01-22  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227351. rdar://problem/36746029

    2018-01-22  Ryosuke Niwa  <rniwa@webkit.org>

            Blob conversion and sanitization doesn't work with Microsoft Word for Mac 2011
            https://bugs.webkit.org/show_bug.cgi?id=181616
            <rdar://problem/36484908>

            Reviewed by Wenson Hsieh.

            Added tests to make sure we sanitize plain HTML, not just web archives,
            when and only when custom pasteboard data is enabled.

            * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
            * TestWebKitAPI/Tests/WebKitCocoa/PasteHTML.mm: Added.
            (writeHTMLToPasteboard): Added.
            (createWebViewWithCustomPasteboardDataSetting): Added.

2018-01-22  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227273. rdar://problem/36722654

    2018-01-20  Chris Dumez  <cdumez@apple.com>

            API test URLSchemeHandler.Leaks1 is timing out on iOS simulator debug
            https://bugs.webkit.org/show_bug.cgi?id=174984
            <rdar://problem/33665676>

            Reviewed by Alexey Proskuryakov.

            Disable URLSchemeHandler.Leaks1 API test on iOS as it sometimes times out.

            * TestWebKitAPI/Tests/WebKitCocoa/WKURLSchemeHandler-leaks.mm:
            (TEST):

2018-01-22  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227242. rdar://problem/36722539

    2018-01-19  Youenn Fablet  <youenn@apple.com>

            Do not go to the storage process when registering a service worker client if there is no service worker registered
            https://bugs.webkit.org/show_bug.cgi?id=181740
            <rdar://problem/36650400>

            Reviewed by Chris Dumez.

            Add support for internals inside API tests.

            * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
            * TestWebKitAPI/Tests/InjectInternals_Bundle.cpp: Added.
            (TestWebKitAPI::InternalsInjectedBundleTest::InternalsInjectedBundleTest):
            (TestWebKitAPI::InternalsInjectedBundleTest::initialize):
            (TestWebKitAPI::InternalsInjectedBundleTest::didCreatePage):
            (TestWebKitAPI::InternalsInjectedBundleTest::didClearWindowForFrame):
            * TestWebKitAPI/Tests/WebKitCocoa/ServiceWorkerBasic.mm:
            (setConfigurationInjectedBundlePath):
            (-[RegularPageMessageHandler userContentController:didReceiveScriptMessage:]):

2018-01-22  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227220. rdar://problem/36722596

    2018-01-19  Chris Dumez  <cdumez@apple.com>

            Service worker registrations restored from disk may not be reused when the JS calls register() again
            https://bugs.webkit.org/show_bug.cgi?id=181810
            <rdar://problem/36591711>

            Reviewed by Youenn Fablet.

            Add API test coverage.

            * TestWebKitAPI/Tests/WebKitCocoa/ServiceWorkerBasic.mm:
            (-[SWMessageHandlerForRestoreFromDiskTest initWithExpectedMessage:]):
            (-[SWMessageHandlerForRestoreFromDiskTest userContentController:didReceiveScriptMessage:]):

2018-01-22  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227153. rdar://problem/36722558

    2018-01-18  Chris Dumez  <cdumez@apple.com>

            Service Workers restored from persistent storage have 'redundant' state
            https://bugs.webkit.org/show_bug.cgi?id=181749
            <rdar://problem/36556486>

            Reviewed by Youenn Fablet.

            Add API test coverage.

            * TestWebKitAPI/Tests/WebKitCocoa/ServiceWorkerBasic.mm:
            (-[SWMessageHandlerForFetchTest userContentController:didReceiveScriptMessage:]):

2018-01-22  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227135. rdar://problem/36722512

    2018-01-18  Wenson Hsieh  <wenson_hsieh@apple.com>

            [iOS] Specify -[NSURL _title] for the associated URL when copying an image element
            https://bugs.webkit.org/show_bug.cgi?id=181783
            <rdar://problem/35785445>

            Reviewed by Ryosuke Niwa.

            Augments an existing API test and adds a new test to make sure that the resulting NSItemProvider's NSURL when
            copying an image contains a relevant title.

            * TestWebKitAPI/Tests/ios/ActionSheetTests.mm:
            (TestWebKitAPI::TEST):
            * TestWebKitAPI/ios/DataInteractionSimulator.mm:
            * TestWebKitAPI/ios/UIKitSPI.h:

2018-01-22  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227079. rdar://problem/36722442

    2018-01-17  Youenn Fablet  <youenn@apple.com>

            Put fetch Request.keepalive behind a runtime flag
            https://bugs.webkit.org/show_bug.cgi?id=181592

            Reviewed by Chris Dumez.

            * DumpRenderTree/mac/DumpRenderTree.mm:
            (enableExperimentalFeatures):
            * DumpRenderTree/win/DumpRenderTree.cpp:
            (enableExperimentalFeatures):
            * WebKitTestRunner/TestController.cpp:
            (WTR::TestController::resetPreferencesToConsistentValues):

2018-01-18  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226956. rdar://problem/36598688

    2018-01-15  JF Bastien  <jfbastien@apple.com>

            Remove makePoisonedUnique
            https://bugs.webkit.org/show_bug.cgi?id=181630
            <rdar://problem/36498623>

            Reviewed by Mark Lam.

            Update tests.

            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtr.cpp:
            (TestWebKitAPI::TEST):
            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtrForNonTriviallyDestructibleArrays.cpp:
            (TestWebKitAPI::TEST):

2018-01-17  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226940. rdar://problem/36598019

    2018-01-13  Mark Lam  <mark.lam@apple.com>

            Replace all use of ConstExprPoisoned with Poisoned.
            https://bugs.webkit.org/show_bug.cgi?id=181542
            <rdar://problem/36442138>

            Reviewed by JF Bastien.

            1. Converted tests to using new uintptr_t& poison type.
            2. Added tests for Poisoned comparison operators.

            * TestWebKitAPI/CMakeLists.txt:
            * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
            * TestWebKitAPI/Tests/WTF/ConstExprPoisoned.cpp: Removed.
            * TestWebKitAPI/Tests/WTF/Poisoned.cpp:
            (TestWebKitAPI::TEST):
            (TestWebKitAPI::initializeTestPoison): Deleted.
            * TestWebKitAPI/Tests/WTF/PoisonedRef.cpp:
            (TestWebKitAPI::TEST):
            (TestWebKitAPI::passWithRef):
            * TestWebKitAPI/Tests/WTF/PoisonedRefPtr.cpp:
            (TestWebKitAPI::TEST):
            (TestWebKitAPI::f1):
            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtr.cpp:
            (TestWebKitAPI::TEST):
            (TestWebKitAPI::poisonedPtrFoo):
            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtrForNonTriviallyDestructibleArrays.cpp:
            (TestWebKitAPI::TEST):
            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtrForTriviallyDestructibleArrays.cpp:
            (TestWebKitAPI::TEST):

2018-01-17  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226752. rdar://problem/36601128

    2018-01-10  JF Bastien  <jfbastien@apple.com>

            Poison small JSObject derivatives which only contain pointers
            https://bugs.webkit.org/show_bug.cgi?id=181483
            <rdar://problem/36407127>

            Reviewed by Mark Lam.

            Test the new move-assign and move-copy from unique_ptr, as well as
            nullptr_t ctors.

            * TestWebKitAPI/Tests/WTF/Poisoned.cpp:
            (TestWebKitAPI::TEST):
            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtr.cpp:
            (TestWebKitAPI::TEST):
            * TestWebKitAPI/Tests/WTF/PoisonedUniquePtrForTriviallyDestructibleArrays.cpp:
            (TestWebKitAPI::TEST):

2018-01-16  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226929. rdar://problem/36567962

    2018-01-12  Alex Christensen  <achristensen@webkit.org>

            History state should be updated during client redirects with asynchronous policy decisions
            https://bugs.webkit.org/show_bug.cgi?id=181358
            <rdar://problem/35547689>

            Reviewed by Andy Estes.

            * TestWebKitAPI/Tests/WebKit/WKBackForwardList.mm:
            (-[AsyncPolicyDecisionDelegate webView:didFinishNavigation:]):
            (-[AsyncPolicyDecisionDelegate webView:decidePolicyForNavigationAction:decisionHandler:]):
            (TEST):

2018-01-12  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226838. rdar://problem/36480711

    2018-01-11  Brent Fulgham  <bfulgham@apple.com>

            REGRESSION(r219530): ResourceLoadStatisticsPersistentStorage should be read-only in ephemeral sessions
            https://bugs.webkit.org/show_bug.cgi?id=181136
            <rdar://problem/36116604>

            Reviewed by Chris Dumez.

            Add a new API test to confirm that ResourceLoadStatistics can be turned on safely for ephemeral
            browsing sessions.

            * Scripts/run-gtk-tests:
            (GtkTestRunner): Unskip test now that it passes.
            * TestWebKitAPI/Tests/WebKitCocoa/WebsiteDataStoreCustomPaths.mm:
            (TEST): Add new WebsiteDataStoreEphemeral test.

2018-01-11  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226753. rdar://problem/36429138

    2018-01-10  Wenson Hsieh  <wenson_hsieh@apple.com>

            REGRESSION(r222507): Composition highlight doesn't render when using IME
            https://bugs.webkit.org/show_bug.cgi?id=181485
            <rdar://problem/35896516>

            Reviewed by Ryosuke Niwa.

            Add a `suppressUnderline` argument to TextInputController.setMarkedText. This suppresses the custom underlines
            rendered when testing IME on iOS in WebKit2. In this new test, suppressing underline rendering is needed to
            allow rendering composition backgrounds (see InlineTextBox::paint).

            * DumpRenderTree/ios/TextInputControllerIOS.m:
            (+[TextInputController isSelectorExcludedFromWebScript:]):
            (+[TextInputController webScriptNameForSelector:]):
            (-[TextInputController setMarkedText:selectedFrom:length:suppressUnderline:]):
            (-[TextInputController setMarkedText:selectedFrom:length:]): Deleted.
            * DumpRenderTree/mac/TextInputControllerMac.m:
            (+[TextInputController isSelectorExcludedFromWebScript:]):
            (+[TextInputController webScriptNameForSelector:]):
            (-[TextInputController setMarkedText:selectedFrom:length:suppressUnderline:]):
            (-[TextInputController setMarkedText:selectedFrom:length:]): Deleted.
            * WebKitTestRunner/InjectedBundle/Bindings/TextInputController.idl:
            * WebKitTestRunner/InjectedBundle/TextInputController.cpp:
            (WTR::TextInputController::setMarkedText):
            * WebKitTestRunner/InjectedBundle/TextInputController.h:

2018-01-11  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226750. rdar://problem/36429156

    2018-01-10  Tim Horton  <timothy_horton@apple.com>

            REGRESSION (r213590): Swipe from edge to go to previous page is significantly slower than tapping back button on Twitter
            https://bugs.webkit.org/show_bug.cgi?id=181269
            <rdar://problem/35110344>

            Reviewed by Simon Fraser.

            * DumpRenderTree/ios/UIScriptControllerIOS.mm:
            (WTR::UIScriptController::beginBackSwipe):
            (WTR::UIScriptController::completeBackSwipe):
            * TestRunnerShared/UIScriptContext/UIScriptController.cpp:
            (WTR::UIScriptController::beginBackSwipe):
            (WTR::UIScriptController::completeBackSwipe):
            (WTR::UIScriptController::overridePreference):
            (WTR::UIScriptController::replaceTextAtRange):
            * WebKitTestRunner/ios/PlatformWebViewIOS.mm:
            (WTR::PlatformWebView::setNavigationGesturesEnabled):
            * WebKitTestRunner/ios/UIScriptControllerIOS.mm:
            (WTR::UIScriptController::beginBackSwipe):
            (WTR::UIScriptController::completeBackSwipe):
            Implement beginBackSwipe and completeBackSwipe on iOS (they already
            exist on Mac) in terms of the new WKWebView testing SPI.

2018-01-11  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226668. rdar://problem/36429139

    2018-01-09  Myles C. Maxfield  <mmaxfield@apple.com>

            font-display:fallback can cause a visual flash (which is supposed to be impossible)
            https://bugs.webkit.org/show_bug.cgi?id=181374

            Reviewed by Simon Fraser.

            The test requires Palatino.

            * DumpRenderTree/mac/DumpRenderTree.mm:
            (allowedFontFamilySet):
            * WebKitTestRunner/mac/TestControllerMac.mm:
            (WTR::allowedFontFamilySet):

2018-01-09  Jason Marcell  <jmarcell@apple.com>

        Revert r226432. rdar://problem/10353542

2018-01-09  Jason Marcell  <jmarcell@apple.com>

        Revert r226441. rdar://problem/10353542

2018-01-09  Jason Marcell  <jmarcell@apple.com>

        Revert r226450. rdar://problem/10353542

2018-01-08  Youenn Fablet  <youenn@apple.com>

        navigator.onLine does not work inside service workers
        https://bugs.webkit.org/show_bug.cgi?id=181079
        <rdar://problem/36178606>

        Reviewed by Darin Adler.

        * WebKitTestRunner/InjectedBundle/InjectedBundle.cpp:
        (WTR::InjectedBundle::initialize): Setting service worker creation callback to inject ServiceWorkerInternals object.

2018-01-07  Saam Barati  <sbarati@apple.com>

        Add total exits and total compilations sorting mode to the "full" command in display-profiler-output
        https://bugs.webkit.org/show_bug.cgi?id=181372

        Reviewed by Filip Pizlo.

        Adding these sorting modes makes it easier to analyze functions
        that recompile a lot and exit a lot.

        * Scripts/display-profiler-output:

2018-01-06  Julien Brianceau  <julien.brianceau@gmail.com>

        Unreviewed, remove my Cisco email from contributors.json

        * Scripts/webkitpy/common/config/contributors.json:

2018-01-05  JF Bastien  <jfbastien@apple.com>

        WebAssembly: poison JS object's secrets
        https://bugs.webkit.org/show_bug.cgi?id=181339
        <rdar://problem/36325001>

        Reviewed by Mark Lam.

        Update tests for swap(Poisoned<k, T>, T*)

        * TestWebKitAPI/Tests/WTF/ConstExprPoisoned.cpp:
        (TestWebKitAPI::TEST):
        * TestWebKitAPI/Tests/WTF/Poisoned.cpp:
        (TestWebKitAPI::TEST):
        * TestWebKitAPI/Tests/WTF/PoisonedRef.cpp:
        (TestWebKitAPI::TEST):

2018-01-05  Wenson Hsieh  <wenson_hsieh@apple.com>

        REGRESSION(r226396) DataInteractionTests: ContentEditableToContentEditable and ContentEditableToTextarea are failing
        https://bugs.webkit.org/show_bug.cgi?id=181359

        Reviewed by Tim Horton.

        Ensure that these tests still pass using older SDKs.

        * TestWebKitAPI/Tests/ios/DataInteractionTests.mm:
        (TestWebKitAPI::TEST):

2018-01-05  Alex Christensen  <achristensen@webkit.org>

        Rebase API test after r226469
        https://bugs.webkit.org/show_bug.cgi?id=181308

        * TestWebKitAPI/Tests/WebKitCocoa/LoadInvalidURLRequest.mm:
        (-[LoadInvalidURLNavigationActionDelegate webView:didFailProvisionalNavigation:withError:]):
        A URL with < or > in it is now recognized as invalid by WebKit.  This is intentional, and matches our behavior before enabling the new URLParser.

2018-01-05  Alex Christensen  <achristensen@webkit.org>

        Restrict navigation-time WKWebsiteDataStore swapping to main frame navigations
        https://bugs.webkit.org/show_bug.cgi?id=181217

        Reviewed by Tim Horton.

        * TestWebKitAPI/Tests/WebKitCocoa/WebsitePolicies.mm:
        (-[WebsitePoliciesWebsiteDataStoreDelegate _webView:decidePolicyForNavigationAction:decisionHandler:]):
        (TEST):

2018-01-05  Alex Christensen  <achristensen@webkit.org>

        Add WKBundleFrameCreateFrameHandle
        https://bugs.webkit.org/show_bug.cgi?id=181232
        <rdar://problem/35926696>

        Reviewed by Tim Horton.

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * TestWebKitAPI/Tests/WebKitCocoa/FrameHandleSerialization.mm: Added.
        (mouseDidMoveOverElement):
        (-[FrameHandleSerialization webProcessPlugIn:didCreateBrowserContextController:]):
        * TestWebKitAPI/Tests/WebKitCocoa/UIDelegate.mm:
        (-[MouseMoveOverElementDelegate _webView:mouseDidMoveOverElement:withFlags:userInfo:]):
        (TEST):

2018-01-05  Chris Fleizach  <cfleizach@apple.com>

        iOS: Build fix after r226432.
        
        Unreviewed. Stop duplicating speakAs symbols for iOS.

        * DumpRenderTree/AccessibilityUIElement.cpp:
        (AccessibilityUIElement::speakAs):

2018-01-05  Javier Fernandez  <jfernandez@igalia.com>

        Unreviewed, added myself as WebKit reviewer

        * Scripts/webkitpy/common/config/contributors.json:

2018-01-05  Claudio Saavedra  <csaavedra@igalia.com>

        WPE: Build fix after r226432.

        Unreviewed. Rename ::speak() to ::speakAs().
        * WebKitTestRunner/InjectedBundle/wpe/AccessibilityUIElementWPE.cpp:
        (WTR::AccessibilityUIElement::speakAs):
        (WTR::AccessibilityUIElement::speak): Deleted.

2018-01-04  Chris Fleizach  <cfleizach@apple.com>

        AX: Implement updated CSS3 Speech for 'speak' and 'speak-as' properties
        https://bugs.webkit.org/show_bug.cgi?id=180361

        Reviewed by Zalan Bujtas.

        * DumpRenderTree/AccessibilityUIElement.cpp:
        (speakAsCallback):
        (AccessibilityUIElement::speakAs):
        (AccessibilityUIElement::getJSClass):
        (speakCallback): Deleted.
        (AccessibilityUIElement::speak): Deleted.
        * DumpRenderTree/AccessibilityUIElement.h:
        * DumpRenderTree/ios/AccessibilityUIElementIOS.mm:
        (AccessibilityUIElement::speakAs):
        * DumpRenderTree/mac/AccessibilityUIElementMac.mm:
        (AccessibilityUIElement::speakAs):
        (AccessibilityUIElement::speak): Deleted.
        * WebKitTestRunner/InjectedBundle/AccessibilityUIElement.h:
        * WebKitTestRunner/InjectedBundle/Bindings/AccessibilityUIElement.idl:
        * WebKitTestRunner/InjectedBundle/ios/AccessibilityUIElementIOS.mm:
        (WTR::AccessibilityUIElement::speakAs):
        (WTR::AccessibilityUIElement::speak): Deleted.
        * WebKitTestRunner/InjectedBundle/mac/AccessibilityUIElementMac.mm:
        (WTR::AccessibilityUIElement::speakAs):
        (WTR::AccessibilityUIElement::speak): Deleted.

2018-01-04  Jonathan Bedard  <jbedard@apple.com>

        REGRESSION (r226395): test-webkitperl test expectations incorrect
        https://bugs.webkit.org/show_bug.cgi?id=181307
        <rdar://problem/36306558>

        Rubber-stamped by Aakash Jain.

        r226395 added two lines towards the beginning of
        Scripts/webkitperl/prepare-ChangeLog_unittest/resources/perl_unittests.pl, the line
        numbers in the test expectations need to update.

        * Scripts/webkitperl/prepare-ChangeLog_unittest/resources/perl_unittests-expected.txt:

2018-01-04  Tim Horton  <timothy_horton@apple.com>

        WKWebView loses minimum layout size overrides that happen while the process is terminated
        https://bugs.webkit.org/show_bug.cgi?id=181306
        <rdar://problem/34398288>

        Reviewed by Dan Bernstein.

        * TestWebKitAPI/Tests/WebKitCocoa/AnimatedResize.mm:
        (TEST):
        Add a test that calling _overrideLayoutParametersWithMinimumLayoutSize
        while the process is terminated results in the page getting the correct
        minimum layout size.

2018-01-04  Eric Carlson  <eric.carlson@apple.com>

        [MediaStream] Add Mock screen capture source
        https://bugs.webkit.org/show_bug.cgi?id=181291
        <rdar://problem/36298164>

        Reviewed by Dean Jackson.

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj: Add new test.
        * TestWebKitAPI/Tests/WebKitCocoa/GetDisplayMedia.mm:
        * TestWebKitAPI/Tests/WebKit/getDisplayMedia.html:

2018-01-04  Lucas Forschler  <lforschler@apple.com>

        <rdar://problem/36300930> Change proxy server setting on master config to reach s3 servers

        Reviewed by Ling Ho.

        * BuildSlaveSupport/build.webkit.org-config/steps.py:

2018-01-03  Wenson Hsieh  <wenson_hsieh@apple.com>

        [Attachment Support] Create attachment elements when dropping files on iOS
        https://bugs.webkit.org/show_bug.cgi?id=181192
        <rdar://problem/36280945>

        Reviewed by Tim Horton.

        Adds 3 new API tests to exercise different use cases of dropping content as attachment elements when the runtime
        switch is enabled. See below for more details.

        * TestWebKitAPI/Tests/WebKitCocoa/WKAttachmentTests.mm:
        (-[NSItemProvider registerData:type:]):
        (platformCopyPNG):
        (TestWebKitAPI::TEST):
        * TestWebKitAPI/Tests/ios/DataInteractionTests.mm:

        Fix some currently failing iOS drag and drop tests. In this case, there's no reason RTFD should appear in the
        source item provider when dragging rich text *without* attachments, so this should have been a check for just
        kUTTypeRTF instead.

        (TestWebKitAPI::TEST):

        Tests a few cases of inserting attachment elements via drop:
        1.  We should distinguish between drops containing rich/plain text files from just dropping rich/plain text.
            Instead of inserting the contents as inline web content, this should generate attachment elements.
        2.  Test the fallback mechanism for inserting attachment elements. If the preferred presentation style is not
            explicitly set, but there's nothing WebKit would otherwise do with the dropped content, then we should fall
            back to inserting the content as an attachment.
        3.  Test that if multiple attachments and inline item providers are present, WebKit will respect the order in
            which they were inserted by the source (as opposed to, for instance, putting all of the attachments in front
            or at the end).

        * TestWebKitAPI/cocoa/TestWKWebView.h:
        * TestWebKitAPI/cocoa/TestWKWebView.mm:
        (-[TestWKWebView objectByEvaluatingJavaScript:]):

        Add a helper method to return an object that represents the result of evaluating some given script, and rewrite
        -stringByEvaluatingJavaScript to just turn around and call this.

        (-[TestWKWebView stringByEvaluatingJavaScript:]):

2018-01-03  Ting-Wei Lan  <lantw44@gmail.com>

        Replace hard-coded paths in shebangs with #!/usr/bin/env
        https://bugs.webkit.org/show_bug.cgi?id=181040

        Reviewed by Alex Christensen.

        * BuildSlaveSupport/build-launcher-app:
        * BuildSlaveSupport/build-launcher-dmg:
        * BuildSlaveSupport/build.webkit.org-config/steps_unittest.py:
        * BuildSlaveSupport/built-product-archive:
        * BuildSlaveSupport/clean-build:
        * BuildSlaveSupport/delete-stale-build-files:
        * BuildSlaveSupport/download-built-product:
        * BuildSlaveSupport/gtk/buildbot/log/run:
        * BuildSlaveSupport/gtk/buildbot/run:
        * BuildSlaveSupport/gtk/pulseaudio/run:
        * BuildSlaveSupport/kill-old-processes:
        * BuildSlaveSupport/test-result-archive:
        * BuildSlaveSupport/win/kill-old-processes:
        * Scripts/SpacingHeuristics.pm:
        * Scripts/add-include:
        * Scripts/build-api-tests:
        * Scripts/build-dumprendertree:
        * Scripts/build-imagediff:
        * Scripts/build-jsc:
        * Scripts/build-webkit:
        * Scripts/build-webkittestrunner:
        * Scripts/check-Xcode-source-file-types:
        * Scripts/check-dom-results:
        * Scripts/check-for-exit-time-destructors:
        * Scripts/check-for-global-initializers:
        * Scripts/check-for-inappropriate-objc-class-names:
        * Scripts/check-for-weak-vtables-and-externals:
        * Scripts/clean-header-guards:
        * Scripts/compare-timing-files:
        * Scripts/configure-xcode-for-ios-development:
        * Scripts/copy-webkitlibraries-to-product-directory:
        * Scripts/create-exports:
        * Scripts/debug-minibrowser:
        * Scripts/debug-safari:
        * Scripts/debug-test-runner:
        * Scripts/do-file-rename:
        * Scripts/do-webcore-rename:
        * Scripts/dump-webkit-tests-run:
        * Scripts/ensure-valid-python:
        * Scripts/execAppWithEnv:
        * Scripts/extract-localizable-js-strings:
        * Scripts/filter-build-webkit:
        * Scripts/find-extra-includes:
        * Scripts/fix-blink-patch:
        * Scripts/generate-coverage-data:
        * Scripts/git-add-reviewer:
        * Scripts/jsc-stress-test-helpers/js-exception-fuzz:
        * Scripts/jsc-stress-test-helpers/js-executable-allocation-fuzz:
        * Scripts/jsc-stress-test-helpers/js-osr-exit-fuzz:
        * Scripts/make-new-script-test:
        * Scripts/make-script-test-wrappers:
        * Scripts/package-root:
        * Scripts/parse-malloc-history:
        * Scripts/report-include-statistics:
        * Scripts/resolve-ChangeLogs:
        * Scripts/run-api-tests:
        * Scripts/run-bindings-tests:
        * Scripts/run-content-extension-tester:
        * Scripts/run-iexploder-tests:
        * Scripts/run-javascriptcore-tests:
        * Scripts/run-jsc:
        * Scripts/run-leaks:
        * Scripts/run-mangleme-tests:
        * Scripts/run-minibrowser:
        * Scripts/run-pageloadtest:
        * Scripts/run-regexp-tests:
        * Scripts/run-safari:
        * Scripts/run-sunspider:
        * Scripts/run-test-runner:
        * Scripts/run-webkit-app:
        * Scripts/run-webkit-httpd:
        * Scripts/run-webkit-websocketserver:
        * Scripts/set-webkit-configuration:
        * Scripts/show-pretty-diff:
        * Scripts/sort-Xcode-project-file:
        * Scripts/split-file-by-class:
        * Scripts/sunspider-compare-results:
        * Scripts/svn-apply:
        * Scripts/svn-unapply:
        * Scripts/test-webkit-scripts:
        * Scripts/test-webkitperl:
        * Scripts/update-iexploder-cssproperties:
        * Scripts/update-javascriptcore-test-results:
        * Scripts/update-webkit:
        * Scripts/update-webkit-auxiliary-libs:
        * Scripts/update-webkit-dependency:
        * Scripts/update-webkit-libs-jhbuild:
        * Scripts/update-webkit-localizable-strings:
        * Scripts/update-webkit-support-libs:
        * Scripts/update-webkitgtk-libs:
        * Scripts/update-webkitwpe-libs:
        * Scripts/webkit-build-directory:
        * Scripts/webkitperl/LoadAsModule.pm:
        * Scripts/webkitperl/VCSUtils_unittest/decodeGitBinaryPatch.pl:
        * Scripts/webkitperl/VCSUtils_unittest/fixChangeLogPatch.pl:
        * Scripts/webkitperl/VCSUtils_unittest/fixChangeLogPatchThenSetChangeLogDateAndReviewer.pl:
        * Scripts/webkitperl/VCSUtils_unittest/fixSVNPatchForAdditionWithHistory.pl:
        * Scripts/webkitperl/VCSUtils_unittest/generatePatchCommand.pl:
        * Scripts/webkitperl/VCSUtils_unittest/mergeChangeLogs.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseChunkRange.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseDiff.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseDiffHeader.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseDiffWithMockFiles.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseFirstEOL.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseGitDiffHeader.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parsePatch.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseSvnDiffFooter.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseSvnDiffHeader.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseSvnProperty.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseSvnPropertyValue.pl:
        * Scripts/webkitperl/VCSUtils_unittest/parseUnifiedDiffHeader.pl:
        * Scripts/webkitperl/VCSUtils_unittest/prepareParsedPatch.pl:
        * Scripts/webkitperl/VCSUtils_unittest/removeEOL.pl:
        * Scripts/webkitperl/VCSUtils_unittest/runCommand.pl:
        * Scripts/webkitperl/VCSUtils_unittest/runPatchCommand.pl:
        * Scripts/webkitperl/VCSUtils_unittest/setChangeLogDateAndReviewer.pl:
        * Scripts/webkitperl/auto-version_unittest/autoVersionTests.pl:
        * Scripts/webkitperl/auto-version_unittest/versionStampTests.pl:
        * Scripts/webkitperl/filter-build-webkit_unittest/shouldIgnoreLine_unittests.pl:
        * Scripts/webkitperl/prepare-ChangeLog_unittest/extractLineRangeBeforeAndAfterChange.pl:
        * Scripts/webkitperl/prepare-ChangeLog_unittest/fetchRadarURLFromBugXMLData.pl:
        * Scripts/webkitperl/prepare-ChangeLog_unittest/generateFunctionLists.pl:
        * Scripts/webkitperl/prepare-ChangeLog_unittest/parser_unittests.pl:
        * Scripts/webkitperl/prepare-ChangeLog_unittest/resources/perl_unittests.pl:
        * Scripts/webkitperl/run-leaks_unittest/run-leaks-report-v1.0.pl:
        * Scripts/webkitperl/run-leaks_unittest/run-leaks-report-v2.0-new.pl:
        * Scripts/webkitperl/run-leaks_unittest/run-leaks-report-v2.0-old.pl:
        * Scripts/webkitperl/webkitdirs_unittest/appendToEnvironmentVariableList.pl:
        * Scripts/webkitperl/webkitdirs_unittest/checkForArgumentAndRemoveFromArrayRef.pl:
        * Scripts/webkitperl/webkitdirs_unittest/checkForArgumentAndRemoveFromArrayRefGettingValue.pl:
        * Scripts/webkitperl/webkitdirs_unittest/extractNonMacOSHostConfiguration.pl:
        * Scripts/webkitperl/webkitdirs_unittest/prependToEnvironmentVariableList.pl:
        * Scripts/webkitpy/layout_tests/servers/run_webkit_httpd.py:
        * ccache/ccache-clang:
        * ccache/ccache-clang++:
        * ccache/ccache-wrapper:
        * gtk/install-dependencies:
        * iExploder/iexploder-1.3.2/htdocs/iexploder.cgi:
        * iExploder/iexploder-1.3.2/htdocs/webserver.rb:
        * iExploder/iexploder-1.3.2/tools/lasthit.rb:
        * iExploder/iexploder-1.3.2/tools/osx_last_crash.rb:
        * iExploder/iexploder-1.3.2/tools/showtest.rb:
        * iExploder/iexploder-1.7.2/src/browser_harness.rb:
        * iExploder/iexploder-1.7.2/src/iexploder.cgi:
        * iExploder/iexploder-1.7.2/src/webserver.rb:
        * iExploder/iexploder-1.7.2/tools/lasthit.rb:
        * iExploder/iexploder-1.7.2/tools/osx_last_crash.rb:
        * wpe/install-dependencies:

2018-01-03  Simon Fraser  <simon.fraser@apple.com>

        filter-build-webkit filters out useful compiler error lines
        https://bugs.webkit.org/show_bug.cgi?id=179864

        Reviewed by Tim Horton.

        Don't filter out lines that contain information about build errors by always showing lines
        after a line that contains "note:" or "error:".

        * Scripts/filter-build-webkit:
        (shouldShowSubsequentLine):
        (shouldIgnoreLine):

2018-01-03  Michael Catanzaro  <mcatanzaro@igalia.com>

        REGRESSION(r226366): [GTK] Broke TestBackForwardList and TestWebKitWebView
        https://bugs.webkit.org/show_bug.cgi?id=173915

        Unreviewed follow-up. Fix /webkit2/WebKitWebView/session-state-with-form-data and
        /webkit2/WebKitWebView/submit-form. The form ID may be NULL, but we can't put NULL into a
        GVariant unless we use maybe types, and maybe types are incompatible with D-Bus. So use an
        empty string in this case.

        * TestWebKitAPI/Tests/WebKitGLib/WebExtensionTest.cpp:
        (emitFormSubmissionEvent):

2018-01-03  Michael Catanzaro  <mcatanzaro@igalia.com>

        [GTK] Add web process API to detect when form is submitted via JavaScript
        https://bugs.webkit.org/show_bug.cgi?id=173915

        Reviewed by Carlos Garcia Campos.

        Test it.

        * TestWebKitAPI/Tests/WebKitGLib/TestWebExtensions.cpp:
        (FormSubmissionTest::FormSubmissionTest):
        (FormSubmissionTest::~FormSubmissionTest):
        (FormSubmissionTest::testFormSubmissionResult):
        (FormSubmissionTest::willSendDOMEventCallback):
        (FormSubmissionTest::willCompleteCallback):
        (FormSubmissionTest::runJavaScriptAndWaitUntilFormSubmitted):
        (testWebExtensionFormSubmissionSteps):
        (beforeAll):
        * TestWebKitAPI/Tests/WebKitGLib/WebExtensionTest.cpp:
        (DelayedSignal::DelayedSignal):
        (emitFormSubmissionEvent):
        (handleFormSubmissionCallback):
        (willSubmitFormCallback):
        (pageCreatedCallback):

2018-01-03  Michael Catanzaro  <mcatanzaro@igalia.com>

        Unreviewed, skip broken API test /webkit2/WebKitWebsiteData/databases
        https://bugs.webkit.org/show_bug.cgi?id=181251

        * Scripts/run-gtk-tests:
        (GtkTestRunner):

2018-01-03  Michael Catanzaro  <mcatanzaro@igalia.com>

        Unreviewed, skip broken API test /webkit2/WebKitWebsiteData/ephemeral
        https://bugs.webkit.org/show_bug.cgi?id=181136

        * Scripts/run-gtk-tests:
        (GtkTestRunner):

2018-01-02  Brent Fulgham  <bfulgham@apple.com>

        [macOS, iOS] Adopt new secure coding APIs in WebKit
        https://bugs.webkit.org/show_bug.cgi?id=181085
        <rdar://problem/34837397>

        Reviewed by Tim Horton.

        Update API tests to use secure coding wherever possible. Currently, NSView/UIView-based classes are not
        capable of supporting NSSecureCoding, so pass through the current coding routines.

        * TestWebKitAPI/Tests/WebKitCocoa/ApplicationManifest.mm: Updated for NSSecureCoding.
        * TestWebKitAPI/Tests/WebKitCocoa/Coding.mm:
        (encodeAndDecode): Check if class supports the NSSecureCoding protocol and use non-secure coding
        routines if necessary.
        (TEST): Updated for NSSecureCoding.
        * TestWebKitAPI/Tests/mac/EarlyKVOCrash.mm:
        (TestWebKitAPI::TEST): Updated for NSSecureCoding.

2017-12-28  Yusuke Suzuki  <utatane.tea@gmail.com>

        Remove std::chrono completely
        https://bugs.webkit.org/show_bug.cgi?id=181186

        Reviewed by Alex Christensen.

        * WebKitTestRunner/gtk/TestControllerGtk.cpp:
        (WTR::TestController::platformRunUntil):

2018-01-02  Michael Catanzaro  <mcatanzaro@igalia.com>

        REGRESSION(r223253): Broke ResourceLoadStatistics layout tests for non-Cocoa ports
        https://bugs.webkit.org/show_bug.cgi?id=181231

        Reviewed by Alex Christensen.

        Implement TestController APIs needed by ResourceLoadStatistics tests.

        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::isStatisticsRegisteredAsSubFrameUnder):
        (WTR::TestController::isStatisticsRegisteredAsRedirectingTo):

2018-01-02  Tim Horton  <timothy_horton@apple.com>

        Disable WKAttachmentTests if UIPasteboard.itemProviders is not available
        https://bugs.webkit.org/show_bug.cgi?id=181219

        Reviewed by Wenson Hsieh.

        * TestWebKitAPI/Tests/WebKitCocoa/WKAttachmentTests.mm:

2018-01-02  Jiewen Tan  <jiewen_tan@apple.com>

        Add a WebAuthentication runtime feature flag
        https://bugs.webkit.org/show_bug.cgi?id=181220
        <rdar://problem/36055305>

        Reviewed by Brent Fulgham.

        Renames the CredentialManagement runtime feature flag into WebAuthentication.

        * DumpRenderTree/TestOptions.h:
        * DumpRenderTree/TestOptions.mm:
        (TestOptions::TestOptions):
        * DumpRenderTree/mac/DumpRenderTree.mm:
        (enableExperimentalFeatures):
        (setWebPreferencesForTestOptions):
        * WebKitTestRunner/TestController.cpp:
        (WTR::TestController::resetPreferencesToConsistentValues):
        (WTR::updateTestOptionsFromTestHeader):
        * WebKitTestRunner/TestOptions.h:
        (WTR::TestOptions::hasSameInitializationOptions const):

2018-01-02  Wenson Hsieh  <wenson_hsieh@apple.com>

        [Attachment Support] Don't Blob-convert images and attachments with https:, http: or data: urls
        https://bugs.webkit.org/show_bug.cgi?id=181143
        <rdar://problem/36200381>

        Reviewed by Tim Horton.

        Add a new API test to ensure that a copied image with a data URL does not get pasted as an attachment when
        attachment elements are enabled.

        * TestWebKitAPI/TestWebKitAPI.xcodeproj/project.pbxproj:
        * TestWebKitAPI/Tests/WebKitCocoa/WKAttachmentTests.mm:
        (TestWebKitAPI::TEST):

2018-01-02  Jiewen Tan  <jiewen_tan@apple.com>

        Update Credential Management API for WebAuthentication
        https://bugs.webkit.org/show_bug.cgi?id=181082
        <rdar://problem/36055239>

        Reviewed by Brent Fulgham.

        Enable Credential Management API for testing.

        * DumpRenderTree/TestOptions.h:
        * WebKitTestRunner/TestOptions.h:

2018-01-02  Michael Catanzaro  <mcatanzaro@igalia.com>

        [GTK] Test /webkit2/WebKitWebExtension/form-controls-associated-signal is flaky
        https://bugs.webkit.org/show_bug.cgi?id=168194

        Reviewed by Carlos Garcia Campos.

        Fix an assertion and unskip the test. The order that form controls are associated is not
        guaranteed.

        * Scripts/run-gtk-tests:
        (GtkTestRunner):
        * TestWebKitAPI/Tests/WebKitGLib/TestWebExtensions.cpp:
        (didAssociateFormControlsCallback):

2018-01-02  Alex Christensen  <achristensen@webkit.org>

        Use new WebsiteDataStore passed in through decidePolicyForNavigation SPI
        https://bugs.webkit.org/show_bug.cgi?id=180897
        <rdar://problem/35535328>

        Reviewed by Brent Fulgham.

        Test two forms of storage to be sure we are using a different WebsiteDataStore: cookies and sessionStorage.

        * TestWebKitAPI/Tests/WebKitCocoa/WebsitePolicies.mm:
        (-[WebsitePoliciesWebsiteDataStoreDelegate _webView:decidePolicyForNavigationAction:decisionHandler:]):
        (-[WebsitePoliciesWebsiteDataStoreDelegate webView:startURLSchemeTask:]):
        (-[WebsitePoliciesWebsiteDataStoreDelegate webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:completionHandler:]):
        (websiteDataStoreTestWebView):
        (TEST):

== Rolled over to ChangeLog-2018-01-01 ==
