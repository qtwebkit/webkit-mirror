idlharness test

This test validates the WebIDL included in the Credential Management API.


PASS Credential interface: existence and properties of interface object 
PASS Credential interface object length 
PASS Credential interface object name 
PASS Credential interface: existence and properties of interface prototype object 
PASS Credential interface: existence and properties of interface prototype object's "constructor" property 
PASS Credential interface: attribute id 
PASS Credential interface: attribute type 
PASS CredentialsContainer interface: existence and properties of interface object 
PASS CredentialsContainer interface object length 
PASS CredentialsContainer interface object name 
PASS CredentialsContainer interface: existence and properties of interface prototype object 
PASS CredentialsContainer interface: existence and properties of interface prototype object's "constructor" property 
PASS CredentialsContainer interface: operation get(CredentialRequestOptions) 
PASS CredentialsContainer interface: operation store(Credential) 
PASS CredentialsContainer interface: operation create(CredentialCreationOptions) 
PASS CredentialsContainer interface: operation preventSilentAccess() 
PASS CredentialsContainer must be primary interface of navigator.credentials 
PASS Stringification of navigator.credentials 
PASS CredentialsContainer interface: navigator.credentials must inherit property "get" with the proper type (0) 
PASS CredentialsContainer interface: calling get(CredentialRequestOptions) on navigator.credentials with too few arguments must throw TypeError 
PASS CredentialsContainer interface: navigator.credentials must inherit property "store" with the proper type (1) 
PASS CredentialsContainer interface: calling store(Credential) on navigator.credentials with too few arguments must throw TypeError 
PASS CredentialsContainer interface: navigator.credentials must inherit property "create" with the proper type (2) 
PASS CredentialsContainer interface: calling create(CredentialCreationOptions) on navigator.credentials with too few arguments must throw TypeError 
PASS CredentialsContainer interface: navigator.credentials must inherit property "preventSilentAccess" with the proper type (3) 
PASS PasswordCredential interface: existence and properties of interface object 
PASS PasswordCredential interface object length 
PASS PasswordCredential interface object name 
PASS PasswordCredential interface: existence and properties of interface prototype object 
PASS PasswordCredential interface: existence and properties of interface prototype object's "constructor" property 
PASS PasswordCredential interface: attribute password 
PASS PasswordCredential interface: attribute name 
PASS PasswordCredential interface: attribute iconURL 
PASS PasswordCredential must be primary interface of new PasswordCredential({ name: "name", iconURL: "https://example.com", password: "12345", id: "12345" }) 
PASS Stringification of new PasswordCredential({ name: "name", iconURL: "https://example.com", password: "12345", id: "12345" }) 
PASS PasswordCredential interface: new PasswordCredential({ name: "name", iconURL: "https://example.com", password: "12345", id: "12345" }) must inherit property "password" with the proper type (0) 
PASS PasswordCredential interface: new PasswordCredential({ name: "name", iconURL: "https://example.com", password: "12345", id: "12345" }) must inherit property "name" with the proper type (1) 
PASS PasswordCredential interface: new PasswordCredential({ name: "name", iconURL: "https://example.com", password: "12345", id: "12345" }) must inherit property "iconURL" with the proper type (2) 
PASS Credential interface: new PasswordCredential({ name: "name", iconURL: "https://example.com", password: "12345", id: "12345" }) must inherit property "id" with the proper type (0) 
PASS Credential interface: new PasswordCredential({ name: "name", iconURL: "https://example.com", password: "12345", id: "12345" }) must inherit property "type" with the proper type (1) 
PASS FederatedCredential interface: existence and properties of interface object 
PASS FederatedCredential interface object length 
PASS FederatedCredential interface object name 
PASS FederatedCredential interface: existence and properties of interface prototype object 
PASS FederatedCredential interface: existence and properties of interface prototype object's "constructor" property 
PASS FederatedCredential interface: attribute provider 
PASS FederatedCredential interface: attribute protocol 
PASS FederatedCredential interface: attribute name 
PASS FederatedCredential interface: attribute iconURL 
PASS FederatedCredential must be primary interface of new FederatedCredential({ name: "name", iconURL: "https://example.com", provider: "https://example.com", protocol: "protocol", id: "12345" }) 
PASS Stringification of new FederatedCredential({ name: "name", iconURL: "https://example.com", provider: "https://example.com", protocol: "protocol", id: "12345" }) 
PASS FederatedCredential interface: new FederatedCredential({ name: "name", iconURL: "https://example.com", provider: "https://example.com", protocol: "protocol", id: "12345" }) must inherit property "provider" with the proper type (0) 
PASS FederatedCredential interface: new FederatedCredential({ name: "name", iconURL: "https://example.com", provider: "https://example.com", protocol: "protocol", id: "12345" }) must inherit property "protocol" with the proper type (1) 
PASS FederatedCredential interface: new FederatedCredential({ name: "name", iconURL: "https://example.com", provider: "https://example.com", protocol: "protocol", id: "12345" }) must inherit property "name" with the proper type (2) 
PASS FederatedCredential interface: new FederatedCredential({ name: "name", iconURL: "https://example.com", provider: "https://example.com", protocol: "protocol", id: "12345" }) must inherit property "iconURL" with the proper type (3) 
PASS Credential interface: new FederatedCredential({ name: "name", iconURL: "https://example.com", provider: "https://example.com", protocol: "protocol", id: "12345" }) must inherit property "id" with the proper type (0) 
PASS Credential interface: new FederatedCredential({ name: "name", iconURL: "https://example.com", provider: "https://example.com", protocol: "protocol", id: "12345" }) must inherit property "type" with the proper type (1) 

