
PASS createDataChannel with no argument should throw TypeError 
FAIL createDataChannel with closed connection should throw InvalidStateError assert_equals: signaling state expected "closed" but got "stable"
FAIL createDataChannel attribute default values assert_equals: priority expected (string) "low" but got (undefined) undefined
PASS createDataChannel with label "foo" should succeed 
FAIL createDataChannel with label null should succeed assert_equals: expected "null" but got ""
PASS createDataChannel with label undefined should succeed 
PASS createDataChannel with label lone surrogate should succeed 
PASS createDataChannel with ordered false should succeed 
PASS createDataChannel with ordered null/undefined should succeed 
PASS createDataChannel with maxPacketLifeTime 0 should succeed 
PASS createDataChannel with maxRetransmits 0 should succeed 
FAIL createDataChannel with both maxPacketLifeTime and maxRetransmits should throw SyntaxError assert_throws: function "() => pc.createDataChannel('', {
    maxPacketLifeTime: 0,
    maxRetransmits: 0
  })" threw object "TypeError: Type error" that is not a DOMException SyntaxError: property "code" is equal to undefined, expected 12
PASS createDataChannel with protocol "foo" should succeed 
PASS createDataChannel with protocol null should succeed 
PASS createDataChannel with protocol undefined should succeed 
PASS createDataChannel with protocol lone surrogate should succeed 
PASS createDataChannel with negotiated true should succeed 
PASS createDataChannel with id 0 should succeed 
PASS createDataChannel with id 1 should succeed 
FAIL createDataChannel with id 65534 should succeed The operation is not supported.
PASS createDataChannel with id -1 should throw TypeError 
PASS createDataChannel with id 65535 should throw TypeError 
PASS createDataChannel with id 65536 should throw TypeError 
FAIL createDataChannel with priority "high" should succeed assert_equals: expected (string) "high" but got (undefined) undefined
FAIL createDataChannel with invalid priority should throw TypeError assert_throws: function "() => pc.createDataChannel('', { priority: 'invalid' })" did not throw
FAIL createDataChannel with negotiated false and long label should throw TypeError assert_throws: function "() =>
    pc.createDataChannel('', {
      label: ' '.repeat(65536),
      negotiated: false
    })" did not throw
PASS createDataChannel with negotiated false and long protocol should throw TypeError 
PASS createDataChannel with negotiated true and long label and long protocol should succeed 

