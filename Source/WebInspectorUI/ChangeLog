2018-01-22  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227228. rdar://problem/36722601

    2018-01-19  Nikita Vasilyev  <nvasilyev@apple.com>

            Web Inspector: Make styles sidebar always LTR
            https://bugs.webkit.org/show_bug.cgi?id=175357
            <rdar://problem/33787988>

            Reviewed by Joseph Pecoraro.

            * UserInterface/Views/SpreadsheetRulesStyleDetailsPanel.js:
            (WI.SpreadsheetRulesStyleDetailsPanel):

2018-01-22  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227008. rdar://problem/36722458

    2018-01-16  Matt Baker  <mattbaker@apple.com>

            Web Inspector: Canvas tab: typing a "space" in the QuickConsole shouldn't trigger a recording
            https://bugs.webkit.org/show_bug.cgi?id=181706
            <rdar://problem/36558221>

            Reviewed by Joseph Pecoraro.

            * UserInterface/Views/CanvasOverviewContentView.js:
            (WI.CanvasOverviewContentView):
            (WI.CanvasOverviewContentView.prototype._handleSpace):

2018-01-17  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r227078. rdar://problem/36597996

    2018-01-17  Joseph Pecoraro  <pecoraro@apple.com>

            Web Inspector: Add back localized strings for Styles sidebar panels
            https://bugs.webkit.org/show_bug.cgi?id=181748
            <rdar://problem/36583184>

            Reviewed by Brian Burg.

            * Localizations/en.lproj/localizedStrings.js:
            * UserInterface/Views/ComputedStyleDetailsSidebarPanel.js:
            (WI.ComputedStyleDetailsSidebarPanel):
            * UserInterface/Views/RulesStyleDetailsSidebarPanel.js:
            (WI.RulesStyleDetailsSidebarPanel):
            * UserInterface/Views/VisualStyleDetailsSidebarPanel.js:
            (WI.VisualStyleDetailsSidebarPanel):
            Add back localized strings for panel titles lost in r225547.

2018-01-16  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226995. rdar://problem/36568070

    2018-01-16  Nikita Vasilyev  <nvasilyev@apple.com>

            Web Inspector: Styles Redesign: Long value causes bad wrapping
            https://bugs.webkit.org/show_bug.cgi?id=181618
            <rdar://problem/36485175>

            Reviewed by Joseph Pecoraro.

            Wrap long values only when editing.

            * UserInterface/Views/SpreadsheetCSSStyleDeclarationEditor.css:
            (.spreadsheet-style-declaration-editor .value.editing):

2018-01-16  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226996. rdar://problem/36568089

    2018-01-16  Nikita Vasilyev  <nvasilyev@apple.com>

            Web Inspector: Styles: pressing down key should select first item from completion list when focusing on empty value
            https://bugs.webkit.org/show_bug.cgi?id=181633
            <rdar://problem/36501797>

            Reviewed by Joseph Pecoraro.

            * UserInterface/Views/SpreadsheetTextField.js:
            (WI.SpreadsheetTextField.prototype._updateCompletions):

2018-01-16  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226994. rdar://problem/36568074

    2018-01-16  Nikita Vasilyev  <nvasilyev@apple.com>

            Web Inspector: Styles Redesign: clicking on the white space after the property sometimes places a blank property at the wrong index
            https://bugs.webkit.org/show_bug.cgi?id=179585
            <rdar://problem/35490780>

            Reviewed by Joseph Pecoraro.

            * UserInterface/Views/SpreadsheetCSSStyleDeclarationEditor.js:
            (WI.SpreadsheetCSSStyleDeclarationEditor.prototype.spreadsheetStylePropertyRemoved):
            Layout call is needed to update data-property-index attributes on the property views.

2018-01-16  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226992. rdar://problem/36568053

    2018-01-16  Joseph Pecoraro  <pecoraro@apple.com>

            Web Inspector: Network Tab - Export HAR Context Menu not working
            https://bugs.webkit.org/show_bug.cgi?id=181694
            <rdar://problem/36479197>

            Reviewed by Brian Burg.

            * UserInterface/Views/NetworkTableContentView.js:
            (WI.NetworkTableContentView.prototype.tableCellContextMenuClicked):
            Ensure `this` works in the handler.

2018-01-16  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226821. rdar://problem/36568038

    2018-01-11  Joseph Pecoraro  <pecoraro@apple.com>

            Web Inspector: Rename "Query String" section as "Query String Parameters" for clarity
            https://bugs.webkit.org/show_bug.cgi?id=181464

            Reviewed by Darin Adler.

            * Localizations/en.lproj/localizedStrings.js:
            * UserInterface/Views/ResourceHeadersContentView.js:
            (WI.ResourceHeadersContentView.prototype.initialLayout):

2018-01-16  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226765. rdar://problem/36568045

    2018-01-10  Joseph Pecoraro  <pecoraro@apple.com>

            REGRESSION(r218975): Web Inspector: Add back NavigationSidebarPanel initialization parameter used by SearchSidebarPanel (top overflow shadow)
            https://bugs.webkit.org/show_bug.cgi?id=181518
            <rdar://problem/36427197>

            Reviewed by Matt Baker.

            * UserInterface/Views/NavigationSidebarPanel.css:
            (.sidebar > .panel.navigation > .overflow-shadow.top):
            * UserInterface/Views/NavigationSidebarPanel.js:
            (WI.NavigationSidebarPanel):
            Add back the initialization parameter still used by SearchSidebarPanel
            and add back its implementation. There were still references to
            dynamically update _topOverflowShadowElement in NavigationSidebarPanel.

2018-01-16  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226674. rdar://problem/36568078

    2018-01-09  Joseph Pecoraro  <pecoraro@apple.com>

            REGRESSION(r201855): Web Inspector: Should see "length" autocompletion suggestion on a string literal
            https://bugs.webkit.org/show_bug.cgi?id=181462
            <rdar://problem/36390699>

            Reviewed by Matt Baker.

            * UserInterface/Controllers/JavaScriptRuntimeCompletionProvider.js:
            (WI.JavaScriptRuntimeCompletionProvider.prototype.completionControllerCompletionsNeeded.inspectedPage_evalResult_getCompletions):
            This is code that runs on the inspected target, which may have an old version of
            WebKit/JavaScriptCore, so don't use new syntax like this.

            (WI.JavaScriptRuntimeCompletionProvider.prototype.completionControllerCompletionsNeeded):
            We intended to return the result by as a JSON value instead of a RemoteObject.

2018-01-11  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226755. rdar://problem/36429123

    2018-01-10  Matt Baker  <mattbaker@apple.com>

            Web Inspector: Canvas tab: throttle recording slider updates
            https://bugs.webkit.org/show_bug.cgi?id=180839
            <rdar://problem/36057849>

            Reviewed by Joseph Pecoraro

            * UserInterface/Base/Utilities.js:
            Add Object.throttle and Function.cancelThrottle. Repeated calls to a
            function on a throttled object are delayed, so that the function isn't
            invoked more frequently than the specified delay value.

            For a description of throttling behavior see:
              - http://www.chrislondon.co/throttling-vs-debouncing
              - http://benalman.com/projects/jquery-throttle-debounce-plugin

            * UserInterface/Views/RecordingContentView.js:
            (WI.RecordingContentView.prototype.updateActionIndex):
            Throttle frequency of canvas snapshot creation to 200ms.
            (WI.RecordingContentView.prototype.hidden):
            Prevent trailing edge call after hiding the view.

2018-01-09  Jason Marcell  <jmarcell@apple.com>

        Cherry-pick r226517. rdar://problem/36392371

    2018-01-08  Joseph Pecoraro  <pecoraro@apple.com>

            Web Inspector: Find next / previous within a resource content view does not have bouncy highlight when editor scrolls
            https://bugs.webkit.org/show_bug.cgi?id=181279
            <rdar://problem/36291097>

            Reviewed by Brian Burg.

            * UserInterface/Views/TextEditor.js:
            (WI.TextEditor.prototype._revealSearchResult):
            Reposition the bouncy highlight on scroll based on the CodeMirror
            line/ch position of the search result.

            (WI.TextEditor.prototype._removeBouncyHighlightElementIfNeeded):
            Track the bouncy highlight scroll handler in a member variable so that
            we always remember to remove it and don't leak scroll handlers.

2018-01-07  David Kilzer  <ddkilzer@apple.com>

        Enable -Wcast-qual for WebInspectorUI, WebKitLegacy, WebKit projects
        <https://webkit.org/b/181256>
        <rdar://problem/36281730>

        Reviewed by Darin Adler.

        * Configurations/Base.xcconfig:
        (WARNING_CFLAGS): Add -Wcast-qual.

2018-01-05  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Add another Protocol Version
        https://bugs.webkit.org/show_bug.cgi?id=181354
        <rdar://problem/35432817>

        Reviewed by Matt Baker.

        * UserInterface/Protocol/Legacy/11.3/InspectorBackendCommands.js: Added.
        * Versions/Inspector-iOS-11.3.json: Added.

2018-01-04  Devin Rousso  <webkit@devinrousso.com>

        Web Inspector: replace HTMLCanvasElement with CanvasRenderingContext for instrumentation logic
        https://bugs.webkit.org/show_bug.cgi?id=180770

        Reviewed by Joseph Pecoraro.

        * UserInterface/Models/Canvas.js:
        (WI.Canvas.fromPayload):
        (WI.Canvas.prototype.get contextType):
        (WI.Canvas.prototype.saveIdentityToCookie):
        (WI.Canvas.prototype.get frame): Deleted.

2018-01-04  Joseph Pecoraro  <pecoraro@apple.com>

        REGRESSION (r225709): Web Inspector: CSS Source maps not loading
        https://bugs.webkit.org/show_bug.cgi?id=181314
        <rdar://problem/36177620>

        Reviewed by Brian Burg.

        * UserInterface/Controllers/SourceMapManager.js:
        (WI.SourceMapManager.prototype._loadAndParseSourceMap):
        * UserInterface/Models/SourceMapResource.js:
        (WI.SourceMapResource.prototype.requestContentFromBackend):
        Correct this so that we only fall back to a reasonable frame id
        if we couldn't determine a frame id from earlier. Previously this
        was incorrectly clearing the frame id if we had gotten it earlier.

        * UserInterface/Test.html:
        * UserInterface/Test/Test.js:
        (WI.loaded):
        Add SourceMap related files for tests.

2018-01-04  Brian Burg  <bburg@apple.com>

        Web Inspector: Capture Element Screenshot looks fuzzy
        https://bugs.webkit.org/show_bug.cgi?id=175734
        <rdar://problem/33803377>

        Reviewed by Joseph Pecoraro and Simon Fraser.

        Spruce up these functions a bit. They now optionally return a promise
        if no callback is supplied. They now can take either a WI.DOMNode or a node id.

        * UserInterface/Controllers/DOMTreeManager.js:
        (WI.DOMTreeManager.prototype.querySelector):
        (WI.DOMTreeManager.prototype.querySelectorAll):

2018-01-04  Brian Burg  <bburg@apple.com>

        Web Inspector: add RemoteObject.fetchProperties and some basic tests for RemoteObject API
        https://bugs.webkit.org/show_bug.cgi?id=180945

        Reviewed by Joseph Pecoraro.

        Add a new method, fetchProperties, which async fetches an arbitrary list of properties
        from a RemoteObject. This is intended for writing tests and other quick evaluations,
        so it has some behaviors that are suitable in these situations:
        - If the evaluation throws an exception, the result will reject with that exception.
        - If there is a protocol error for some reason, the result will reject with an exception.
        - Non-string and non-number keys cause an exception, as this is probably not intended.
        - Does not accept a callback, returns a promise only. New code should use async.

        For full fidelity introspection of property descriptors, clients should use the existing
        getOwnPropertyDescriptor[s] class of methods.

        * UserInterface/Protocol/RemoteObject.js:
        (WI.RemoteObject.prototype.async.fetchProperties): Added.
        - Validate specified keys and remove duplicates.
        - Request properties one-by-one to avoid fetching all descriptors and dealing with previews.
        - Unwrap returned primitive values to avoid unnecessary munging in tests.

        (WI.RemoteObject.prototype.getProperty):
        - Rework this to return a promise if no callback was supplied.
        - Introduce stricter property type checking to avoid unintended mistakes.

        (WI.RemoteObject.prototype.callFunction):
        - Rework this to return a promise if no callback was supplied.
        - Turn thrown exceptions and protocol errors into rejected promises.

2018-01-04  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: ⌘G / ⇧⌘G text search does not working after closing find banner
        https://bugs.webkit.org/show_bug.cgi?id=181280
        <rdar://problem/36291175>

        Reviewed by Matt Baker.

        * UserInterface/Views/ContentBrowser.js:
        (WI.ContentBrowser.prototype._findBannerDidHide):
        When the find banner is hidden trigger a new ContentView method,
        searchHidden instead of the destructive searchCleared. This allows
        most content views (text editors, DOM tree, Network Headers view)
        to keep their populated search results.

        * UserInterface/Views/ContentView.js:
        (WI.ContentView.prototype.searchHidden):
        * UserInterface/Views/LogContentView.js:
        (WI.LogContentView.prototype.searchHidden):
        By default searchHidden does nothing. The Console's LogContentView
        treats the find banner differently and clears its search results.

        * UserInterface/Views/TextEditor.js:
        (WI.TextEditor.prototype.searchCleared):
        Modernize some code while working in this area.

        * UserInterface/Views/Main.css:
        (.bouncy-highlight):
        Ensure black text on yellow background in the bouncy highlight. In the
        DOM Tree it could have been white if the find banner was closed.

2018-01-03  Ting-Wei Lan  <lantw44@gmail.com>

        Replace hard-coded paths in shebangs with #!/usr/bin/env
        https://bugs.webkit.org/show_bug.cgi?id=181040

        Reviewed by Alex Christensen.

        * Scripts/combine-resources.pl:
        * Scripts/copy-user-interface-resources-dryrun.rb:
        * Scripts/copy-user-interface-resources.pl:
        * Scripts/fix-worker-imports-for-optimized-builds.pl:
        * Scripts/remove-console-asserts-dryrun.rb:
        * Scripts/remove-console-asserts.pl:
        * Scripts/update-LegacyInspectorBackendCommands.rb:
        * Scripts/update-codemirror-resources.rb:
        * WebInspectorUI.vcxproj/build-webinspectorui.pl:

2018-01-03  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: "Log Value" context menu is sometimes unavailable
        https://bugs.webkit.org/show_bug.cgi?id=181278
        <rdar://problem/36281649>

        Reviewed by Devin Rousso.

        * UserInterface/Views/ObjectPreviewView.css:
        (.object-preview > .title):
        * UserInterface/Views/ObjectTreeView.css:
        (.object-tree.expanded > .title):
        Make the expanded object title information 16px tall to match ObjectTree
        tree element row heights. This eliminates the floating console message
        location from overlapping the first ObjectTree's TreeElement and causing
        truncation and other behavior issues (like Context Menu identification).

2018-01-03  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: RTL - DOM Tree Element selection doesn't work
        https://bugs.webkit.org/show_bug.cgi?id=181275
        <rdar://problem/36290450>

        Reviewed by Devin Rousso.

        * UserInterface/Views/TreeOutline.js:
        (WI.TreeOutline.prototype.treeElementFromEvent):
        Provide a better explanation for why we are making the `x` adjustment here,
        to detect the inner most tree element along the horizontal. Fix the algorithm
        for RTL, since the intent is to adjust to the trailing edge of the container
        which is on the opposite side in RTL.

2018-01-03  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Find banner sometimes does not work (when already populated and shown for first time on resource)
        https://bugs.webkit.org/show_bug.cgi?id=181255
        <rdar://problem/36248855>

        Reviewed by Matt Baker.

        * UserInterface/Views/TextEditor.js:
        (WI.TextEditor.prototype.set string):
        Defer any early searches until the initial content of a TextEditor has been set.
        Such searches can happen when the FindBanner already has content when a
        ContentView is first opened and needs to load its content from the backend.
        Further, even though the content may be loaded from the backend before the
        search results, microtask hops might cause the content to get to the TextEditor
        after the search results.

2018-01-03  Joseph Pecoraro  <pecoraro@apple.com>

        REGRESSION: Web Inspector: Debugger tab doesn't restore selected resource on reload
        https://bugs.webkit.org/show_bug.cgi?id=181253
        <rdar://problem/36280564>

        Reviewed by Matt Baker.

        * UserInterface/Views/DebuggerSidebarPanel.js:
        (WI.DebuggerSidebarPanel.prototype.restoreStateFromCookie):
        Add braces to ensure the trailing else is actually trailing the outer
        chain as it was intended to be.

2018-01-02  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Clicking source location link in Console unexpectedly jumps to Network tab
        https://bugs.webkit.org/show_bug.cgi?id=181229
        <rdar://problem/36075219>

        Reviewed by Matt Baker.

        * UserInterface/Base/Main.js:
        Cleanup linkifyURLAsNode. Ignore Search tab in generic handlePossibleLinkClick
        when not already in the Search tab.

        * UserInterface/Views/CallFrameView.js:
        (WI.CallFrameView):
        Ignore Search and Network tab in CallFrame links.

        * UserInterface/Views/TabBrowser.js:
        (WI.TabBrowser.prototype.bestTabContentViewForRepresentedObject):
        Improve style.

== Rolled over to ChangeLog-2018-01-01 ==
