2015-04-17  Milan Crha  <mcrha@redhat.com>

        [GTK] Expand wildcards inside generate-inspector-gresource-manifest.py
        https://bugs.webkit.org/show_bug.cgi?id=138134

        Reviewed by Carlos Garcia Campos.

        * GNUmakefile.am: Command line with expanded resources exceeds 32KB, which
        is a limit on Windows. It's better to expand wildcards inside the
        python script.

2015-04-15  Руслан Ижбулатов  <lrn1986@gmail.com>

        [W32] Buildsystem may use wrong Python interpreter
        https://bugs.webkit.org/show_bug.cgi?id=143755

        Reviewed by Carlos Garcia Campos.

        Use confgured Python interpreter

        Configure script has tests for Python (AC_PATH_PROG(PYTHON, python)),
        use the interpretor they provide (which is overridable by user by
        the way of passing PYTHON=... to configure) instead of the first
        thing found in PATH.

        Otherwise wrong version of Python might be used. Mingw-python,
        for example, which has commandline length limit, which results in
        errors like:
        /usr/bin/env: python: Argument list too long
        GNUmakefile:82317: recipe for target
        'DerivedSources/WebInspectorUI/GResourceBundle.xml' failed

        * GNUmakefile.am:

2014-09-25  Carlos Garcia Campos  <cgarcia@igalia.com>

        Unreviewed. Fix make distcheck.

        * GNUmakefile.am: Files in EXTRA_DIST need to be explicitly listed.

2014-09-25  Andres Gomez  <agomez@igalia.com>

        Unreviewed. Add more free icons for the Web Inspector in GTK+.

        * UserInterface/Images/gtk/AUTHORS:
        * UserInterface/Images/gtk/ApplicationCacheManifest.png: Added.
        * UserInterface/Images/gtk/ApplicationCacheManifest@2x.png: Added.
        * UserInterface/Images/gtk/COPYING:
        * UserInterface/Images/gtk/COPYING_LGPL2: Added.
        * UserInterface/Images/gtk/Cookie.png: Added.
        * UserInterface/Images/gtk/Cookie@2x.png: Added.
        * UserInterface/Images/gtk/HoverMenuButton.png: Added.
        * UserInterface/Images/gtk/HoverMenuButton@2x.png: Added.
        * UserInterface/Images/gtk/InstructionPointer.png: Added.
        * UserInterface/Images/gtk/InstructionPointer@2x.png: Added.
        * UserInterface/Images/gtk/Log.png: Added.
        * UserInterface/Images/gtk/Log@2x.png: Added.
        * UserInterface/Images/gtk/Profile.png: Added.
        * UserInterface/Images/gtk/Profile@2x.png: Added.
        * UserInterface/Images/gtk/Recording.png: Added.
        * UserInterface/Images/gtk/Recording@2x.png: Added.
        * UserInterface/Images/gtk/RecordingHovered.png: Added.
        * UserInterface/Images/gtk/RecordingHovered@2x.png: Added.
        * UserInterface/Images/gtk/RecordingStopped.png: Added.
        * UserInterface/Images/gtk/RecordingStopped@2x.png: Added.
        * UserInterface/Images/gtk/Script.png: Added.
        * UserInterface/Images/gtk/Script@2x.png: Added.
        * UserInterface/Images/gtk/ScriptLarge.png: Added.
        * UserInterface/Images/gtk/ScriptLarge@2x.png: Added.
        * UserInterface/Images/gtk/SliderThumb.png: Added.
        * UserInterface/Images/gtk/SliderThumb@2x.png: Added.
        * UserInterface/Images/gtk/SliderThumbPressed.png: Added.
        * UserInterface/Images/gtk/SliderThumbPressed@2x.png: Added.
        * UserInterface/Images/gtk/Stopwatch.png: Added.
        * UserInterface/Images/gtk/Stopwatch@2x.png: Added.

2014-09-24  Andres Gomez  <agomez@igalia.com>

        Unreviewed. Add more free icons for the Web Inspector in GTK+

        * UserInterface/Images/gtk/AUTHORS:
        * UserInterface/Images/gtk/ApplicationCache.png: Added.
        * UserInterface/Images/gtk/ApplicationCache@2x.png: Added.
        * UserInterface/Images/gtk/BottomUpTree.svg: Added.
        * UserInterface/Images/gtk/Breakpoint.png: Added.
        * UserInterface/Images/gtk/Breakpoint@2x.png: Added.
        * UserInterface/Images/gtk/BreakpointButton.svg:
        * UserInterface/Images/gtk/BreakpointInactive.png: Added.
        * UserInterface/Images/gtk/BreakpointInactive@2x.png: Added.
        * UserInterface/Images/gtk/BreakpointInactiveButton.svg:
        * UserInterface/Images/gtk/COPYING:
        * UserInterface/Images/gtk/COPYING_CCBYSA3: Copied from Source/WebInspectorUI/UserInterface/Images/gtk/COPYING.
        * UserInterface/Images/gtk/ClippingCSS.png: Added.
        * UserInterface/Images/gtk/ClippingCSS@2x.png: Added.
        * UserInterface/Images/gtk/ClippingGeneric.png: Added.
        * UserInterface/Images/gtk/ClippingGeneric@2x.png: Added.
        * UserInterface/Images/gtk/ClippingJS.png: Added.
        * UserInterface/Images/gtk/ClippingJS@2x.png: Added.
        * UserInterface/Images/gtk/CloseTimeline.png: Added.
        * UserInterface/Images/gtk/CloseTimeline@2x.png: Added.
        * UserInterface/Images/gtk/ColorIcon.png: Added.
        * UserInterface/Images/gtk/ColorIcon@2x.png: Added.
        * UserInterface/Images/gtk/Colors.png: Added.
        * UserInterface/Images/gtk/Colors@2x.png: Added.
        * UserInterface/Images/gtk/ColorsLarge.png: Added.
        * UserInterface/Images/gtk/ColorsLarge@2x.png: Added.
        * UserInterface/Images/gtk/Database.png: Added.
        * UserInterface/Images/gtk/Database@2x.png: Added.
        * UserInterface/Images/gtk/DatabaseTable.png: Added.
        * UserInterface/Images/gtk/DatabaseTable@2x.png: Added.
        * UserInterface/Images/gtk/HierarchicalNavigationItemChevron.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner1.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner10.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner11.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner12.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner2.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner3.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner4.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner5.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner6.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner7.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner8.svg: Added.
        * UserInterface/Images/gtk/IndeterminateProgressSpinner9.svg: Added.
        * UserInterface/Images/gtk/Issues.svg: Added.
        * UserInterface/Images/gtk/IssuesEnabled.svg: Added.
        * UserInterface/Images/gtk/LayerBorders.svg: Added.
        * UserInterface/Images/gtk/LessColumns.svg: Added.
        * UserInterface/Images/gtk/LocalStorage.png: Added.
        * UserInterface/Images/gtk/LocalStorage@2x.png: Added.
        * UserInterface/Images/gtk/Locked.svg: Added.
        * UserInterface/Images/gtk/Logs.svg: Added.
        * UserInterface/Images/gtk/Memory.svg: Added.
        * UserInterface/Images/gtk/MoreColumns.svg: Added.
        * UserInterface/Images/gtk/Native.svg: Added.
        * UserInterface/Images/gtk/NavigationItemAngleBrackets.svg: Added.
        * UserInterface/Images/gtk/NavigationItemBrushAndRuler.svg: Added.
        * UserInterface/Images/gtk/NavigationItemBug.svg: Added.
        * UserInterface/Images/gtk/NavigationItemCurleyBraces.svg: Added.
        * UserInterface/Images/gtk/NavigationItemFile.svg: Added.
        * UserInterface/Images/gtk/NavigationItemLayers.svg: Added.
        * UserInterface/Images/gtk/NavigationItemLog.svg: Added.
        * UserInterface/Images/gtk/NavigationItemMagnifyingGlass.svg: Added.
        * UserInterface/Images/gtk/NavigationItemStopwatch.svg: Added.
        * UserInterface/Images/gtk/NavigationItemStorage.svg: Added.
        * UserInterface/Images/gtk/NavigationItemTrash.svg: Added.
        * UserInterface/Images/gtk/NavigationItemVariable.svg: Added.
        * UserInterface/Images/gtk/Network.png: Added.
        * UserInterface/Images/gtk/Network@2x.png: Added.
        * UserInterface/Images/gtk/NetworkLarge.png: Added.
        * UserInterface/Images/gtk/NetworkLarge@2x.png: Added.
        * UserInterface/Images/gtk/Pause.svg: Added.
        * UserInterface/Images/gtk/Percent.svg: Added.
        * UserInterface/Images/gtk/Plus.svg: Added.
        * UserInterface/Images/gtk/PseudoElement.svg: Added.
        * UserInterface/Images/gtk/Reflection.svg: Added.
        * UserInterface/Images/gtk/Reload.svg: Added.
        * UserInterface/Images/gtk/Request.svg: Added.
        * UserInterface/Images/gtk/Response.svg: Added.
        * UserInterface/Images/gtk/ResultLine.svg: Added.
        * UserInterface/Images/gtk/Resume.svg: Added.
        * UserInterface/Images/gtk/SessionStorage.png: Added.
        * UserInterface/Images/gtk/SessionStorage@2x.png: Added.
        * UserInterface/Images/gtk/ShadowDOM.svg: Added.
        * UserInterface/Images/gtk/SourceCode.svg: Added.
        * UserInterface/Images/gtk/SplitToggleDown.svg: Added.
        * UserInterface/Images/gtk/SplitToggleUp.svg: Added.
        * UserInterface/Images/gtk/StepInto.svg: Added.
        * UserInterface/Images/gtk/StepOut.svg: Added.
        * UserInterface/Images/gtk/StepOver.svg: Added.
        * UserInterface/Images/gtk/StyleRuleAuthor.svg: Added.
        * UserInterface/Images/gtk/StyleRuleInherited.svg: Added.
        * UserInterface/Images/gtk/StyleRuleInheritedElement.svg: Added.
        * UserInterface/Images/gtk/StyleRuleInspector.svg: Added.
        * UserInterface/Images/gtk/StyleRuleUser.svg: Added.
        * UserInterface/Images/gtk/StyleRuleUserAgent.svg: Added.
        * UserInterface/Images/gtk/Time.svg: Added.
        * UserInterface/Images/gtk/TimelineRecordAnimation.svg: Added.
        * UserInterface/Images/gtk/TimelineRecordEvent.svg: Added.
        * UserInterface/Images/gtk/TimelineRecordLayout.svg: Added.
        * UserInterface/Images/gtk/TimelineRecordPaint.svg: Added.
        * UserInterface/Images/gtk/TimelineRecordScriptEvaluated.svg: Added.
        * UserInterface/Images/gtk/TimelineRecordStyle.svg: Added.
        * UserInterface/Images/gtk/TimelineRecordTimer.svg: Added.
        * UserInterface/Images/gtk/Undock.svg: Added.
        * UserInterface/Images/gtk/UserInputPrompt.svg: Added.
        * UserInterface/Images/gtk/UserInputPromptPrevious.svg: Added.
        * UserInterface/Images/gtk/UserInputResult.svg: Added.
        * UserInterface/Images/gtk/Warning.svg: Added.
        * UserInterface/Images/gtk/Weight.svg: Added.

2014-09-19  Carlos Garcia Campos  <cgarcia@igalia.com>

        Webkitgtk 2.5.3: tarball contains APPLE LICENSE file - stating not distributable
        https://bugs.webkit.org/show_bug.cgi?id=136632

        Reviewed by Gustavo Noronha Silva.

        Add free icons for the GTK port. These icons are from the GNOME
        project, some of them adapted by Andres Gomez for the inspector.

        * UserInterface/Images/gtk/AUTHORS: Added.
        * UserInterface/Images/gtk/BackArrow.svg: Added.
        * UserInterface/Images/gtk/BreakpointActionAdd.svg: Added.
        * UserInterface/Images/gtk/BreakpointActionRemove.svg: Added.
        * UserInterface/Images/gtk/BreakpointButton.svg: Added.
        * UserInterface/Images/gtk/BreakpointInactiveButton.svg: Added.
        * UserInterface/Images/gtk/Breakpoints.svg: Added.
        * UserInterface/Images/gtk/COPYING: Added.
        * UserInterface/Images/gtk/Close.svg: Added.
        * UserInterface/Images/gtk/CloseWhite.svg: Added.
        * UserInterface/Images/gtk/ContentFlow.svg: Added.
        * UserInterface/Images/gtk/Crosshair.svg: Added.
        * UserInterface/Images/gtk/DOMCharacterData.svg: Added.
        * UserInterface/Images/gtk/DOMComment.svg: Added.
        * UserInterface/Images/gtk/DOMDocument.svg: Added.
        * UserInterface/Images/gtk/DOMDocumentType.svg: Added.
        * UserInterface/Images/gtk/DOMElement.svg: Added.
        * UserInterface/Images/gtk/DOMNode.svg: Added.
        * UserInterface/Images/gtk/DOMTextNode.svg: Added.
        * UserInterface/Images/gtk/DOMTree.svg: Added.
        * UserInterface/Images/gtk/DisclosureTriangleSmallClosed.svg: Added.
        * UserInterface/Images/gtk/DisclosureTriangleSmallOpen.svg: Added.
        * UserInterface/Images/gtk/DisclosureTriangleTinyClosed.svg: Added.
        * UserInterface/Images/gtk/DisclosureTriangleTinyOpen.svg: Added.
        * UserInterface/Images/gtk/DockBottom.svg: Added.
        * UserInterface/Images/gtk/DockRight.svg: Added.
        * UserInterface/Images/gtk/DocumentCSS.png: Added.
        * UserInterface/Images/gtk/DocumentCSS@2x.png: Added.
        * UserInterface/Images/gtk/DocumentFont.png: Added.
        * UserInterface/Images/gtk/DocumentFont@2x.png: Added.
        * UserInterface/Images/gtk/DocumentGeneric.png: Added.
        * UserInterface/Images/gtk/DocumentGeneric@2x.png: Added.
        * UserInterface/Images/gtk/DocumentImage.png: Added.
        * UserInterface/Images/gtk/DocumentImage@2x.png: Added.
        * UserInterface/Images/gtk/DocumentJS.png: Added.
        * UserInterface/Images/gtk/DocumentJS@2x.png: Added.
        * UserInterface/Images/gtk/DocumentMarkup.png: Added.
        * UserInterface/Images/gtk/DocumentMarkup@2x.png: Added.
        * UserInterface/Images/gtk/DownloadArrow.svg: Added.
        * UserInterface/Images/gtk/Error.svg: Added.
        * UserInterface/Images/gtk/Errors.svg: Added.
        * UserInterface/Images/gtk/ErrorsEnabled.svg: Added.
        * UserInterface/Images/gtk/EventListener.svg: Added.
        * UserInterface/Images/gtk/Exception.svg: Added.
        * UserInterface/Images/gtk/FilterFieldGlyph.svg: Added.
        * UserInterface/Images/gtk/FolderGeneric.png: Added.
        * UserInterface/Images/gtk/FolderGeneric@2x.png: Added.
        * UserInterface/Images/gtk/ForwardArrow.svg: Added.
        * UserInterface/Images/gtk/Function.svg: Added.
        * UserInterface/Images/gtk/GoToArrow.svg: Added.
        * UserInterface/Images/gtk/Resources.svg: Added.
        * UserInterface/Images/gtk/SortIndicatorDownArrow.svg: Added.
        * UserInterface/Images/gtk/SortIndicatorUpArrow.svg: Added.
        * UserInterface/Images/gtk/UpDownArrows.svg: Added.

2014-05-09  Alberto Garcia  <berto@igalia.com>

        jsmin.py license header confusing, mentions non-free license
        https://bugs.webkit.org/show_bug.cgi?id=123665

        Reviewed by Darin Adler.

        Pull the most recent version from upstream, which has a clear
        license.

        * Scripts/jsmin.py:

2014-01-30  Diego Pino Garcia  <dpino@igalia.com>

        Web Inspector: Implement open/close Console window shortcut
        https://bugs.webkit.org/show_bug.cgi?id=127896

        Reviewed by Timothy Hatcher.

        * UserInterface/KeyboardShortcut.js:
        (WebInspector.KeyboardShortcut.prototype.get displayName):
        Bug: Option symbol should be displayed as Alternative symbol (\u2387)
        in non Mac platforms.
        * UserInterface/Main.js:
        (WebInspector.contentLoaded):
        Create keyboard shortcut for toggling console window.

2014-01-29  Diego Pino Garcia  <dpino@igalia.com>

        Web Inspector: [REGRESSION(r162931)] Tab navigation broken in DataGrid
        https://bugs.webkit.org/show_bug.cgi?id=127816

        Reviewed by Timothy Hatcher.

        * UserInterface/DataGrid.js:
        (WebInspector.DataGrid.prototype.moveToNextIfNeeded):
        (WebInspector.DataGrid.prototype._editingCommitted):
        Change columnIdentifier values 0 and 1 to strings "0" and "1".

2014-01-28  Joseph Pecoraro  <pecoraro@apple.com>

        Unreviewed follow-up to r162965. Better coding style.

        Timothy Hatcher pointed out a clearer style for classes
        on the <body> is to specify body.class. I agree.

        * UserInterface/DashboardView.css:
        (body.javascript .toolbar .dashboard):
        (body.web .toolbar.collapsed .dashboard > .logs):
        (body.javascript .toolbar .dashboard > .resourcesCount):

2014-01-28  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Tweak UI when debugging a JSContext
        https://bugs.webkit.org/show_bug.cgi?id=127799

        Reviewed by Timothy Hatcher.

        * UserInterface/DashboardView.css:
        (.toolbar.javascript .dashboard):
        (.toolbar.web.collapsed .dashboard > .logs):
        (.toolbar.javascript .dashboard > .resourcesCount):
        Adjust collapsed dashboard in web and javascript debugging modes.
        JavaScript debugging mode is always treated as collapsed.

        * UserInterface/Main.js:
        (WebInspector.contentLoaded):
        Adjust what is created and shown when in javascript debugging mode.

        * UserInterface/NavigationSidebarPanel.css:
        (.navigation-sidebar-panel-content-tree-outline.hide-disclosure-buttons .item.small):
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel):
        (WebInspector.ResourceSidebarPanel.prototype._scriptWasAdded):
        * UserInterface/TimelineSidebarPanel.css:
        (.sidebar > .panel.timeline > .status-bar):
        (.sidebar > .panel.timeline > .title-bar):
        When javascript debugging expect to put things at the root level, so hide
        disclosure buttons and adjust the style so resources look nice here.

2014-01-28  Diego Pino Garcia  <dpino@igalia.com>

        Web Inspector: In a DataGrid, store value of columnIdentifier to DOM node representing a cell
        https://bugs.webkit.org/show_bug.cgi?id=127613

        Reviewed by Timothy Hatcher.

        * UserInterface/DOMStorageContentView.js:
        (WebInspector.DOMStorageContentView.prototype._editingCallback):
        * UserInterface/DataGrid.js:
        (WebInspector.DataGrid):
        (WebInspector.DataGrid.prototype._keyDown):
        (WebInspector.DataGrid.prototype._contextMenuInDataTable):
        (WebInspector.DataGridNode.prototype.createCell):

2014-01-27  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Feature Check all Protocol Generated Interfaces to get JSContext Inspection working
        https://bugs.webkit.org/show_bug.cgi?id=127712

        Reviewed by Timothy Hatcher.

        Feature check protocol generated interfaces (e.g. FooAgent and registerFooObserver).
        Also drive by handle a possible exception if a SourceCode's URL is null, which is possible.

        * UserInterface/ApplicationCacheManager.js:
        (WebInspector.ApplicationCacheManager):
        (WebInspector.ApplicationCacheManager.prototype.initialize):
        * UserInterface/CSSCompletions.js:
        (WebInspector.CSSCompletions.requestCSSNameCompletions):
        * UserInterface/CSSStyleManager.js:
        (WebInspector.CSSStyleManager):
        (WebInspector.CSSStyleManager.prototype.canForcePseudoClasses):
        * UserInterface/DebuggerManager.js:
        * UserInterface/FrameResourceManager.js:
        (WebInspector.FrameResourceManager):
        (WebInspector.FrameResourceManager.prototype.initialize):
        * UserInterface/Main.js:
        (WebInspector.loaded):
        * UserInterface/ProfileManager.js:
        (WebInspector.ProfileManager):
        * UserInterface/StorageManager.js:
        (WebInspector.StorageManager):
        Type check generated interfaces.

        (WebInspector.DebuggerManager):
        (WebInspector.DebuggerManager.prototype.debuggerDidPause):
        Null check a SourceCode URL, which can be null for a Script with no URL.

2014-01-25  Timothy Hatcher  <timothy@apple.com>

        Remove dead code from the JSC profiler.

        https://bugs.webkit.org/show_bug.cgi?id=127643

        Reviewed by Mark Lam.

        * Versions/Inspector-iOS-7.0.json: Remove visible from CPUProfileNode.

2014-01-25  Joseph Pecoraro  <pecoraro@apple.com>

        Remove FIXME in CSSKeywordCompletions.js about "inherit" keyword
        https://bugs.webkit.org/show_bug.cgi?id=127638

        Reviewed by Timothy Hatcher.

        * UserInterface/CSSKeywordCompletions.js:
        (WebInspector.CSSKeywordCompletions.forProperty):
        Replace FIXME with a descriptive comment about why the code is what it is.

2014-01-25  Diego Pino Garcia  <dpino@igalia.com>

        Web Inspector: Position the completion suggestions popup below if there is room
        https://bugs.webkit.org/show_bug.cgi?id=127615

        Reviewed by Joseph Pecoraro.

        * UserInterface/CompletionSuggestionsView.js:
        (WebInspector.CompletionSuggestionsView.prototype.show):

2014-01-23  Timothy Hatcher  <timothy@apple.com>

        Refactor TimelineRecordBar combining logic into a helper function.

        https://bugs.webkit.org/show_bug.cgi?id=127530

        Reviewed by Joseph Pecoraro.

        * UserInterface/LayoutTimelineOverviewGraph.js:
        (WebInspector.LayoutTimelineOverviewGraph.prototype.updateLayout.createBar):
        (WebInspector.LayoutTimelineOverviewGraph.prototype.updateLayout):
        Use TimelineRecordBar.createCombinedBars.

        * UserInterface/NetworkTimelineOverviewGraph.css:
        (.timeline-overview-graph.network):
        (.timeline-overview-graph.network > .graph-row > .timeline-record-bar):
        Cleaned up since we are using TimelineRecordBar.

        * UserInterface/NetworkTimelineOverviewGraph.js:
        (WebInspector.NetworkTimelineOverviewGraph.prototype.reset):
        (WebInspector.NetworkTimelineOverviewGraph.prototype.updateLayout.createBar):
        (WebInspector.NetworkTimelineOverviewGraph.prototype.updateLayout):
        Use TimelineRecordBar.createCombinedBars.

        * UserInterface/ScriptTimelineOverviewGraph.js:
        (WebInspector.ScriptTimelineOverviewGraph.prototype.updateLayout.createBar):
        (WebInspector.ScriptTimelineOverviewGraph.prototype.updateLayout):
        Use TimelineRecordBar.createCombinedBars.

        * UserInterface/TimelineDataGridNode.js:
        (WebInspector.TimelineDataGridNode.prototype.refreshGraph.createBar):
        (WebInspector.TimelineDataGridNode.prototype.refreshGraph):
        Use TimelineRecordBar.createCombinedBars.

        * UserInterface/TimelineRecordBar.css:
        (.timeline-record-bar.unfinished > .segment):
        (.timeline-record-bar.has-inactive-segment > .segment:not(.inactive)):
        (:focus .selected .timeline-record-bar > .segment.inactive):
        Improved selected appearance and don't assume .segment.inactive exists.

        * UserInterface/TimelineRecordBar.js:
        (WebInspector.TimelineRecordBar):
        (WebInspector.TimelineRecordBar.createCombinedBars.compareByActiveStartTime): Added.
        (WebInspector.TimelineRecordBar.createCombinedBars): Added.
        (WebInspector.TimelineRecordBar.prototype.get renderMode): Added.
        (WebInspector.TimelineRecordBar.prototype.set renderMode): Added.
        (WebInspector.TimelineRecordBar.prototype.set records):
        (WebInspector.TimelineRecordBar.prototype.refresh):
        Lazily create DOM elements. Support rendering one or both segments. Doing this lets
        combined inactive segments sit behind multiple active segments.

2014-01-22  Timothy Hatcher  <timothy@apple.com>

        Improve collapsing of TimelineDataGridNode graphs up to ancestors.

        https://bugs.webkit.org/show_bug.cgi?id=127440

        Reviewed by Joseph Pecoraro.

        * UserInterface/TimelineDataGridNode.js:
        (WebInspector.TimelineDataGridNode.prototype.collapse):
        (WebInspector.TimelineDataGridNode.prototype.createCellContent):
        (WebInspector.TimelineDataGridNode.prototype.refresh):
        (WebInspector.TimelineDataGridNode.prototype.needsGraphRefresh):
        Notify the next visible ancestor it needs to refresh. Use needsGraphRefresh so ancestors
        are notified instead of directly calling refreshGraph in some places.

2014-01-22  Timothy Hatcher  <timothy@apple.com>

        Don't include a hidden Timeline selection in the navigation path components.

        https://bugs.webkit.org/show_bug.cgi?id=127443

        Reviewed by Joseph Pecoraro.

        * UserInterface/GeneralTreeElementPathComponent.js:
        (WebInspector.GeneralTreeElementPathComponent.prototype.get previousSibling):
        (WebInspector.GeneralTreeElementPathComponent.prototype.get nextSibling):
        Skip hidden siblings.

        * UserInterface/OverviewTimelineView.js:
        (WebInspector.OverviewTimelineView.prototype.updateLayout):
        (WebInspector.OverviewTimelineView.prototype.get selectionPathComponents):
        Don't include hidden selection and dispatch SelectionPathComponentsDidChange event if hidden changes.

        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.prototype._timeRangeSelectionChanged):
        Dispatch SelectionPathComponentsDidChange event if hidden changes on the selected tree element.

        * UserInterface/TimelineView.js:
        (WebInspector.TimelineView.prototype.get selectionPathComponents):
        Don't include hidden selection.

2014-01-22  Timothy Hatcher  <timothy@apple.com>

        Support collapsing call site records into the resource timeline.

        Also fix some filtering and graph issues.

        https://bugs.webkit.org/show_bug.cgi?id=127440

        Reviewed by Joseph Pecoraro.

        * UserInterface/NavigationSidebarPanel.js:
        (WebInspector.NavigationSidebarPanel.prototype.updateFilter):
        (WebInspector.NavigationSidebarPanel.prototype.applyFiltersToTreeElement.matchTextFilter):
        (WebInspector.NavigationSidebarPanel.prototype.applyFiltersToTreeElement.makeVisible):
        (WebInspector.NavigationSidebarPanel.prototype.applyFiltersToTreeElement):
        (WebInspector.NavigationSidebarPanel.prototype._updateFilter):
        Tweak how filtering happens so custom filters never expand to reveal and auto expanded
        tree elements will auto-collapse again later even with custom filters.

        * UserInterface/OverviewTimelineView.css:
        (.timeline-view.overview > .data-grid tr.parent:not(.expanded) td.graph-column .timeline-record-bar:not(.timeline-record-type-network) > .segment):
        (.timeline-view.overview > .data-grid tr.parent:not(.expanded).selected td.graph-column .timeline-record-bar:not(.timeline-record-type-network) > .segment):
        (.timeline-view.overview > .data-grid:focus tr.parent:not(.expanded).selected td.graph-column .timeline-record-bar:not(.timeline-record-type-network) > .segment):
        Add a shadow to provide some negative space between juxtaposed records. Only needed when not expanded.

        * UserInterface/OverviewTimelineView.js:
        (WebInspector.OverviewTimelineView.prototype.updateLayout):
        (WebInspector.OverviewTimelineView.prototype._addResourceToTreeIfNeeded):
        Update the filter when current time changes and only auto expand the main resource.

        * UserInterface/ResourceTimelineDataGridNode.js:
        (WebInspector.ResourceTimelineDataGridNode):
        (WebInspector.ResourceTimelineDataGridNode.prototype._timelineRecordUpdated):
        Don't schedule a refresh of the graph if the record isn't visible.

        * UserInterface/SourceCodeTimelineTimelineDataGridNode.js:
        (WebInspector.SourceCodeTimelineTimelineDataGridNode):
        (WebInspector.SourceCodeTimelineTimelineDataGridNode.prototype._timelineRecordAdded):
        Don't schedule a refresh of the graph if the record isn't visible.

        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.prototype._timeRangeSelectionChanged):
        Remove the boolean for updateFilter.

        * UserInterface/TimelineDataGrid.js:
        (WebInspector.TimelineDataGrid.prototype._refreshDirtyDataGridNodes):
        (WebInspector.TimelineDataGrid.prototype._sort):
        Keep the hidden state in-sync between node and element.

        * UserInterface/TimelineDataGridNode.js:
        (WebInspector.TimelineDataGridNode.prototype.collapse):
        (WebInspector.TimelineDataGridNode.prototype.expand):
        (WebInspector.TimelineDataGridNode.prototype.appendChild):
        (WebInspector.TimelineDataGridNode.prototype.insertChild):
        (WebInspector.TimelineDataGridNode.prototype.removeChild):
        (WebInspector.TimelineDataGridNode.prototype.removeChildren):
        (WebInspector.TimelineDataGridNode.prototype.removeChildrenRecursive):
        (WebInspector.TimelineDataGridNode.prototype.refreshGraph.createBarsForRecords):
        (WebInspector.TimelineDataGridNode.prototype.refreshGraph.else.collectRecordsByType.get if):
        (WebInspector.TimelineDataGridNode.prototype.needsGraphRefresh):
        (WebInspector.TimelineDataGridNode.prototype.isRecordVisible):
        Support drawing the children records on the parent graph.

        * UserInterface/TimelineRecordBar.css:
        (.timeline-record-bar.unfinished > .segment):
        (:focus .selected .timeline-record-bar > .segment):
        (:focus .selected .timeline-record-bar > .segment.inactive):
        (:focus .selected .timeline-record-bar.has-inactive-segment > .segment:not(.inactive)):
        Tweaked styles to look better when selected.

        * UserInterface/TimelineRecordBar.js:
        (WebInspector.TimelineRecordBar.recordsCannotBeCombined):
        (WebInspector.TimelineRecordBar.prototype.set records):
        (WebInspector.TimelineRecordBar.prototype.refresh):
        Drive-by fixes for some bug with bars being reused.

2014-01-21  Timothy Hatcher  <timothy@apple.com>

        Remember the Timeline Overview zoom and selection between sessions.

        https://bugs.webkit.org/show_bug.cgi?id=127369

        Reviewed by Joseph Pecoraro.

        * UserInterface/TimelineOverview.js:
        (WebInspector.TimelineOverview):
        (WebInspector.TimelineOverview.prototype.set secondsPerPixel):
        (WebInspector.TimelineOverview.prototype._timeRangeSelectionChanged):

2014-01-21  Timothy Hatcher  <timothy@apple.com>

        Show the Resource and Record selection path in the navigation bar for Timeline views.

        https://bugs.webkit.org/show_bug.cgi?id=127367

        Reviewed by Joseph Pecoraro.

        * UserInterface/LayoutTimelineView.js:
        (WebInspector.LayoutTimelineView.prototype.treeElementPathComponentSelected):
        (WebInspector.LayoutTimelineView.prototype._dataGridNodeSelected):
        * UserInterface/NetworkTimelineView.js:
        (WebInspector.NetworkTimelineView.prototype.treeElementPathComponentSelected):
        (WebInspector.NetworkTimelineView.prototype._dataGridNodeSelected):
        * UserInterface/OverviewTimelineView.js:
        (WebInspector.OverviewTimelineView.prototype.get selectionPathComponents):
        (WebInspector.OverviewTimelineView.prototype.treeElementPathComponentSelected):
        (WebInspector.OverviewTimelineView.prototype._dataGridNodeSelected):
        * UserInterface/ScriptTimelineView.js:
        (WebInspector.ScriptTimelineView.prototype.treeElementPathComponentSelected):
        (WebInspector.ScriptTimelineView.prototype._dataGridNodeSelected):
        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.prototype._timelineViewSelectionPathComponentsDidChange):
        (WebInspector.TimelineContentView.prototype._showTimelineView):
        * UserInterface/TimelineDataGrid.js:
        (WebInspector.TimelineDataGrid.prototype.treeElementForDataGridNode):
        (WebInspector.TimelineDataGrid.prototype.dataGridNodeForTreeElement):
        * UserInterface/TimelineView.js:
        (WebInspector.TimelineView.prototype.get selectionPathComponents):
        (WebInspector.TimelineView.prototype.treeElementPathComponentSelected):

2014-01-20  Timothy Hatcher  <timothy@apple.com>

        Add the recording button back to the Timelines sidebar.

        https://bugs.webkit.org/show_bug.cgi?id=127314

        Reviewed by Joseph Pecoraro.

        * Localizations/en.lproj/localizedStrings.js: Updated.

        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.prototype.get navigationItems):
        (WebInspector.TimelineContentView.prototype._update):
        (WebInspector.TimelineContentView.prototype._updateTimes):
        (WebInspector.TimelineContentView.prototype._startUpdatingCurrentTime):
        (WebInspector.TimelineContentView.prototype._recordingTimesUpdated):
        (WebInspector.TimelineContentView.prototype._clearTimeline):
        (WebInspector.TimelineContentView.prototype._recordingReset):
        Add a clear button and reset the time ruler and views when the recording resets.

        * UserInterface/TimelineSidebarPanel.css:
        (.sidebar > .panel.timeline > .status-bar):
        (.sidebar > .panel.timeline > .status-bar > .record-glyph):
        (.sidebar > .panel.timeline > .status-bar > .record-glyph.recording):
        (.sidebar > .panel.timeline > .status-bar > .record-glyph:hover):
        (.sidebar > .panel.timeline > .status-bar > .record-glyph.recording:hover):
        (.sidebar > .panel.timeline > .status-bar > .record-glyph.forced):
        (.sidebar > .panel.timeline > .status-bar > .record-glyph.recording.forced):
        (.sidebar > .panel.timeline > .status-bar > .record-status):
        Add styles for the recording button and status message.

        * UserInterface/TimelineSidebarPanel.js:
        (WebInspector.TimelineSidebarPanel.prototype._contentBrowserCurrentContentViewDidChange):
        (WebInspector.TimelineSidebarPanel.prototype._recordingStarted):
        (WebInspector.TimelineSidebarPanel.prototype._recordingStopped):
        (WebInspector.TimelineSidebarPanel.prototype._recordGlyphMousedOver):
        (WebInspector.TimelineSidebarPanel.prototype._recordGlyphMousedOut):
        (WebInspector.TimelineSidebarPanel.prototype._recordGlyphClicked):
        Add support for the recording button and status message.

2014-01-20  Timothy Hatcher  <timothy@apple.com>

        Make the TimelineRecordTreeElement location subtitle live.

        https://bugs.webkit.org/show_bug.cgi?id=127270

        Reviewed by Joseph Pecoraro.

        * Localizations/en.lproj/localizedStrings.js: Updated.

        * UserInterface/SourceCodeLocation.js:
        (WebInspector.SourceCodeLocation.prototype.originalLocationString):
        (WebInspector.SourceCodeLocation.prototype.formattedLocationString):
        (WebInspector.SourceCodeLocation.prototype.displayLocationString):
        (WebInspector.SourceCodeLocation.prototype.updateDisplayString):
        (WebInspector.SourceCodeLocation.prototype._locationString):
        Support for a new nameStyle enum and a prefix for the location string.
        Passing the prefix here lets it be italicized with the line number.
        Support column number for SourceCode's without a URL too.

        * UserInterface/TimelineRecordTreeElement.js:
        (WebInspector.TimelineRecordTreeElement):
        (WebInspector.TimelineRecordTreeElement.prototype.onattach):
        Create a subtitle span to update the location inside. Update the tooltip on attach.

2014-01-19  Timothy Hatcher  <timothy@apple.com>

        Generate better display names for timer and event Timeline records.

        Also support AnimationFrameRequested and AnimationFrameCanceled.

        https://bugs.webkit.org/show_bug.cgi?id=127258

        Reviewed by Joseph Pecoraro.

        * Localizations/en.lproj/localizedStrings.js: Updated.

        * UserInterface/LayoutTimelineRecord.js:
        (WebInspector.LayoutTimelineRecord.EventType.displayName):
        Generate past tense names that better match other names.

        * UserInterface/ScriptTimelineDataGridNode.js:
        (WebInspector.ScriptTimelineDataGridNode.prototype.createCellContent):
        Pass the details to displayName.

        * UserInterface/ScriptTimelineRecord.js:
        (WebInspector.ScriptTimelineRecord.EventType.displayName):
        Generate better names for timer and event records. Also add missing animation frame types.

        * UserInterface/ScriptTimelineView.js:
        (WebInspector.ScriptTimelineView.prototype._processPendingRecords):
        Pass true to WebInspector.TimelineRecordTreeElement to include timer identifiers in the title.

        * UserInterface/SourceCodeTimelineTreeElement.js:
        (WebInspector.SourceCodeTimelineTreeElement):
        Pass includeTimerIdentifierInMainTitle through to TimelineRecordTreeElement.

        * UserInterface/TimelineManager.js:
        (WebInspector.TimelineManager.prototype.eventRecorded.processRecord):
        Include AnimationFrameRequested and AnimationFrameCanceled.

        * UserInterface/TimelineRecordTreeElement.js:
        (WebInspector.TimelineRecordTreeElement):
        Use displayName functions instead and support includeTimerIdentifierInMainTitle.

2014-01-19  Timothy Hatcher  <timothy@apple.com>

        Implement basic versions of the TimelineOverview graphs.

        https://bugs.webkit.org/show_bug.cgi?id=127184

        Reviewed by Joseph Pecoraro.

        * UserInterface/LayoutTimelineOverviewGraph.css: Added.
        (.timeline-overview-graph.layout > .timeline-record-bar):
        (.timeline-overview-graph.layout > .timeline-record-bar > .segment):

        * UserInterface/LayoutTimelineOverviewGraph.js: Added.
        (WebInspector.LayoutTimelineOverviewGraph.prototype.reset):
        (WebInspector.LayoutTimelineOverviewGraph.prototype.updateLayout):
        (WebInspector.LayoutTimelineOverviewGraph.prototype._layoutTimelineRecordAdded):

        * UserInterface/Main.html: Added new files.

        * UserInterface/NetworkTimelineOverviewGraph.css: Added.
        (.timeline-overview-graph.network):
        (.timeline-overview-graph.network > .graph-row):
        (.timeline-overview-graph.network > .graph-row > .bar):
        (.timeline-overview-graph.network > .graph-row > .bar.inactive):
        (.timeline-overview-graph.network > .graph-row > .bar.unfinished):
        (.timeline-overview-graph.network > .graph-row > .bar:not(.inactive)):
        (.timeline-overview-graph.network:nth-child(even) > .graph-row > .bar:not(.inactive)):

        * UserInterface/NetworkTimelineOverviewGraph.js: Added.
        (WebInspector.NetworkTimelineOverviewGraph.prototype.reset):
        (WebInspector.NetworkTimelineOverviewGraph.prototype.updateLayout.updateElementPosition):
        (WebInspector.NetworkTimelineOverviewGraph.prototype.updateLayout.createBar):
        (WebInspector.NetworkTimelineOverviewGraph.prototype.updateLayout):
        (WebInspector.NetworkTimelineOverviewGraph.prototype._networkTimelineRecordAdded.compareByStartTime):
        (WebInspector.NetworkTimelineOverviewGraph.prototype._networkTimelineRecordAdded.insertObjectIntoSortedArray):
        (WebInspector.NetworkTimelineOverviewGraph.prototype._networkTimelineRecordAdded):

        * UserInterface/ScriptTimelineOverviewGraph.css: Added.
        (.timeline-overview-graph.script > .timeline-record-bar):
        (.timeline-overview-graph.script > .timeline-record-bar > .segment):

        * UserInterface/ScriptTimelineOverviewGraph.js: Added.
        (WebInspector.ScriptTimelineOverviewGraph.prototype.reset):
        (WebInspector.ScriptTimelineOverviewGraph.prototype.updateLayout):
        (WebInspector.ScriptTimelineOverviewGraph.prototype._scriptTimelineRecordAdded):

        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.prototype._showTimelineView):
        (WebInspector.TimelineContentView.prototype._update):
        (WebInspector.TimelineContentView.prototype._recordingReset):
        Create and keep the graphs informed.

        * UserInterface/TimelineDataGridNode.js:
        (WebInspector.TimelineDataGridNode):
        (WebInspector.TimelineDataGridNode.prototype.refreshGraph):
        Combine records that might overlap.

        * UserInterface/TimelineOverview.css:
        (.timeline-overview > .graphs-container):
        (.timeline-overview > .graphs-container > .timeline-overview-graph):
        (.timeline-overview > .graphs-container > .timeline-overview-graph:nth-child(even)):
        (.timeline-overview > .graphs-container > .timeline-overview-graph:not(:first-child)):
        Add the graph rows with alternating stripe.

        * UserInterface/TimelineOverview.js:
        (WebInspector.TimelineOverview):
        (WebInspector.TimelineOverview.prototype.set startTime):
        (WebInspector.TimelineOverview.prototype.get currentTime):
        (WebInspector.TimelineOverview.prototype.set currentTime):
        (WebInspector.TimelineOverview.prototype.updateLayout):
        (WebInspector.TimelineOverview.prototype.updateLayoutIfNeeded):
        Track currentTime in a member variable and let TimelineOverview manage the current time marker.

        * UserInterface/TimelineOverviewGraph.js: Added.
        (WebInspector.TimelineOverviewGraph):
        (WebInspector.TimelineOverviewGraph.prototype.get zeroTime):
        (WebInspector.TimelineOverviewGraph.prototype.set zeroTime):
        (WebInspector.TimelineOverviewGraph.prototype.get startTime):
        (WebInspector.TimelineOverviewGraph.prototype.set startTime):
        (WebInspector.TimelineOverviewGraph.prototype.get endTime):
        (WebInspector.TimelineOverviewGraph.prototype.set endTime):
        (WebInspector.TimelineOverviewGraph.prototype.get currentTime):
        (WebInspector.TimelineOverviewGraph.prototype.set currentTime):
        (WebInspector.TimelineOverviewGraph.prototype.reset):
        (WebInspector.TimelineOverviewGraph.prototype.updateLayout):
        (WebInspector.TimelineOverviewGraph.prototype.updateLayoutIfNeeded):
        (WebInspector.TimelineOverviewGraph.prototype.needsLayout):

        * UserInterface/TimelineRecordBar.css:
        (.timeline-record-bar > .segment):
        (.timeline-record-bar.unfinished > .segment):
        (.timeline-record-bar > .segment.inactive + .segment):
        (.timeline-record-bar.timeline-record-type-network > .segment.inactive):

        * UserInterface/TimelineRecordBar.js:
        (WebInspector.TimelineRecordBar):
        (WebInspector.TimelineRecordBar.recordsCannotBeCombined):
        (WebInspector.TimelineRecordBar.prototype.get records):
        (WebInspector.TimelineRecordBar.prototype.set records):
        (WebInspector.TimelineRecordBar.prototype.refresh):
        Make TimelineRecordBar support multiple records.

        * UserInterface/TimelineRuler.css:
        (.timeline-ruler > .markers):
        (.timeline-ruler > .selection-handle):
        (.timeline-ruler > .shaded-area):
        Add some z-index values to stay above graph elements.

2014-01-16  Timothy Hatcher  <timothy@apple.com>

        Clean up Timelines code by using ES6 features and less global access of TimelineRecording.
        Also don't recreate Timeline objects when TimelineRecording is reset, reset them instead.

        https://bugs.webkit.org/show_bug.cgi?id=127157

        Reviewed by Joseph Pecoraro.

        * UserInterface/LayoutTimelineView.js:
        (WebInspector.LayoutTimelineView.prototype.reset):
        * UserInterface/NetworkTimeline.js:
        (WebInspector.NetworkTimeline):
        (WebInspector.NetworkTimeline.prototype.reset):
        * UserInterface/NetworkTimelineView.js:
        (WebInspector.NetworkTimelineView.prototype.reset):
        * UserInterface/OverviewTimelineView.js:
        (WebInspector.OverviewTimelineView.prototype._networkTimelineRecordAdded):
        * UserInterface/ScriptTimelineView.js:
        (WebInspector.ScriptTimelineView.prototype.reset):
        * UserInterface/Timeline.js:
        (WebInspector.Timeline):
        (WebInspector.Timeline.prototype.reset):
        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.set createPathComponent):
        (WebInspector.TimelineContentView.set var):
        (WebInspector.TimelineContentView.prototype.showOverviewTimelineView):
        (WebInspector.TimelineContentView.prototype.showTimelineView):
        (WebInspector.TimelineContentView.prototype._showTimelineView):
        (WebInspector.TimelineContentView.prototype._update):
        (WebInspector.TimelineContentView.prototype._recordingReset):
        * UserInterface/TimelineRecording.js:
        (WebInspector.TimelineRecording.prototype.reset):

2014-01-16  Timothy Hatcher  <timothy@apple.com>

        Improve WebInspector.TimelineOverview by not putting WebInspector.TimelineRuler in a scroll area.

        https://bugs.webkit.org/show_bug.cgi?id=127145

        Reviewed by Joseph Pecoraro.

        * UserInterface/TimelineOverview.css:
        (.timeline-overview > .scroll-container):
        (.timeline-overview > .timeline-ruler):
        (.timeline-overview > .scroll-container > .scroll-width-sizer):
        * UserInterface/TimelineOverview.js:
        (WebInspector.TimelineOverview):
        (WebInspector.TimelineOverview.prototype.get startTime):
        (WebInspector.TimelineOverview.prototype.set startTime):
        (WebInspector.TimelineOverview.prototype.get secondsPerPixel):
        (WebInspector.TimelineOverview.prototype.set secondsPerPixel):
        (WebInspector.TimelineOverview.prototype.get scrollStartTime):
        (WebInspector.TimelineOverview.prototype.set scrollStartTime):
        (WebInspector.TimelineOverview.prototype.get visibleDuration):
        (WebInspector.TimelineOverview.prototype.revealMarker):
        (WebInspector.TimelineOverview.prototype.updateLayout):
        (WebInspector.TimelineOverview.prototype._handleScrollEvent):
        (WebInspector.TimelineOverview.prototype._handleWheelEvent):
        * UserInterface/TimelineRuler.js:
        (WebInspector.TimelineRuler.MinimumSelectionTimeRange): Reduce to 10ms now that super zoom has no performance impact.

2014-01-15  Timothy Hatcher  <timothy@apple.com>

        Implement the discrete Script and Layout timeline views.

        https://bugs.webkit.org/show_bug.cgi?id=127063

        Reviewed by Joseph Pecoraro.

        * Localizations/en.lproj/localizedStrings.js: Updated.

        * UserInterface/DataGrid.js:
        (WebInspector.DataGrid): Support hidden columns by default.
        (WebInspector.DataGrid.prototype.updateLayout): Set the column width to zero for hidden columns.

        * UserInterface/LayoutTimelineDataGrid.js:
        (WebInspector.LayoutTimelineDataGrid): Pass the right parameters to the superclass.

        * UserInterface/LayoutTimelineRecord.js:
        (WebInspector.LayoutTimelineRecord.prototype.saveIdentityToCookie): Added.

        * UserInterface/LayoutTimelineView.css: Copied from Source/WebInspectorUI/UserInterface/ScriptTimelineDataGrid.js.
        (.timeline-view.layout > .data-grid):
        (.timeline-view.layout > .data-grid .eventType-column):
        (.sidebar > .panel.timeline.timeline-content-view-showing .navigation-sidebar-panel-content-tree-outline.layout .item .subtitle):

        * UserInterface/LayoutTimelineView.js: Added.
        (WebInspector.LayoutTimelineView):
        (WebInspector.LayoutTimelineView.prototype.get navigationSidebarTreeOutlineLabel):
        (WebInspector.LayoutTimelineView.prototype.shown):
        (WebInspector.LayoutTimelineView.prototype.hidden):
        (WebInspector.LayoutTimelineView.prototype.updateLayout):
        (WebInspector.LayoutTimelineView.prototype.matchTreeElementAgainstCustomFilters):
        (WebInspector.LayoutTimelineView.prototype._layoutTimelineRecordAdded):
        (WebInspector.LayoutTimelineView.prototype._dataGridFiltersDidChange):
        (WebInspector.LayoutTimelineView.prototype._treeElementSelected):

        * UserInterface/Main.html: Added new files.

        * UserInterface/ScriptTimelineDataGrid.js:
        (WebInspector.ScriptTimelineDataGrid): Pass the right parameters to the superclass.

        * UserInterface/ScriptTimelineDataGridNode.js:
        (WebInspector.ScriptTimelineDataGridNode.prototype.createCellContent): Fix up how we create the link.

        * UserInterface/ScriptTimelineRecord.js:
        (WebInspector.ScriptTimelineRecord.prototype.saveIdentityToCookie): Added.

        * UserInterface/ScriptTimelineView.css: Copied from Source/WebInspectorUI/UserInterface/ScriptTimelineDataGrid.js.
        (.timeline-view.script > .data-grid):
        (.timeline-view.script > .data-grid .eventType-column):
        (.sidebar > .panel.timeline.timeline-content-view-showing .navigation-sidebar-panel-content-tree-outline.script .item .subtitle):

        * UserInterface/ScriptTimelineView.js: Added.
        (WebInspector.ScriptTimelineView):
        (WebInspector.ScriptTimelineView.prototype.get navigationSidebarTreeOutlineLabel):
        (WebInspector.ScriptTimelineView.prototype.shown):
        (WebInspector.ScriptTimelineView.prototype.hidden):
        (WebInspector.ScriptTimelineView.prototype.updateLayout):
        (WebInspector.ScriptTimelineView.prototype.matchTreeElementAgainstCustomFilters):
        (WebInspector.ScriptTimelineView.prototype._scriptTimelineRecordAdded):
        (WebInspector.ScriptTimelineView.prototype._dataGridFiltersDidChange):
        (WebInspector.ScriptTimelineView.prototype._treeElementSelected):

        * UserInterface/SourceCodeTimelineTreeElement.js:
        (WebInspector.SourceCodeTimelineTreeElement):
        Moved code to TimelineRecordTreeElement. Subclass from it.

        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.prototype.matchTreeElementAgainstCustomFilters): Support TimelineRecordTreeElement.
        (WebInspector.TimelineContentView.prototype._timeRangeSelectionChanged): Update zeroTime for all views.

        * UserInterface/TimelineDataGrid.css:
        (.data-grid.timeline td .icon):
        (.data-grid.timeline td .go-to-arrow):
        (.data-grid.timeline tr:hover .go-to-arrow):
        (.data-grid.timeline td .subtitle):
        (.data-grid.timeline td .subtitle::before):
        (.data-grid.timeline:focus tr.selected td .subtitle):

        * UserInterface/TimelineRecord.js:
        (WebInspector.TimelineRecord.prototype.saveIdentityToCookie): Added.

        * UserInterface/TimelineRecordTreeElement.js: Added.
        (WebInspector.TimelineRecordTreeElement):
        (WebInspector.TimelineRecordTreeElement.prototype.get record):
        (WebInspector.TimelineRecordTreeElement.prototype.get filterableData):
        Factored out from SourceCodeTimelineTreeElement.

        * UserInterface/TimelineSidebarPanel.js:
        (WebInspector.TimelineSidebarPanel.prototype.treeElementForRepresentedObject.looslyCompareRepresentedObjects):
        (WebInspector.TimelineSidebarPanel.prototype.treeElementForRepresentedObject):
        Find TreeElements via a loose lookup based on represented objects that might contain the represented object we are
        really looking for.

2014-01-14  Timothy Hatcher  <timothy@apple.com>

        Implement the discrete Network timeline view.

        https://bugs.webkit.org/show_bug.cgi?id=127022

        Reviewed by Joseph Pecoraro.

        * UserInterface/DataGrid.js:
        (WebInspector.DataGrid): Align the labels of the column headers to match the data.
        (WebInspector.DataGridNode.prototype.get selectable): Prevent selection when hidden.

        * UserInterface/DetailsSection.css:
        (.details-section > .header): Bump the font size to match data grid header sizes.

        * UserInterface/Main.html: Add new files.

        * UserInterface/NetworkTimelineView.css: Added.
        (.timeline-view.network > .data-grid):
        (.sidebar > .panel.timeline.timeline-content-view-showing > .content .item.resource .subtitle):
        Hide the domain subtitle when the content view is showing which also has the domain.

        * UserInterface/NetworkTimelineView.js: Added.
        (WebInspector.NetworkTimelineView):
        (WebInspector.NetworkTimelineView.prototype.get navigationSidebarTreeOutlineLabel):
        (WebInspector.NetworkTimelineView.prototype.shown):
        (WebInspector.NetworkTimelineView.prototype.hidden):
        (WebInspector.NetworkTimelineView.prototype.updateLayout):
        (WebInspector.NetworkTimelineView.prototype.matchTreeElementAgainstCustomFilters):
        (WebInspector.NetworkTimelineView.prototype._networkTimelineRecordAdded):
        (WebInspector.NetworkTimelineView.prototype._dataGridFiltersDidChange):
        (WebInspector.NetworkTimelineView.prototype._treeElementSelected):

        * UserInterface/ResourceTimelineDataGridNode.js:
        (WebInspector.ResourceTimelineDataGridNode.prototype._needsRefresh):
        Call dataGridNodeNeedsRefresh on the TimelineDataGrid so things can be batched with
        one request animation frame.

        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView): Create a NetworkTimelineView.
        (WebInspector.TimelineContentView.prototype.matchTreeElementAgainstCustomFilters):

        * UserInterface/TimelineDataGrid.css:
        (.data-grid.timeline table):
        (.data-grid.timeline th):
        (.data-grid.timeline th:not(:last-child)):
        (.data-grid.timeline th.sortable:active):
        (.data-grid.timeline th.sort-descending):
        (.data-grid.timeline .data-container):
        (.data-grid.timeline td):
        (.data-grid.timeline td:last-child):
        (.data-grid.timeline td:not(:last-child)):
        (.data-grid.timeline:focus tr.selected td:not(:last-child)):
        (.data-grid.timeline th.sort-descending > div:first-child):
        (.data-grid.timeline th.sort-descending > div:first-child::after):
        (.data-grid.timeline td.error):
        (.data-grid.timeline tr.selected td.error):
        (.data-grid.timeline > .navigation-bar-container):
        (.data-grid.timeline:hover > .navigation-bar-container):
        (.data-grid.timeline > .navigation-bar-container > .navigation-bar):

        * UserInterface/TimelineDataGrid.js:
        (WebInspector.TimelineDataGrid):
        (WebInspector.TimelineDataGrid.createColumnScopeBar):
        (WebInspector.TimelineDataGrid.prototype.reset):
        (WebInspector.TimelineDataGrid.prototype.shown):
        (WebInspector.TimelineDataGrid.prototype.hidden):
        (WebInspector.TimelineDataGrid.prototype.callFramePopoverAnchorElement):
        (WebInspector.TimelineDataGrid.prototype.updateLayout):
        (WebInspector.TimelineDataGrid.prototype.treeElementMatchesActiveScopeFilters):
        (WebInspector.TimelineDataGrid.prototype.addRowInSortOrder):
        (WebInspector.TimelineDataGrid.prototype.shouldIgnoreSelectionEvent):
        (WebInspector.TimelineDataGrid.prototype.dataGridNodeNeedsRefresh):
        (WebInspector.TimelineDataGrid.prototype._refreshDirtyDataGridNodes):
        (WebInspector.TimelineDataGrid.prototype._sort):
        (WebInspector.TimelineDataGrid.prototype._sortComparator):
        Add support for sorting, batch refresh and managing of a TreeOutlineDataGridSynchronizer.

        * UserInterface/TimelineSidebarPanel.css:
        (.sidebar > .panel.timeline > .title-bar): Bump the font size to match data grid header sizes.

        * UserInterface/TimelineView.js:
        (WebInspector.TimelineView.prototype.matchTreeElementAgainstCustomFilters): Added stub.

        * UserInterface/TreeOutlineDataGridSynchronizer.js:
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype.get treeOutline):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype.get dataGrid):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype.get enabled):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype.set enabled):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype.treeElementForDataGridNode):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype.dataGridNodeForTreeElement):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeOutlineScrolled):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._dataGridScrolled):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._dataGridNodeSelected):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._dataGridNodeExpanded):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._dataGridNodeCollapsed):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementSelected):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementAdded):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementRemoved):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementExpanded):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementCollapsed):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementHiddenChanged):
        Added support for disabling the synchronizer when the client can do a better job.

2014-01-13  Timothy Hatcher  <timothy@apple.com>

        Filter the Timeline overview graph and sidebar based on the current time selection.

        https://bugs.webkit.org/show_bug.cgi?id=126955

        Reviewed by Joseph Pecoraro.

        * UserInterface/NavigationSidebarPanel.js:
        (WebInspector.NavigationSidebarPanel.prototype.updateFilter):
        (WebInspector.NavigationSidebarPanel.prototype.hasCustomFilters):
        (WebInspector.NavigationSidebarPanel.prototype.matchTreeElementAgainstCustomFilters):
        (WebInspector.NavigationSidebarPanel.prototype.applyFiltersToTreeElement.matchTextFilter):
        (WebInspector.NavigationSidebarPanel.prototype.applyFiltersToTreeElement):
        Add support for custom filters implemented by subclasses.

        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.prototype.matchTreeElementAgainstCustomFilters.checkTimeBounds):
        (WebInspector.TimelineContentView.prototype.matchTreeElementAgainstCustomFilters):
        (WebInspector.TimelineContentView.prototype._timeRangeSelectionChanged):
        Filter known tree element types by time.

        * UserInterface/TimelineSidebarPanel.css:
        (.sidebar > .panel.timeline > .empty-content-placeholder):
        Position the empty placeholder with the content.

        * UserInterface/TimelineSidebarPanel.js:
        (WebInspector.TimelineSidebarPanel.prototype.hasCustomFilters):
        (WebInspector.TimelineSidebarPanel.prototype.matchTreeElementAgainstCustomFilters):
        Defer filtering to the TimelineContentView.

2014-01-13  Timothy Hatcher  <timothy@apple.com>

        Implement state cookie support for WebInspector.TimelineSidebarPanel.

        https://bugs.webkit.org/show_bug.cgi?id=126921

        Reviewed by Joseph Pecoraro.

        * UserInterface/DebuggerSidebarPanel.js:
        (WebInspector.DebuggerSidebarPanel.prototype.restoreStateFromCookie):
        Drive-by fix to pass along relaxedMatchDelay to the superclass. 

        * UserInterface/Main.js:
        (WebInspector.loaded):
        (WebInspector._provisionalLoadStarted):
        Listen for ProvisionalLoadStarted instead of ProvisionalLoadCommitted to save the cookie
        before the TimelineRecording is reset and clears the UI.

        * UserInterface/NavigationSidebarPanel.js:
        (WebInspector.NavigationSidebarPanel.prototype.get restoringState): Added.
        (WebInspector.NavigationSidebarPanel.prototype.restoreStateFromCookie.finalAttemptToRestoreViewStateFromCookie):
        Delete _pendingViewStateCookie since this was the final attempt.
        (WebInspector.NavigationSidebarPanel.prototype.restoreStateFromCookie):
        (WebInspector.NavigationSidebarPanel.prototype._isTreeElementWithoutRepresentedObject): Block string represented objects.
        (WebInspector.NavigationSidebarPanel.prototype._checkElementsForPendingViewStateCookie):

        * UserInterface/OverviewTimelineView.js:
        (WebInspector.OverviewTimelineView.prototype._treeElementSelected):

        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype.treeElementForRepresentedObject):
        Drive-by fix to null check parentFrame since it can be null. Was causing an exception while working on this.

        * UserInterface/SourceCodeTimeline.js:
        (WebInspector.SourceCodeTimeline):
        (WebInspector.SourceCodeTimeline.prototype.saveIdentityToCookie):

        * UserInterface/TimelineSidebarPanel.js:
        (WebInspector.TimelineSidebarPanel.prototype.canShowDifferentContentView):
        (WebInspector.TimelineSidebarPanel.prototype.saveStateToCookie):
        (WebInspector.TimelineSidebarPanel.prototype.restoreStateFromCookie):

        * UserInterface/TreeOutline.js:
        (TreeOutline.prototype._forgetTreeElement):
        Drive-by fix to clear selectedTreeElement if it is removed from the tree. Was causing removed TreeElements to be
        saved as a cookie since it was still the selected item.

2014-01-11  Timothy Hatcher  <timothy@apple.com>

        Implement bar graph rendering for WebInspector.OverviewTimelineView.

        https://bugs.webkit.org/show_bug.cgi?id=126831

        Reviewed by Joseph Pecoraro.

        * UserInterface/Main.html: Added new files.

        * UserInterface/OverviewTimelineView.css:
        (.timeline-view.overview > .data-grid td.graph-column):
        (.timeline-view.overview > .data-grid td.graph-column > div):
        (.timeline-view.overview > .data-grid td.graph-column .timeline-record-bar):
        Position the bars in the DataGrid cells.

        * UserInterface/OverviewTimelineView.js:
        (WebInspector.OverviewTimelineView.prototype.updateLayout):
        (WebInspector.OverviewTimelineView.prototype._addResourceToTreeIfNeeded):
        (WebInspector.OverviewTimelineView.prototype._sourceCodeTimelineAdded):
        Create the proper DataGridNodes for resources and source code timelines.

        * UserInterface/ResourceTimelineDataGridNode.js:
        (WebInspector.ResourceTimelineDataGridNode):
        (WebInspector.ResourceTimelineDataGridNode.prototype.get records):
        (WebInspector.ResourceTimelineDataGridNode.prototype.get resource):
        (WebInspector.ResourceTimelineDataGridNode.prototype.get data):
        (WebInspector.ResourceTimelineDataGridNode.prototype.createCellContent):
        (WebInspector.ResourceTimelineDataGridNode.prototype.refresh):
        (WebInspector.ResourceTimelineDataGridNode.prototype._needsRefresh):
        (WebInspector.ResourceTimelineDataGridNode.prototype._goToResource):
        Simplify by deferring the graph logic to the new TimelineDataGridNode base class.

        * UserInterface/SourceCodeTimelineTimelineDataGridNode.js: Added.
        (WebInspector.SourceCodeTimelineTimelineDataGridNode):
        (WebInspector.SourceCodeTimelineTimelineDataGridNode.prototype.get records):
        (WebInspector.SourceCodeTimelineTimelineDataGridNode.prototype.get sourceCodeTimeline):
        (WebInspector.SourceCodeTimelineTimelineDataGridNode.prototype.get data):

        * UserInterface/TimelineDataGridNode.js: Added.
        (WebInspector.TimelineDataGridNode):
        (WebInspector.TimelineDataGridNode.prototype.get records):
        (WebInspector.TimelineDataGridNode.prototype.get data):
        (WebInspector.TimelineDataGridNode.prototype.createCellContent):
        (WebInspector.TimelineDataGridNode.prototype.refresh):
        (WebInspector.TimelineDataGridNode.prototype.refreshGraph):
        (WebInspector.TimelineDataGridNode.prototype.needsGraphRefresh):
        Handles the graph column and manages the records and their bars.

        * UserInterface/TimelineRecordBar.css: Added.
        (.timeline-record-bar):
        (.timeline-record-bar > .segment):
        (.timeline-record-bar:not(.has-inactive-segment) > .segment):
        (.timeline-record-bar.unfinished > .segment):
        (.timeline-record-bar > .segment.inactive + .segment):
        (:focus .selected .timeline-record-bar > .segment):
        (.timeline-record-bar > .segment.inactive):
        (.timeline-record-bar.timeline-record-type-network > .segment):
        (.timeline-record-bar.timeline-record-type-layout > .segment):
        (.timeline-record-bar.timeline-record-type-script > .segment):

        * UserInterface/TimelineRecordBar.js: Added.
        (WebInspector.TimelineRecordBar):
        (WebInspector.TimelineRecordBar.prototype.get element):
        (WebInspector.TimelineRecordBar.prototype.refresh):
        (WebInspector.TimelineRecordBar.prototype._updateElementPosition):

2014-01-08  Timothy Hatcher  <timothy@apple.com>

        Update the current WebInspector.TimelineView when time range changes.

        https://bugs.webkit.org/show_bug.cgi?id=126667

        Reviewed by Joseph Pecoraro.

        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.prototype._showTimelineView):
        (WebInspector.TimelineContentView.prototype._update):
        (WebInspector.TimelineContentView.prototype._startUpdatingCurrentTime):
        (WebInspector.TimelineContentView.prototype._stopUpdatingCurrentTime):
        (WebInspector.TimelineContentView.prototype._recordingStarted):
        (WebInspector.TimelineContentView.prototype._recordingStopped):
        (WebInspector.TimelineContentView.prototype._recordingReset):
        (WebInspector.TimelineContentView.prototype._timeRangeSelectionChanged):
        * UserInterface/TimelineOverview.js:
        (WebInspector.TimelineOverview):
        (WebInspector.TimelineOverview.prototype.updateLayout):
        (WebInspector.TimelineOverview.prototype.updateLayoutIfNeeded):
        (WebInspector.TimelineOverview.prototype._updateElementWidth):
        (WebInspector.TimelineOverview.prototype._handleWheelEvent):
        (WebInspector.TimelineOverview.prototype._timeRangeSelectionChanged):
        * UserInterface/TimelineRuler.js:
        (WebInspector.TimelineRuler.prototype.updateLayoutIfNeeded):
        * UserInterface/TimelineView.js:
        (WebInspector.TimelineView):
        (WebInspector.TimelineView.prototype.get zeroTime):
        (WebInspector.TimelineView.prototype.set zeroTime):
        (WebInspector.TimelineView.prototype.get startTime):
        (WebInspector.TimelineView.prototype.set startTime):
        (WebInspector.TimelineView.prototype.get endTime):
        (WebInspector.TimelineView.prototype.set endTime):
        (WebInspector.TimelineView.prototype.get currentTime):
        (WebInspector.TimelineView.prototype.set currentTime.checkIfLayoutIsNeeded):
        (WebInspector.TimelineView.prototype.set currentTime):
        (WebInspector.TimelineView.prototype.updateLayout):
        (WebInspector.TimelineView.prototype.updateLayoutIfNeeded):
        (WebInspector.TimelineView.prototype.needsLayout):

2013-12-19  Timothy Hatcher  <timothy@apple.com>

        Implement time range selection for TimelineOverview and TimelineRuler.

        https://bugs.webkit.org/show_bug.cgi?id=126035

        Reviewed by Joseph Pecoraro.

        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.prototype._update):
        (WebInspector.TimelineContentView.prototype._recordingReset):
        Properly update start time and the selection start time on reset.

        * UserInterface/TimelineOverview.js:
        (WebInspector.TimelineOverview):
        (WebInspector.TimelineOverview.prototype.get selectionStartTime):
        (WebInspector.TimelineOverview.prototype.set selectionStartTime):
        (WebInspector.TimelineOverview.prototype.get selectionDuration):
        (WebInspector.TimelineOverview.prototype.set selectionDuration):
        Added selection getters and setters.

        * UserInterface/TimelineRuler.css:
        (.timeline-ruler.allows-time-range-selection):
        (.timeline-ruler > *):
        (.timeline-ruler > .header):
        (.timeline-ruler > .selection-drag):
        (.timeline-ruler > .selection-drag:active):
        (.timeline-ruler > .selection-handle):
        (.timeline-ruler > .selection-handle.left):
        (.timeline-ruler > .selection-handle.right):
        (.timeline-ruler > .shaded-area):
        (.timeline-ruler > .shaded-area.left):
        (.timeline-ruler > .shaded-area.right):
        Added styles for the selection elements and tweaked pointer-events to allow
        events on elements we expect.

        * UserInterface/TimelineRuler.js:
        (WebInspector.TimelineRuler):
        (WebInspector.TimelineRuler.prototype.get allowsTimeRangeSelection): Added.
        (WebInspector.TimelineRuler.prototype.set allowsTimeRangeSelection): Added.
        (WebInspector.TimelineRuler.prototype.get selectionStartTime): Added.
        (WebInspector.TimelineRuler.prototype.set selectionStartTime): Added.
        (WebInspector.TimelineRuler.prototype.get selectionEndTime): Added.
        (WebInspector.TimelineRuler.prototype.set selectionEndTime): Added.
        (WebInspector.TimelineRuler.prototype.updateLayout):
        (WebInspector.TimelineRuler.prototype._needsMarkerLayout.update):
        (WebInspector.TimelineRuler.prototype._needsMarkerLayout):
        (WebInspector.TimelineRuler.prototype._needsSelectionLayout.update):
        (WebInspector.TimelineRuler.prototype._needsSelectionLayout):
        (WebInspector.TimelineRuler.prototype._recalculate):
        (WebInspector.TimelineRuler.prototype._updatePositionOfElement):
        (WebInspector.TimelineRuler.prototype._updateMarkers):
        (WebInspector.TimelineRuler.prototype._updateSelection): Added.
        (WebInspector.TimelineRuler.prototype._dispatchTimeRangeSelectionChangedEvent):
        (WebInspector.TimelineRuler.prototype._timelineMarkerTimeChanged):
        (WebInspector.TimelineRuler.prototype._handleMouseDown): Added.
        (WebInspector.TimelineRuler.prototype._handleMouseMove): Added.
        (WebInspector.TimelineRuler.prototype._handleMouseUp): Added.
        (WebInspector.TimelineRuler.prototype._handleSelectionHandleMouseDown): Added.
        (WebInspector.TimelineRuler.prototype._handleSelectionHandleMouseMove): Added.
        (WebInspector.TimelineRuler.prototype._handleSelectionHandleMouseUp): Added.
        Create selection elements and handle mouse events for drag and move.

2013-12-17  Timothy Hatcher  <timothy@apple.com>

        Support scroll to zoom in TimelineOverview.

        https://bugs.webkit.org/show_bug.cgi?id=125909

        Reviewed by Joseph Pecoraro.

        * UserInterface/TimelineOverview.js:
        (WebInspector.TimelineOverview):
        (WebInspector.TimelineOverview.prototype._handleWheelEvent):

2013-12-17  Timothy Hatcher  <timothy@apple.com>

        Add the start of the TimelineOverview class.

        TimelineOverview currently has a time ruler and tracks the current recording time.

        https://bugs.webkit.org/show_bug.cgi?id=125878

        Reviewed by Joseph Pecoraro.

        * UserInterface/Main.html:
        * UserInterface/TimelineContentView.css:
        (.content-view.timeline > .timeline-overview):
        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView):
        (WebInspector.TimelineContentView.prototype.updateLayout):
        (WebInspector.TimelineContentView.prototype._update):
        (WebInspector.TimelineContentView.prototype._recordingStarted):
        (WebInspector.TimelineContentView.prototype._recordingStopped):
        (WebInspector.TimelineContentView.prototype._recordingReset):
        * UserInterface/TimelineManager.js:
        (WebInspector.TimelineManager.prototype.eventRecorded.processRecord):
        (WebInspector.TimelineManager.prototype.eventRecorded):
        * UserInterface/TimelineMarker.js: Renamed from Source/WebInspectorUI/UserInterface/TimelineEventMarker.js.
        (WebInspector.TimelineMarker):
        (WebInspector.TimelineMarker.prototype.get time):
        (WebInspector.TimelineMarker.prototype.set time):
        (WebInspector.TimelineMarker.prototype.get type):
        * UserInterface/TimelineOverview.css: Added.
        (.timeline-overview > .scroll-container):
        (.timeline-overview > .scroll-container > .timeline-ruler):
        * UserInterface/TimelineOverview.js: Added.
        (WebInspector.TimelineOverview):
        (WebInspector.TimelineOverview.prototype.get element):
        (WebInspector.TimelineOverview.prototype.get startTime):
        (WebInspector.TimelineOverview.prototype.set startTime):
        (WebInspector.TimelineOverview.prototype.get secondsPerPixel):
        (WebInspector.TimelineOverview.prototype.set secondsPerPixel):
        (WebInspector.TimelineOverview.prototype.get endTime):
        (WebInspector.TimelineOverview.prototype.set endTime):
        (WebInspector.TimelineOverview.prototype.addMarker):
        (WebInspector.TimelineOverview.prototype.revealMarker):
        (WebInspector.TimelineOverview.prototype.updateLayout):
        (WebInspector.TimelineOverview.prototype._updateElementWidth):
        (WebInspector.TimelineOverview.prototype._needsLayout):
        * UserInterface/TimelineRecording.js:
        (WebInspector.TimelineRecording.prototype.get startTime):
        (WebInspector.TimelineRecording.prototype.get endTime):
        (WebInspector.TimelineRecording.prototype.reset):
        * UserInterface/TimelineRuler.css:
        (.timeline-ruler > .markers):
        (.timeline-ruler > .markers > .marker):
        (.timeline-ruler > .markers > .marker.current-time):
        (.timeline-ruler > .markers > .marker.current-time::before):
        (.timeline-ruler > .markers > .marker.load-event):
        (.timeline-ruler > .markers > .marker.dom-content-event):
        (.timeline-ruler > .markers > .marker.timestamp):
        * UserInterface/TimelineRuler.js:
        (WebInspector.TimelineRuler):
        (WebInspector.TimelineRuler.prototype.updateLayout):
        (WebInspector.TimelineRuler.prototype._needsLayout):
        (WebInspector.TimelineRuler.prototype._needsMarkerLayout.update):
        (WebInspector.TimelineRuler.prototype._needsMarkerLayout):
        (WebInspector.TimelineRuler.prototype._recalculate):
        (WebInspector.TimelineRuler.prototype._updateLeftPositionOfElement):
        (WebInspector.TimelineRuler.prototype._updateMarkers):
        (WebInspector.TimelineRuler.prototype._timelineMarkerTimeChanged):

2013-12-13  Timothy Hatcher  <timothy@apple.com>

        Clean up and refactor TimelineDecorations into TimelineRuler.

        https://bugs.webkit.org/show_bug.cgi?id=125709

        Reviewed by Joseph Pecoraro.

        * UserInterface/Main.html:
        * UserInterface/OverviewTimelineView.css:
        (.timeline-view.overview > .timeline-ruler):
        (.timeline-view.overview > .timeline-ruler > .header):
        (.timeline-view.overview > .timeline-ruler > .event-markers):
        Updated class names and border sides.

        * UserInterface/OverviewTimelineView.js:
        (WebInspector.OverviewTimelineView):
        (WebInspector.OverviewTimelineView.prototype.updateLayout):
        Call updateLayout on the TimelineRuler.

        * UserInterface/TimelineRuler.css: Renamed from Source/WebInspectorUI/UserInterface/TimelineDecorations.css.
        (.timeline-ruler):
        (.timeline-ruler > .header):
        (.timeline-ruler > .header > .divider):
        (.timeline-ruler > .header > .divider > .label):
        (.timeline-ruler > .event-markers):
        (.timeline-ruler > .event-markers > .event-marker-tooltip):
        (.timeline-ruler > .event-markers > .event-marker):
        (.timeline-ruler > .event-markers > .event-marker.load-event):
        (.timeline-ruler > .event-markers > .event-marker.dom-content-event):
        (.timeline-ruler > .event-markers > .event-marker.timestamp):
        Updated class names and border sides.

        * UserInterface/TimelineRuler.js: Renamed from Source/WebInspectorUI/UserInterface/TimelineDecorations.js.
        (WebInspector.TimelineRuler):
        (WebInspector.TimelineRuler.prototype.get element):
        (WebInspector.TimelineRuler.prototype.get headerElement):
        (WebInspector.TimelineRuler.prototype.get allowsClippedLabels):
        (WebInspector.TimelineRuler.prototype.set allowsClippedLabels):
        (WebInspector.TimelineRuler.prototype.get zeroTime):
        (WebInspector.TimelineRuler.prototype.set zeroTime):
        (WebInspector.TimelineRuler.prototype.get startTime):
        (WebInspector.TimelineRuler.prototype.set startTime):
        (WebInspector.TimelineRuler.prototype.get duration):
        (WebInspector.TimelineRuler.prototype.set duration):
        (WebInspector.TimelineRuler.prototype.get endTime):
        (WebInspector.TimelineRuler.prototype.set endTime):
        (WebInspector.TimelineRuler.prototype.get secondsPerPixel):
        (WebInspector.TimelineRuler.prototype.set secondsPerPixel):
        (WebInspector.TimelineRuler.prototype.updateLayout.removeDividerAndSelectNext):
        (WebInspector.TimelineRuler.prototype.updateLayout):
        (WebInspector.TimelineRuler.prototype._needsLayout):
        (WebInspector.TimelineRuler.prototype._recalculate):
        Refactor so the times are stored on TimelineRuler and not passed in each time an update is needed.
        Support dividers that don't always start at the zero position, allowing a sliding time ruler.
        Support for a non-pinned ruler where the end time is not fixed and the scale is specified in
        seconds-per-pixel.

2014-01-08  Timothy Hatcher  <timothy@apple.com>

        Improve scroll performance of WebInspector.TreeOutlineDataGridSynchronizer.

        https://bugs.webkit.org/show_bug.cgi?id=126660

        Reviewed by Joseph Pecoraro.

        * UserInterface/TreeOutlineDataGridSynchronizer.js:
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeOutlineScrolled):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._dataGridScrolled):
        Ignore scroll events triggered by our internal use of setting scrollTop.

2013-11-15  Timothy Hatcher  <timothy@apple.com>

        Add a synchronized DataGrid to the OverviewTimelineView.

        The DataGrid is synchronized with the sidebar TreeOutline to appear as one when the view
        and sidebar are both showing. The two scroll, expand and collapse in sync when the view
        is showing. When the view is not showing the sidebar can scroll independently.

        https://bugs.webkit.org/show_bug.cgi?id=124429

        Reviewed by Joseph Pecoraro.

        * UserInterface/DataGrid.js:
        (WebInspector.DataGrid):
        (WebInspector.DataGrid.createSortableDataGrid):
        (WebInspector.DataGrid.prototype._copyTextForDataGridNode):
        (WebInspector.DataGridNode.prototype.createCellContent):
        Handle undefined/null cells better by substituting empty strings.

        (WebInspector.DataGridNode.prototype.collapse):
        (WebInspector.DataGridNode.prototype.expand):
        Fire events on the DataGrid for expand and collapse.

        * UserInterface/Main.html: Include TreeOutlineDataGridSynchronizer.js.

        * UserInterface/NavigationSidebarPanel.css:
        (.sidebar > .panel.navigation > .content): Shorten by 1px to match the content view height.
        Needed to keep scrolling in sync. The clipping looks better too.

        * UserInterface/OverviewTimelineView.css:
        (.timeline-view.overview > .data-grid):
        (.timeline-view.overview > .data-grid table.header):
        (.timeline-view.overview > .data-grid .data-container):
        Style the DataGrid to to not have a header.

        * UserInterface/OverviewTimelineView.js:
        (WebInspector.OverviewTimelineView):
        (WebInspector.OverviewTimelineView.prototype.shown):
        (WebInspector.OverviewTimelineView.prototype._addResourceToTreeIfNeeded):
        (WebInspector.OverviewTimelineView.prototype._sourceCodeTimelineAdded):
        Create the DataGrid and some placeholder nodes. Hook up TreeOutlineDataGridSynchronizer.

        * UserInterface/TimelineContentView.css:
        (.content-view.timeline > .view-container > .timeline-view > .data-grid td):
        (.content-view.timeline > .view-container > .timeline-view > .data-grid table.data):
        Style the DataGrid to match the height of TreeElements in the sidebar.

        * UserInterface/TimelineSidebarPanel.css:
        (.sidebar > .panel.timeline.timeline-content-view-showing > .content):
        Hide the scrollbar off the right when the view is showing. The view will show the scrollbar.

        * UserInterface/TimelineSidebarPanel.js:
        (WebInspector.TimelineSidebarPanel):
        (WebInspector.TimelineSidebarPanel.prototype._timelinesTreeElementSelected):
        (WebInspector.TimelineSidebarPanel.prototype._contentBrowserCurrentContentViewDidChange):

        * UserInterface/TreeOutline.js:
        (TreeOutline.prototype.removeChildAtIndex):
        (TreeOutline.prototype.removeChildren):
        (TreeOutline.prototype.removeChildrenRecursive):
        (TreeElement.prototype.set hidden):
        Add event callbacks for onhidden and onremove.

        * UserInterface/TreeOutlineDataGridSynchronizer.js: Added.
        (WebInspector.TreeOutlineDataGridSynchronizer):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype.associate):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype.synchronize):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeOutlineScrolled):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._dataGridScrolled):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._dataGridNodeSelected):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._dataGridNodeExpanded):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._dataGridNodeCollapsed):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementSelected):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementAdded):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementRemoved):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementExpanded):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementCollapsed):
        (WebInspector.TreeOutlineDataGridSynchronizer.prototype._treeElementHiddenChanged):

2013-11-07  Timothy Hatcher  <timothy@apple.com>

        Start fleshing out the Overview Timeline view.

        This gets the overview populating in the Timeline sidebar. The graph side is still empty.

        https://bugs.webkit.org/show_bug.cgi?id=124005

        Reviewed by Joseph Pecoraro.

        * Localizations/en.lproj/localizedStrings.js: Updated.
        * UserInterface/Frame.js:
        (WebInspector.Frame.prototype.addResource):
        * UserInterface/Images/TimelineRecordAnimation.svg: Added.
        * UserInterface/Images/TimelineRecordEvent.svg: Added.
        * UserInterface/Images/TimelineRecordLayout.svg: Added.
        * UserInterface/Images/TimelineRecordPaint.svg: Added.
        * UserInterface/Images/TimelineRecordScriptEvaluated.svg: Added.
        * UserInterface/Images/TimelineRecordStyle.svg: Added.
        * UserInterface/Images/TimelineRecordTimer.svg: Added.
        * UserInterface/Main.html:
        * UserInterface/OverviewTimelineView.js: Added.
        (WebInspector.OverviewTimelineView):
        (WebInspector.OverviewTimelineView.prototype.get navigationSidebarTreeOutlineLabel):
        (WebInspector.OverviewTimelineView.prototype._childFrameWasAdded):
        (WebInspector.OverviewTimelineView.prototype._mainResourceDidChange):
        (WebInspector.OverviewTimelineView.prototype._provisionalResourceWasAdded):
        (WebInspector.OverviewTimelineView.prototype._resourceWasAdded):
        (WebInspector.OverviewTimelineView.prototype._compareTreeElementsByDetails):
        (WebInspector.OverviewTimelineView.prototype._compareTreeElementsByStartTime):
        (WebInspector.OverviewTimelineView.prototype._insertTreeElement):
        (WebInspector.OverviewTimelineView.prototype._addResourceToTreeIfNeeded):
        (WebInspector.OverviewTimelineView.prototype._sourceCodeTimelineAdded):
        (WebInspector.OverviewTimelineView.prototype._treeElementSelected):
        * UserInterface/SourceCodeTimelineTreeElement.js: Added.
        (WebInspector.SourceCodeTimelineTreeElement):
        (WebInspector.SourceCodeTimelineTreeElement.prototype.get sourceCodeTimeline):
        * UserInterface/TimelineContentView.js:
        (WebInspector.TimelineContentView.createPathComponent):
        (WebInspector.TimelineContentView):
        (WebInspector.TimelineContentView.prototype.showOverviewTimelineView):
        (WebInspector.TimelineContentView.prototype.showTimelineView):
        (WebInspector.TimelineContentView.prototype.get supportsSplitContentBrowser):
        (WebInspector.TimelineContentView.prototype.get selectionPathComponents):
        (WebInspector.TimelineContentView.prototype._pathComponentSelected):
        (WebInspector.TimelineContentView.prototype._showTimelineView):
        (WebInspector.TimelineContentView.prototype._recordingReset):
        * UserInterface/TimelineIcons.css:
        (.style-record .icon): Added.
        (.layout-record .icon): Added.
        (.paint-record .icon): Added.
        (.evaluated-record .icon): Added.
        (.event-record .icon): Added.
        (.timer-record .icon): Added.
        (.animation-record .icon): Added.
        * UserInterface/TimelineView.css: Added.
        (.timeline-view):
        * UserInterface/TimelineView.js: Added.
        (WebInspector.TimelineView):
        (WebInspector.TimelineView.prototype.get navigationSidebarTreeOutline):
        (WebInspector.TimelineView.prototype.get navigationSidebarTreeOutlineLabel):
        (WebInspector.TimelineView.prototype.reset):
        (WebInspector.TimelineView.prototype.shown):
        (WebInspector.TimelineView.prototype.hidden):

2013-11-07  Timothy Hatcher  <timothy@apple.com>

        Start fleshing out the new TimelineSidebarPanel and TimelineContentView.

        https://bugs.webkit.org/show_bug.cgi?id=124003

        Reviewed by Joseph Pecoraro.

        * UserInterface/ContentView.js:
        (WebInspector.ContentView):
        (WebInspector.ContentView.isViewable):
        * UserInterface/FrameContentView.js:
        * UserInterface/Images/CloseTimeline.png: Added.
        * UserInterface/Images/CloseTimeline@2x.png: Added.
        * UserInterface/Images/ColorsLarge.png: Added.
        * UserInterface/Images/ColorsLarge@2x.png: Added.
        * UserInterface/Images/NetworkLarge.png: Added.
        * UserInterface/Images/NetworkLarge@2x.png: Added.
        * UserInterface/Images/ScriptLarge.png: Added.
        * UserInterface/Images/ScriptLarge@2x.png: Added.
        * UserInterface/Main.html:
        * UserInterface/Main.js:
        (WebInspector.sidebarPanelForRepresentedObject):
        (WebInspector._revealAndSelectRepresentedObjectInNavigationSidebar):
        * UserInterface/NavigationSidebarPanel.js:
        (WebInspector.NavigationSidebarPanel.prototype.showDefaultContentView):
        * UserInterface/ResourceClusterContentView.js:
        * UserInterface/TimelineContentView.css: Added.
        (.content-view.timeline > .view-container):
        * UserInterface/TimelineContentView.js: Added.
        (WebInspector.TimelineContentView):
        * UserInterface/TimelineIcons.css: Renamed from Source/WebInspectorUI/UserInterface/InstrumentIcons.css.
        (.network-icon.large .icon): Added.
        (.colors-icon.large .icon): Added.
        (.script-icon.large .icon): Added.
        * UserInterface/TimelineSidebarPanel.css:
        (.sidebar > .panel.timeline > .navigation-bar):
        (.sidebar > .panel.timeline > .title-bar):
        (.sidebar > .panel.timeline > .title-bar.timelines):
        (.sidebar > .panel.timeline > .title-bar.timeline-events):
        (.sidebar > .panel.timeline > .timelines-content):
        (.sidebar > .panel.timeline > .timelines-content .close-button):
        (.sidebar > .panel.timeline > .timelines-content li.item.selected .close-button):
        (.sidebar > .panel.timeline > .timelines-content .close-button:active):
        (.sidebar > .panel.timeline > .content):
        * UserInterface/TimelineSidebarPanel.js:
        (WebInspector.TimelineSidebarPanel.createTimelineTreeElement):
        (WebInspector.TimelineSidebarPanel):
        (WebInspector.TimelineSidebarPanel.prototype.showDefaultContentView):
        (WebInspector.TimelineSidebarPanel.prototype.treeElementForRepresentedObject):
        (WebInspector.TimelineSidebarPanel.prototype.get contentTreeOutlineLabel):
        (WebInspector.TimelineSidebarPanel.prototype.set contentTreeOutlineLabel):
        (WebInspector.TimelineSidebarPanel.prototype.showTimelineOverview):
        (WebInspector.TimelineSidebarPanel.prototype.showTimelineView):
        (WebInspector.TimelineSidebarPanel.prototype._timelinesTreeElementSelected):

2014-01-08  Timothy Hatcher  <timothy@apple.com>

        Correctly track time bounds of WebInspector.Timeline and WebInspector.TimelineRecording.

        The startTime and endTime were not correct when Network timeline needed to be taken into
        account (due to its dynamic loading nature.) This creates a network Timeline for the purposes
        of tracking the ResourceTimelineRecords and getting accurate start and end times.

        Also changes the way TimelineRecord tracks the inactive portion of time, needed for later
        work on the timeline graphs.

        https://bugs.webkit.org/show_bug.cgi?id=126676

        Reviewed by Joseph Pecoraro.

        * UserInterface/ResourceTimelineRecord.js:
        (WebInspector.ResourceTimelineRecord.prototype.get updatesDynamically):
        (WebInspector.ResourceTimelineRecord.prototype.get usesActiveStartTime):
        (WebInspector.ResourceTimelineRecord.prototype.get startTime):
        (WebInspector.ResourceTimelineRecord.prototype.get activeStartTime):
        (WebInspector.ResourceTimelineRecord.prototype.get endTime):
        * UserInterface/Timeline.js:
        (WebInspector.Timeline):
        (WebInspector.Timeline.prototype.get startTime):
        (WebInspector.Timeline.prototype.get endTime):
        (WebInspector.Timeline.prototype.addRecord):
        (WebInspector.Timeline.prototype._updateTimesIfNeeded):
        (WebInspector.Timeline.prototype._recordUpdated):
        * UserInterface/TimelineRecord.js:
        (WebInspector.TimelineRecord.prototype.get startTime):
        (WebInspector.TimelineRecord.prototype.get activeStartTime):
        (WebInspector.TimelineRecord.prototype.get endTime):
        (WebInspector.TimelineRecord.prototype.get inactiveDuration):
        (WebInspector.TimelineRecord.prototype.get activeDuration):
        (WebInspector.TimelineRecord.prototype.get updatesDynamically):
        (WebInspector.TimelineRecord.prototype.get usesActiveStartTime):
        * UserInterface/TimelineRecording.js:
        (WebInspector.TimelineRecording.prototype._timelineTimesUpdated):

2013-10-25  Timothy Hatcher  <timothy@apple.com>

        Implement TimelineRecording and per-call-site timelines.

        Keep track of timeline records per global timeline and per source code location.
        This will be used to display them in the UI in later patches.

        https://bugs.webkit.org/show_bug.cgi?id=123367

        Reviewed by Joseph Pecoraro.

        * UserInterface/Main.html:
        * UserInterface/SourceCodeTimeline.js: Added.
        (WebInspector.SourceCodeTimeline):
        (WebInspector.SourceCodeTimeline.prototype.get sourceCode):
        (WebInspector.SourceCodeTimeline.prototype.get sourceCodeLocation):
        (WebInspector.SourceCodeTimeline.prototype.get recordType):
        (WebInspector.SourceCodeTimeline.prototype.get recordEventType):
        * UserInterface/Timeline.js: Added.
        (WebInspector.Timeline):
        (WebInspector.Timeline.prototype.get records):
        (WebInspector.Timeline.prototype.addRecord):
        * UserInterface/TimelineRecording.js:
        (WebInspector.TimelineRecording):
        (WebInspector.TimelineRecording.prototype.get timelines): Added.
        (WebInspector.TimelineRecording.prototype.sourceCodeTimelinesForSourceCode): Added.
        (WebInspector.TimelineRecording.prototype.addEventMarker): Implemented.
        (WebInspector.TimelineRecording.prototype.addRecord): Implemented.
        (WebInspector.TimelineRecording.prototype._keyForRecord): Added.

2013-10-25  Timothy Hatcher  <timothy@apple.com>

        Add support for multiple Timeline recordings.

        We also don't explicitly add ResourceTimelineRecords anymore. These will be tracked automatically in a later patch.

        https://bugs.webkit.org/show_bug.cgi?id=123366

        Reviewed by Joseph Pecoraro.

        * UserInterface/DashboardManager.js:
        (WebInspector.DashboardManager.prototype._mainResourceDidChange): Check for currentRecording.
        * UserInterface/InspectorFrontendAPI.js:
        (InspectorFrontendAPI.isTimelineProfilingEnabled): Check for currentRecording.
        * UserInterface/Main.html:
        * UserInterface/TimelineManager.js:
        (WebInspector.TimelineManager):
        (WebInspector.TimelineManager.prototype.get currentRecording): Added.
        (WebInspector.TimelineManager.prototype.startRecording): Make a new recording and push it onto the recording array.
        Add the current recording to the event.
        (WebInspector.TimelineManager.prototype.stopRecording): Add the current recording to the event.
        (WebInspector.TimelineManager.prototype.eventRecorded.processRecord): Check for currentRecording. Add the markers
        to the current recording.
        (WebInspector.TimelineManager.prototype._addRecord): Add the record to the current recording.
        (WebInspector.TimelineManager.prototype._startAutoRecording): Clean up. Don't add ResourceTimelineRecord. Clear recordings.
        (WebInspector.TimelineManager.prototype._stopAutoRecordingSoon): Check for _currentRecording.
        (WebInspector.TimelineManager.prototype._resetAutoRecordingDeadTimeTimeout): Ditto.
        (WebInspector.TimelineManager.prototype._mainResourceDidChange): Don't add ResourceTimelineRecord anymore.
        (WebInspector.TimelineManager.prototype._resourceWasAdded): Removed.
        * UserInterface/TimelineRecording.js: Added.
        (WebInspector.TimelineRecording): Added.
        (WebInspector.TimelineRecording.prototype.addEventMarker): Added.
        (WebInspector.TimelineRecording.prototype.addRecord): Added.

2013-10-25  Timothy Hatcher  <timothy@apple.com>

        Track callFrames and sourceCodeLocation per TimelineRecord.

        https://bugs.webkit.org/show_bug.cgi?id=123359

        Reviewed by Joseph Pecoraro.

        * UserInterface/LayoutTimelineRecord.js:
        (WebInspector.LayoutTimelineRecord): Pass callFrames and sourceCodeLocation to superclass.
        * UserInterface/ScriptTimelineRecord.js:
        (WebInspector.ScriptTimelineRecord): Pass callFrames and sourceCodeLocation to superclass.
        * UserInterface/TimelineManager.js:
        (WebInspector.TimelineManager.prototype.eventRecorded.processRecord): Add "Payload" suffix to better track what is a protocol object.
        Pass the callFrames and sourceCodeLocation to all the new TimelineRecords.
        (WebInspector.TimelineManager.prototype.eventRecorded): Add "Payload" suffix.
        * UserInterface/TimelineRecord.js:
        (WebInspector.TimelineRecord):
        (WebInspector.TimelineRecord.prototype.get callFrames): Added.
        (WebInspector.TimelineRecord.prototype.get initiatorCallFrame): Added.
        (WebInspector.TimelineRecord.prototype.get sourceCodeLocation): Added.

2013-10-25  Timothy Hatcher  <timothy@apple.com>

        Change how the load and content ready event timestamps are tracked.

        https://bugs.webkit.org/show_bug.cgi?id=123356

        Reviewed by Joseph Pecoraro.

        * UserInterface/DashboardManager.js:
        (WebInspector.DashboardManager.prototype._updateTime): Use the timestamps on the main frame.
        * UserInterface/Frame.js:
        (WebInspector.Frame):
        (WebInspector.Frame.prototype.get domContentReadyEventTimestamp): Added.
        (WebInspector.Frame.prototype.get loadEventTimestamp): Added.
        (WebInspector.Frame.prototype.markDOMContentReadyEvent): Added.
        (WebInspector.Frame.prototype.markLoadEvent): Added.
        * UserInterface/TimelineManager.js:
        (WebInspector.TimelineManager.prototype.eventRecorded.processRecord): Use markLoadEvent and markDOMContentReadyEvent.
        Do it for all frames, not just the main frame.
        (WebInspector.TimelineManager.prototype.pageDidLoad): Call markLoadEvent on the Frame.

2013-10-25  Timothy Hatcher  <timothy@apple.com>

        Remove a lot of the current Timelines code to make room for a new implementation.

        https://bugs.webkit.org/show_bug.cgi?id=123368

        Reviewed by Joseph Pecoraro.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/ContentView.js:
        (WebInspector.ContentView):
        (WebInspector.ContentView.isViewable):
        * UserInterface/DashboardView.js:
        (WebInspector.DashboardView.prototype._networkItemWasClicked):
        * UserInterface/InspectorFrontendAPI.js:
        (InspectorFrontendAPI.setTimelineProfilingEnabled):
        (InspectorFrontendAPI.stopProfilingJavaScript):
        * UserInterface/InstrumentSidebarPanel.js: Removed.
        * UserInterface/Main.html:
        * UserInterface/Main.js:
        (WebInspector.contentLoaded):
        (WebInspector.sidebarPanelForRepresentedObject):
        (WebInspector.openURL):
        * UserInterface/Object.js:
        (WebInspector.Object.addEventListener):
        * UserInterface/TimelineManager.js:
        (WebInspector.TimelineManager):
        (WebInspector.TimelineManager.prototype.startRecording):
        (WebInspector.TimelineManager.prototype.eventRecorded.processRecord):
        (WebInspector.TimelineManager.prototype.eventRecorded):
        (WebInspector.TimelineManager.prototype.objectForCookie):
        (WebInspector.TimelineManager.prototype._addRecord):
        * UserInterface/TimelinesObject.js: Removed.
        * UserInterface/TimelineOverview.css: Removed.
        * UserInterface/TimelineOverview.js: Removed.
        * UserInterface/TimelineSidebarPanel.css: Added.
        * UserInterface/TimelineSidebarPanel.js: Added.
        (WebInspector.TimelineSidebarPanel):
        * UserInterface/TimelinesContentView.css: Removed.
        * UserInterface/TimelinesContentView.js: Removed.

2014-01-20  Timothy Hatcher  <timothy@apple.com>

        Fix jumping to a text position when showing a resource.

        https://bugs.webkit.org/show_bug.cgi?id=127271

        Reviewed by Joseph Pecoraro.

        * UserInterface/FrameContentView.js:
        (WebInspector.FrameContentView.prototype.showSourceCode): Just use showResponse's arguments
        which already does the same logic to call revealPosition.
        * UserInterface/ResourceClusterContentView.js:
        (WebInspector.ResourceClusterContentView.prototype.restoreFromCookie): This was the bug.
        lineNumber and columnNumber need honored here. They were only honored by FrameContentView.
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype.showSourceCode): Use showContentViewForRepresentedObject
        which also accepts a cookie and handles creating the content view for us.

2014-01-16  Brian Burg  <bburg@apple.com>

        Web Inspector: add more context to Object.addEventListener assertions
        https://bugs.webkit.org/show_bug.cgi?id=127125

        Reviewed by Joseph Pecoraro.

        Log invalid event type and listener parameters, and log the other
        parameters so the callsite is easier to figure out.

        * UserInterface/Object.js:
        (WebInspector.Object.addEventListener):

2014-01-16  Brian Burg  <bburg@apple.com>

        Web Inspector: CallFrame is missing saveIdentityToCookie, or should be excluded
        https://bugs.webkit.org/show_bug.cgi?id=126791

        Reviewed by Timothy Hatcher.

        * UserInterface/CallFrame.js: Add a dummy saveIdentityToCookie() implementation.

2014-01-16  Brian Burg  <bburg@apple.com>

        Web Inspector: add probe breakpoint action to popup breakpoint editor
        https://bugs.webkit.org/show_bug.cgi?id=126931

        Reviewed by Timothy Hatcher.

        Add probes to the breakpoint action dropdown.
        Reuse the "evaluate JavaScript" input UI.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/BreakpointAction.js:
        * UserInterface/BreakpointActionView.js:
        (WebInspector.BreakpointActionView.displayStringForType):
        (WebInspector.BreakpointActionView.prototype._updateBody.switch.break):

2014-01-15  Brian Burg  <bburg@apple.com>

        Web Inspector: capture probe samples on the backend
        https://bugs.webkit.org/show_bug.cgi?id=126668

        Reviewed by Joseph Pecoraro.

        * UserInterface/InspectorJSBackendCommands.js: Add probe enumeration value.

2014-01-15  Andreas Kling  <akling@apple.com>

        Remove the CSS selector profiler.
        <https://webkit.org/b/127039>

        Purge selector profiler code from the new Web Inspector UI.

        Reviewed by Sam Weinig.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/CSSSelectorProfileObject.js: Removed.
        * UserInterface/CSSSelectorProfileType.js: Removed.
        * UserInterface/CSSSelectorProfileView.js: Removed.
        * UserInterface/ContentView.js:
        (WebInspector.ContentView):
        (WebInspector.ContentView.isViewable):
        * UserInterface/InspectorWebBackendCommands.js:
        * UserInterface/InstrumentSidebarPanel.js:
        (WebInspector.InstrumentSidebarPanel):
        (WebInspector.InstrumentSidebarPanel.prototype._recordProfileGlyphMousedOver):
        (WebInspector.InstrumentSidebarPanel.prototype._recordProfileGlyphMousedDown):
        (WebInspector.InstrumentSidebarPanel.prototype._recordProfileGlyphClicked):
        (WebInspector.InstrumentSidebarPanel.prototype._profileTypeWasSelected):
        (WebInspector.InstrumentSidebarPanel.prototype._profilesCleared):
        * UserInterface/Main.html:
        * UserInterface/ProfileManager.js:
        (WebInspector.ProfileManager):
        (WebInspector.ProfileManager.prototype.initialize):
        (WebInspector.ProfileManager.prototype._checkForInterruptions):
        (WebInspector.ProfileManager.prototype._attemptToResumeProfiling):
        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj:
        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj.filters:

2014-01-13  Timothy Hatcher  <timothy@apple.com>

        Snap time dividers to nearest numbers instead of just dividing the time span into max density slices.

        https://bugs.webkit.org/show_bug.cgi?id=125081

        Reviewed by Joseph Pecoraro.

        * UserInterface/TimelineDecorations.js:
        (WebInspector.TimelineDecorations.prototype.updateHeaderTimes): Snap the time slice to a nearest number.
        (WebInspector.TimelineDecorations.prototype.updateEventMarkers): Rename boundarySpan to timeSpan.

2014-01-10  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Remove unimplemented or static ScriptDebugServer features
        https://bugs.webkit.org/show_bug.cgi?id=126784

        Reviewed by Timothy Hatcher.

        * UserInterface/InspectorJSBackendCommands.js:
        * UserInterface/InspectorWebBackendCommands.js:
        * UserInterface/Legacy/6.0/InspectorWebBackendCommands.js:
        * UserInterface/Legacy/7.0/InspectorWebBackendCommands.js:
        * Versions/Inspector-iOS-6.0.json:
        * Versions/Inspector-iOS-7.0.json:

2014-01-10  Timothy Hatcher  <timothy@apple.com>

        Web Inspector: support negative numbers in secondsToString and bytesToString.

        https://bugs.webkit.org/show_bug.cgi?id=125708

        Reviewed by Joseph Pecoraro.

        * UserInterface/Utilities.js:
        (Number.secondsToString): Use Math.abs in the size checks.
        (Number.bytesToString): Ditto.

2014-01-10  Brian Burg  <bburg@apple.com>

        Web Inspector: cycle clicked breakpoints between enabled, auto-continue, and disabled
        https://bugs.webkit.org/show_bug.cgi?id=126669

        Reviewed by Joseph Pecoraro.

        It's time-consuming to change a breakpoint's auto-continue setting through the
        breakpoint editor popup. This patch enables the user to toggle between enabled,
        auto-continue, and disabled by clicking on the breakpoint wedge in the sidebar
        tree and in the source text editor gutter. The auto-continue option is only
        cycled when the breakpoint has associated actions.

        Clean up the breakpoint editor dialog so it hides irrelevant options when
        no breakpoint actions have been added.

        Automatically unset auto-continue when the last breakpoint action is removed.

        Rename the delegate textEditorBreakpointToggled to textEditorBreakpointClicked, since
        the behavior of the click depends on breakpoint state not available in the text editor.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/Breakpoint.js:
        (WebInspector.Breakpoint.prototype.cycleToNextMode): Added.
        (WebInspector.Breakpoint.prototype.toggleAutoContinue): Added.
        (WebInspector.Breakpoint.prototype.appendContextMenuItems): Add auto-continue options.
        (WebInspector.Breakpoint.prototype.removeAction):

        (WebInspector.Breakpoint.prototype._editBreakpointPopoverContentElement):
        (WebInspector.Breakpoint.prototype._popoverActionsAddActionButtonClicked):
        (WebInspector.Breakpoint.prototype.breakpointActionViewAppendActionView):
        (WebInspector.Breakpoint.prototype.breakpointActionViewRemoveActionView):
        (WebInspector.Breakpoint.prototype.willDismissPopover):
        * UserInterface/BreakpointTreeElement.css:
        (.item.breakpoint .status > .status-image.auto-continue):
        (.item.breakpoint .status > .status-image.disabled):
        * UserInterface/BreakpointTreeElement.js:
        (WebInspector.BreakpointTreeElement):
        (WebInspector.BreakpointTreeElement.prototype.onenter):
        (WebInspector.BreakpointTreeElement.prototype.onspace):
        (WebInspector.BreakpointTreeElement.prototype._updateStatus):
        (WebInspector.BreakpointTreeElement.prototype._breakpointLocationDidChange):
        (WebInspector.BreakpointTreeElement.prototype._statusImageElementClicked):
        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor):
        (WebInspector.SourceCodeTextEditor.prototype.close):
        (WebInspector.SourceCodeTextEditor.prototype._breakpointInfoForBreakpoint):
        (WebInspector.SourceCodeTextEditor.prototype.textEditorBreakpointClicked):
        * UserInterface/TextEditor.css:
        (.text-editor > .CodeMirror .breakpoint-auto-continue:not(.breakpoint-disabled) .CodeMirror-linenumber::before):
        * UserInterface/TextEditor.js:
        (WebInspector.TextEditor.prototype._setBreakpointStylesOnLine.updateStyles):
        (WebInspector.TextEditor.prototype._setBreakpointStylesOnLine):
        (WebInspector.TextEditor.prototype.updateStyles):
        (WebInspector.TextEditor.prototype._removeBreakpointFromLineAndColumn):
        (WebInspector.TextEditor.prototype._documentMouseUp):

2014-01-10  Timothy Hatcher  <timothy@apple.com>

        Clean up some areas of TreeOutline.

        https://bugs.webkit.org/show_bug.cgi?id=123924

        Reviewed by Joseph Pecoraro.

        * UserInterface/TreeOutline.js:
        (TreeOutline.prototype.appendChild): Don't force create _childrenListNode, it will be created
        when the tree element is expanded. Only attach if _childrenListNode already exists.
        (TreeOutline.prototype.insertChild): Ditto.
        (TreeOutline.prototype.getCachedTreeElement): Check the value of __treeElementIdentifier
        not just the existence of the property. It should never be null/undefined/0, but be safe.
        (TreeOutline.prototype.findTreeElement): Null check isAncestor, it isn't required.

2014-01-10  Timothy Hatcher  <timothy@apple.com>

        Fix an exception in WebInspector.Color.

        https://bugs.webkit.org/show_bug.cgi?id=126765

        Reviewed by Joseph Pecoraro.

        * UserInterface/Color.js:
        (WebInspector.Color.fromString): Check hasOwnPrperty before using the nickname color array.
        (WebInspector.Color.prototype._toNicknameString): Ditto.

2014-01-10  Joseph Pecoraro  <pecoraro@apple.com>

        [CSS Blending] Log blending as a layer creation reason in the WI
        https://bugs.webkit.org/show_bug.cgi?id=126159

        Reviewed by Timothy Hatcher.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/LayerTreeSidebarPanel.js:
        (WebInspector.LayerTreeSidebarPanel.prototype._populateListOfCompositingReasons):

2014-01-10  Peter Molnar  <pmolnar.u-szeged@partner.samsung.com>

        Add missing function stub in InspectorFrontendHostStub.js
        https://bugs.webkit.org/show_bug.cgi?id=126745

        Reviewed by Timothy Hatcher.

        * UserInterface/InspectorFrontendHostStub.js:
        (.WebInspector.InspectorFrontendHostStub.prototype.debuggableType):
        The function debuggableType() was added to InspectorFrontendHost.idl and InspectorFrontendHost.cpp
        in r160887, but not to InspectorFrontendHostStub.js.

2014-01-09  Seokju Kwon  <seokju@webkit.org>

        Web Inspector: Remove unused overriding protocols.
        https://bugs.webkit.org/show_bug.cgi?id=126630

        Reviewed by Timothy Hatcher.

        Update InspectorWebBackendCommands.js after removing unused overriding protocols.

        * UserInterface/InspectorWebBackendCommands.js:
        * UserInterface/Legacy/6.0/InspectorWebBackendCommands.js:
        * UserInterface/Legacy/7.0/InspectorWebBackendCommands.js:
        * Versions/Inspector-iOS-6.0.json:
        * Versions/Inspector-iOS-7.0.json:

2014-01-07  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Typo "clipboarPrefixString"
        https://bugs.webkit.org/show_bug.cgi?id=126595

        Reviewed by Sam Weinig.

        * UserInterface/ConsoleCommandResult.js:
        (WebInspector.ConsoleCommandResult.prototype.toMessageElement):
        (WebInspector.ConsoleCommandResult.prototype.get clipboardPrefixString):
        * UserInterface/ConsoleMessageImpl.js:
        (WebInspector.ConsoleMessageImpl.prototype.get clipboardPrefixString):
        (WebInspector.ConsoleMessageImpl.prototype.toClipboardString):

2014-01-06  Seokju Kwon  <seokju@webkit.org>

        Web Inspector: Remove canOverrideDeviceMetrics and setDeviceMetricsOverride from protocol
        https://bugs.webkit.org/show_bug.cgi?id=126149

        Reviewed by Joseph Pecoraro.

        * UserInterface/InspectorWebBackendCommands.js: Remove unused codes.
        * UserInterface/Legacy/6.0/InspectorWebBackendCommands.js: Ditto.
        * UserInterface/Legacy/7.0/InspectorWebBackendCommands.js: Ditto.
        * Versions/Inspector-iOS-6.0.json: Ditto.
        * Versions/Inspector-iOS-7.0.json: Ditto.

2014-01-06  Seokju Kwon  <seokju@webkit.org>

        Web Inspector: Remove support for FileSystem in Frontend.
        https://bugs.webkit.org/show_bug.cgi?id=126369

        Reviewed by Joseph Pecoraro.

        Update InspectorWebBackendCommands after removing 'FileSystem' domain.

        * UserInterface/InspectorWebBackendCommands.js:
        * UserInterface/Legacy/6.0/InspectorWebBackendCommands.js:
        * UserInterface/Legacy/7.0/InspectorWebBackendCommands.js:
        * Versions/Inspector-iOS-6.0.json:
        * Versions/Inspector-iOS-7.0.json:

2014-01-06  Seokju Kwon  <seokju@webkit.org>

        Web Inspector: Get rid of DOM.setFileInputFiles from Protocol
        https://bugs.webkit.org/show_bug.cgi?id=126312

        Reviewed by Joseph Pecoraro.

        Update InspectorWebBackendCommands.js after removing DOM.setFileInputFiles.

        * UserInterface/InspectorWebBackendCommands.js:

2013-12-22  Martin Robinson  <mrobinson@igalia.com>

        [GTK][CMake] Integrate GResource for inspector files (and others?)
        https://bugs.webkit.org/show_bug.cgi?id=125569

        Reviewed by Gustavo Noronha Silva.

        * GNUmakefile.am: Use the new generation script instead of generating with
        shell scripting in the makefile.

2013-12-19  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Frontend Error when selecting Database folder in Resources Sidebar
        https://bugs.webkit.org/show_bug.cgi?id=126029

        Reviewed by Timothy Hatcher.

        Treat the DatabaseHostTreeElement tree element like a folder. It pretty much
        is a folder, but inherits from StorageTreeElement to share some code there.

        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype._treeElementSelected):

2013-12-19  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Uncaught Exception: NavigationSidebarPanel.js: TypeError: undefined is not a function
        https://bugs.webkit.org/show_bug.cgi?id=126018

        Reviewed by Timothy Hatcher.

        ERROR: TypeError: undefined is not a function (evaluating 'representedObject.saveIdentityToCookie(candidateObjectCookie)')

        There are some TreeElements (Folders, and the special Databases Folder)
        which do not have a represented object, and would throw an exception
        when trying to use saveIdentityToCookie.

        We should always provide a saveIdentityToCookie when possible. So just
        blacklist the tree element types we know do not have representedObjects,
        and where we don't want to save identity. This will continue to throw
        exceptions in the future for tree elements that don't have the save
        function implemented, but should.

        Note that even if a TreeElement is constructed with a null represented
        object, it becomes an empty object (representedObject || {}).

        * UserInterface/NavigationSidebarPanel.js:
        (WebInspector.NavigationSidebarPanel.prototype.saveStateToCookie):
        (WebInspector.NavigationSidebarPanel.prototype._isTreeElementWithoutRepresentedObject):
        (WebInspector.NavigationSidebarPanel.prototype.treeElementMatchesCookie):
        (WebInspector.NavigationSidebarPanel.prototype._checkElementsForPendingViewStateCookie):

2013-12-19  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Add InspectorFrontendHost.debuggableType to let the frontend know it's backend is JavaScript or Web
        https://bugs.webkit.org/show_bug.cgi?id=126016

        Reviewed by Timothy Hatcher.

        * UserInterface/LoadInspectorBackendCommands.js:
        If the debuggable target is "web" load both JS and Web backend commands.
        Otherwise, we only load the default, js backend commands.

2013-12-16  Alex Christensen  <achristensen@webkit.org>

        Fixed Win64 build on VS2013.
        https://bugs.webkit.org/show_bug.cgi?id=125753

        Reviewed by Brent Fulgham.

        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj:
        Added 64-bit configuration.

2013-12-13  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Move Inspector and Debugger protocol domains into JavaScriptCore
        https://bugs.webkit.org/show_bug.cgi?id=125707

        Reviewed by Timothy Hatcher.

        * UserInterface/InspectorJSBackendCommands.js:
        * UserInterface/InspectorWebBackendCommands.js:
        Regenerate now that domains have moved around.

2013-12-13  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Exception: TypeError: undefined is not a function (evaluating 'marker.find()')
        https://bugs.webkit.org/show_bug.cgi?id=125724

        Reviewed by Darin Adler.

        * UserInterface/CSSStyleDeclarationTextEditor.js:
        (WebInspector.CSSStyleDeclarationTextEditor.prototype.):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype._createColorSwatches):
        The callback changed to returning WebInspector.TextMarkers, however
        this class expected a raw CodeMirror marker. Since this class knows
        about CodeMirror and expects to access these markers later go
        directly to the CodeMirror marker.

2013-12-13  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Add Inspector Code Generation to JavaScriptCore for Runtime Domain
        https://bugs.webkit.org/show_bug.cgi?id=125595

        Reviewed by Timothy Hatcher.

        * Scripts/copy-user-interface-resources.sh:
        Copy all the different backend commands files.

        * Scripts/update-InspectorBackendCommands.rb:
        Update with respect to new script location and new file names.

        * WebInspectorUI.xcodeproj/project.pbxproj:
        Remove Inputs and Outputs of build phase, which were wrong.
        Now this build phase always runs, and not by accident.

        * UserInterface/InspectorJSBackendCommands.js: Added.
        * UserInterface/InspectorWebBackendCommands.js: Renamed from Source/WebInspectorUI/UserInterface/InspectorBackendCommands.js.
        * UserInterface/Legacy/6.0/InspectorWebBackendCommands.js: Renamed from Source/WebInspectorUI/UserInterface/Legacy/6.0/InspectorBackendCommands.js.
        * UserInterface/Legacy/7.0/InspectorWebBackendCommands.js: Renamed from Source/WebInspectorUI/UserInterface/Legacy/7.0/InspectorBackendCommands.js.
        * UserInterface/LoadInspectorBackendCommands.js:
        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj:
        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj.filters:

2013-12-13  Antoine Quint  <graouts@apple.com>

        Web Inspector: provide an abstraction for CodeMirror's TextMarker
        https://bugs.webkit.org/show_bug.cgi?id=125695

        Reviewed by Timothy Hatcher.

        Introduce a new WebInspector.TextMarker class which is used by code with CodeMirror knowledge
        to return information related to text markers to objects that should have no direct knowledge
        of CodeMirror. Start using this class in TextEditor and SourceCodeTextEditor to remove the
        last remaining pieces of CodeMirror knowledge added to SourceCodeTextEditor to fix
        https://webkit.org/b/124364.

        * UserInterface/CodeMirrorAdditions.js:
        Stop using __markedColor to identify a color marker and instead use the type on the matching
        WebInspector.TextMarker. Additionally, create a WebInspector.TextMarker with type
        WebInspector.TextMarker.Type.Color in createColorMarkers().
        
        * UserInterface/CodeMirrorColorEditingController.js:
        (WebInspector.CodeMirrorColorEditingController):
        Use a WebInspector.TextRange to track the edited range and obtain it directly from the
        WebInspector.TextMaker used to instantiate the object. We also use the new "text" public
        property to create the color.

        (WebInspector.CodeMirrorColorEditingController.prototype.set color):
        Simply assing the serialized color to the new "text" public property.

        (WebInspector.CodeMirrorColorEditingController.prototype.get text):
        (WebInspector.CodeMirrorColorEditingController.prototype.set text):
        New public property to set get and set the text for the edited range, automatically updating
        the range upon setting to a new text.

        (WebInspector.CodeMirrorColorEditingController.prototype.presentHoverMenu):
        Obtain the bounds directly from the WebInspector.TextMarker object.

        * UserInterface/CodeMirrorTokenTrackingController.js:
        (WebInspector.CodeMirrorTokenTrackingController.prototype._updateHoveredTokenInfo):
        Since we're now tracking the hoveredMarker as a WebInspector.TextMarker, get the CodeMirror
        TextMarker from that object to check if it's contained within the text markers at the
        hovered position.

        * UserInterface/Main.html:
        Add the new TextMarker class source.

        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor.prototype._hasColorMarkers):
        Use the WebInspector.TextMarker type to identify a given text marker is marking a color.

        (WebInspector.SourceCodeTextEditor.prototype.tokenTrackingControllerNewHighlightCandidate):
        Use the renamed markersAtPosition() method from TextEditor.

        (WebInspector.SourceCodeTextEditor.prototype._tokenTrackingControllerHighlightedMarkedExpression):
        Use the WebInspector.TextMarker type to identify a given text marker is marking a color.

        (WebInspector.SourceCodeTextEditor.prototype.colorEditingControllerDidFinishEditing):
        Since the CodeMirrorColorEditingController is now using a WebInspector.TextRange for its range,
        update to use a WebInspector.TextRange API to get the range's start line.

        * UserInterface/TextEditor.js:
        (WebInspector.TextEditor.prototype.get markers):
        Return WebInspector.TextMarker objects instead of CodeMirror TextRange objects.

        (WebInspector.TextEditor.prototype.markersAtPosition):
        Rename method to a better name instead of using the CodeMirror-influenced name. Also, return
        WebInspector.TextMarker objects instead of CodeMirror TextRange objects.

        * UserInterface/TextMarker.js: Added.
        (WebInspector.TextMarker):
        Create a WebInspector.TextMarker with a CodeMirror TextMarker and an optional type.

        (WebInspector.TextMarker.textMarkerForCodeMirrorTextMarker):
        Static method to either obtain the existing WebInspector.TextMarker for a given CodeMirror
        TextMarker, or create a new WebInspector.TextMarker.

        (WebInspector.TextMarker.prototype.get codeMirrorTextMarker):
        Public property to access the CodeMirror TextMarker objects for classes that have direct
        knowledge of CodeMirror.

        (WebInspector.TextMarker.prototype.get type):
        Public property to access the type used to create this text marker.

        (WebInspector.TextMarker.prototype.get range):
        (WebInspector.TextMarker.prototype.get bounds):
        Public properties allowing easy access to generally useful information related to marked text.

        (WebInspector.TextMarker.prototype.clear):
        Wrapper for the CodeMirror TextMarker clear() method.

2013-12-13  Brent Fulgham  <bfulgham@apple.com>

        [Win] Switch WebKit solution to Visual Studio 2013
        https://bugs.webkit.org/show_bug.cgi?id=125192

        Reviewed by Anders Carlsson.

        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj: Update for VS2013

2013-12-12  Laszlo Vidacs  <lac@inf.u-szeged.hu>

        Web Inspector: ES6: JavaScript syntax highlighting and recognition of for..of
        https://bugs.webkit.org/show_bug.cgi?id=122868

        Reviewed by Timothy Hatcher.

        Update to CodeMirror 3.20 including javascript ES6 updates.

        * Tools/PrettyPrinting/codemirror.css:
        * Tools/PrettyPrinting/codemirror.js: Minor local change due to error from jsmin.py
        * Tools/PrettyPrinting/css.js:
        * Tools/PrettyPrinting/javascript.js:
        * UserInterface/External/CodeMirror/codemirror.css:
        * UserInterface/External/CodeMirror/codemirror.js: Minor local change due to error from jsmin.py
        * UserInterface/External/CodeMirror/coffeescript.js:
        * UserInterface/External/CodeMirror/css.js:
        * UserInterface/External/CodeMirror/htmlmixed.js:
        * UserInterface/External/CodeMirror/javascript.js:
        * UserInterface/External/CodeMirror/less.js:
        * UserInterface/External/CodeMirror/matchbrackets.js:
        * UserInterface/External/CodeMirror/placeholder.js:
        * UserInterface/External/CodeMirror/runmode.js:
        * UserInterface/External/CodeMirror/searchcursor.js:
        * UserInterface/External/CodeMirror/sql.js:
        * UserInterface/External/CodeMirror/xml.js:

2013-12-12  Antoine Quint  <graouts@apple.com>

        Web Inspector: allow editing of colors in CSS resources
        https://bugs.webkit.org/show_bug.cgi?id=124364

        Reviewed by Timothy Hatcher.

        Identify colors in CSS and HTML resources so that hovering these colors shows a HoverMenu
        allowing a ColorPicker hosted in a Popover to be shown to edit the hovered color.

        * UserInterface/CSSStyleDeclarationTextEditor.js:
        (WebInspector.CSSStyleDeclarationTextEditor.prototype._createColorSwatches):
        Remove the code that goes through the lines of the CodeMirror editor to look for
        color strings and replace it with a call to the .createColorMarkers() CodeMirror
        extension in which the code was refactored. The callback passed to
        .createColorMarkers() handles the CSSStyleDeclarationTextEditor-specific creation
        of color swatches to show the popover, keeping the existing behavior of the Styles
        sidebar panel.

        * UserInterface/CodeMirrorAdditions.js:
        Refactor existing code into two new CodeMirror extensions: .boundsForRange(), which
        was previously defined on the CodeMirrorTokenTrackingController but was also needed
        in the new CodeMirrorColorEditingController, and .createColorMarkers(), discussed above.

        * UserInterface/CodeMirrorColorEditingController.js: Added.
        (WebInspector.CodeMirrorColorEditingController):
        New class used by SourceCodeTextEditor to coordinate the editing of a color in a CodeMirror
        TextMarker by a ColorPicker hosted in a Popover shown by the activation of a HoverMenu. This
        controller automatically gets the color set by the user using the ColorPicker and updates
        the CodeMirror text editor with the new value. When the user presses the Esc. key while the
        popover is shown, it's automatically dismissed and the original color is reset in the editor.

        (WebInspector.CodeMirrorColorEditingController.prototype.get marker):
        (WebInspector.CodeMirrorColorEditingController.prototype.get range):
        (WebInspector.CodeMirrorColorEditingController.prototype.get delegate):
        (WebInspector.CodeMirrorColorEditingController.prototype.set delegate):
        Getters and setters for public properties.

        (WebInspector.CodeMirrorColorEditingController.prototype.get color):
        (WebInspector.CodeMirrorColorEditingController.prototype.set color):
        Get and set the color for the edited color marker, replacing the text in the marker's range
        upon setting.

        (WebInspector.CodeMirrorColorEditingController.prototype.presentHoverMenu):
        Public API allowing for a HoverMenu to be shown around the bounds of the TextMarker passed
        in the constructor. This method is called from SourceCodeTextEditor when the
        CodeMirrorTokenTrackingController identifies that a token that is part of a TextMarker is
        hovered and that token is a color.

        (WebInspector.CodeMirrorColorEditingController.prototype.dismissHoverMenu):
        Public API allowing for the HoverMenu to be dismissed. This method is called when the
        CodeMirrorTokenTrackingController identifies that its "hoveredMarker" is no longer being
        hovered as well as when we identify that editing of the color has completed.

        (WebInspector.CodeMirrorColorEditingController.prototype.handleEvent):
        Event handler for the "keydown" event that are being listened to when the HoverMenu
        is activated such that the Esc. key can be used to dimiss the popover and reset the
        original color before any edits.

        (WebInspector.CodeMirrorColorEditingController.prototype.hoverMenuButtonWasPressed):
        Implementation of the HoverMenu delegation method used to show a Popover containing a
        ColorPicker upon clicking on the color wheel attached to the HoverMenu. We also remember
        the color set on the marker so that it may be restored when Esc. is pressed and used to
        set the original state of the ColorPicker. The delegation method
        colorEditingControllerDidStartEditing() is also called at this point, which the
        SourceCodeTextEditor implements.

        (WebInspector.CodeMirrorColorEditingController.prototype.didDismissPopover):
        Implementation of the Popover delegation method used to identify that color editing has
        completed. The delegation method colorEditingControllerDidFinishEditing() is called
        at this point, which the SourceCodeTextEditor implements.

        (WebInspector.CodeMirrorColorEditingController.prototype._colorPickerColorChanged):
        Apply the color set in the color picker to the CodeMirror text editor.

        * UserInterface/CodeMirrorTokenTrackingController.js:
        Add two new modes to CodeMirrorTokenTrackingController. The first mode is "None" and is
        the default, incurring no specific token handling behavior. The second mode is "MarkedTokens"
        which identifies hover of a token contained in a CodeMirror TextMarker range. The new
        "MarkedTokens" mode is used by SourceCodeTextEditor to identify when a marked color is being
        hovered to display a HoverMenu.

        (WebInspector.CodeMirrorTokenTrackingController):
        (WebInspector.CodeMirrorTokenTrackingController.prototype.set mode):
        Make "None" the new default mode for CodeMirrorTokenTrackingController.

        (WebInspector.CodeMirrorTokenTrackingController.prototype.get hoveredMarker):
        (WebInspector.CodeMirrorTokenTrackingController.prototype.set hoveredMarker):
        (WebInspector.CodeMirrorTokenTrackingController.prototype._updateHoveredTokenInfo):
        Check, when we have a "hoveredMarker" set on the CodeMirrorTokenTrackingController,
        whether the "hoveredMarker" is still being hovered when there is no token at the current
        mouse position. We can then determine when we're mousing out of the "hoveredMarker" and
        notify the delegate via the new tokenTrackingControllerMouseOutOfHoveredMarker delegate
        method. The SourceCodeTextEditor uses this method to dismiss its CodeMirrorColorEditingController.

        (WebInspector.CodeMirrorTokenTrackingController.prototype._processNewHoveredToken):
        Add support for the new "MarkedTokens" mode.

        (WebInspector.CodeMirrorTokenTrackingController.prototype._processMarkedToken):
        For the moment, use the same behavior as the existing "MarkedTokens" mode.

        * UserInterface/Color.js:
        (WebInspector.Color):
        Add a new "valid" property to identify whether a color has any invalid (NaN) component. This property
        is used by SourceCodeTextEditor to establish whether a hovered color marker is indeed set to a
        valid color still.

        (WebInspector.Color.prototype.copy):
        New method to create an exact copy of a Color instance, used by CodeMirrorColorEditingController
        to duplicate the edited color in case we need to revert it.

        * UserInterface/HoverMenu.js:
        (WebInspector.HoverMenu.prototype._handleClickEvent):
        Rename hoverMenuWasActivated to hoverMenuButtonWasPressed per review feedback.

        * UserInterface/Images/ColorIcon.png: Added.
        * UserInterface/Images/ColorIcon@2x.png: Added.
        New color wheel icon used to customize the HoverMenu shown by a CodeMirrorColorEditingController.

        * UserInterface/Main.html:
        Link to the new CodeMirrorColorEditingController.js file.

        * UserInterface/SourceCodeTextEditor.css:
        (.hover-menu.color):
        (.hover-menu.color > img):
        Customize the HoverMenu shown by a CodeMirrorColorEditingController to use the new ColorIcon asset.

        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor):
        Add a new "_ignoreContentDidChange" ivar that increments and decrements to track when handling
        of CodeMirror content changes should be disabled.

        (WebInspector.SourceCodeTextEditor.prototype.close):
        Adopt the new ._updateTokenTrackingControllerState() method to update the state of the
        CodeMirrorTokenTrackingController.

        (WebInspector.SourceCodeTextEditor.prototype.contentDidChange):
        Override the new TextEditor public API called when content in the CodeMirror text editor is changed.
        We use this method to process any newly added line to create any newly added color marker.

        (WebInspector.SourceCodeTextEditor.prototype._contentDidPopulate):
        (WebInspector.SourceCodeTextEditor.prototype._debuggerDidPause):
        (WebInspector.SourceCodeTextEditor.prototype._debuggerDidResume):
        (WebInspector.SourceCodeTextEditor.prototype._sourceCodeSourceMapAdded):
        Adopt the new ._updateTokenTrackingControllerState() method to update the state of the
        CodeMirrorTokenTrackingController.

        (WebInspector.SourceCodeTextEditor.prototype._updateTokenTrackingControllerState):
        New method acting as the only point where we check the state of the text editor and set the right
        mode and settings on the CodeMirrorTokenTrackingController, including setting the new "MarkedTokens"
        mode when we have color markers, as determined by ._hasColorMarkers().

        (WebInspector.SourceCodeTextEditor.prototype._hasColorMarkers):
        Check whether any of the TextMarkers set on the CodeMirror text editor were created for a color.

        (WebInspector.SourceCodeTextEditor.prototype.tokenTrackingControllerHighlightedRangeWasClicked):
        Check the CodeMirrorTokenTrackingController mode rather than the removed "_jumpToSymbolTrackingModeEnabled"
        ivar to identify we're in the "NonSymbolTokens" mode.

        (WebInspector.SourceCodeTextEditor.prototype.tokenTrackingControllerNewHighlightCandidate):
        Refactor method to use the CodeMirrorTokenTrackingController mode to branch into mode-specific code
        and add a new branch for the new "MarkedTokens" mode where we check if the newly hovered token
        is part of a color TextMarker range.

        (WebInspector.SourceCodeTextEditor.prototype.tokenTrackingControllerMouseOutOfHoveredMarker):
        Implement this new CodeMirrorTokenTrackingController delegation method to dismiss the
        CodeMirrorColorEditingController as we identify we're no longer hovering over the TextMarker
        for which the CodeMirrorColorEditingController was created.

        (WebInspector.SourceCodeTextEditor.prototype._showPopover):
        Adopt the new TextEditor boundsForRange() method.

        (WebInspector.SourceCodeTextEditor.prototype._updateColorMarkers):
        Harness the new TextEditor createColorMarkers() method to create new TextMarkers for the provided
        line, or the entire text editor content if none provided. We then immediately call _updateTokenTrackingControllerState()
        so that the new "MarkedTokens" mode is entered in case color TextMarkers were created for the first
        time for this text editor.

        (WebInspector.SourceCodeTextEditor.prototype._tokenTrackingControllerHighlightedMarkedExpression):
        Called when we've identified the CodeMirrorTokenTrackingController highlighted a TextMarker. We check
        if any of the hovered TextMarkers are for a color, and in this case create a CodeMirrorColorEditingController
        to coordinate the display of a ColorPicker in a Popover to edit the hovered color token. We also check
        whether the hovered marker still contains a valid color, clearing the marker in case it was edited to
        no longer contain a color.

        (WebInspector.SourceCodeTextEditor.prototype._dismissCodeMirrorColorEditingController):
        Used to dismiss the CodeMirrorColorEditingController, if previously presented, and reset some internal state.

        (WebInspector.SourceCodeTextEditor.prototype.colorEditingControllerDidStartEditing):
        Implement this CodeMirrorColorEditingController delegation method to temporarily disable the
        CodeMirrorTokenTrackingController while we edit the color with the ColorPicker, remove
        the TextMarker for the edited color and instruct that content changes should be ignored
        such that we act on the complete set of color edits upon completion.

        (WebInspector.SourceCodeTextEditor.prototype.colorEditingControllerDidFinishEditing):
        Update color markers for the edited line such that any color edits are correctly updated for
        the future and so that, as a side-effect, the CodeMirrorColorEditingController is reset to the
        appropriate mode depending on whether color TextMarkers are indeed available, resetting states
        that may have been altered by colorEditingControllerDidStartEditing().

        * UserInterface/TextEditor.js:
        (WebInspector.TextEditor.prototype.contentDidChange):
        New public method meant to be overriden by subclasses, added for the use of SourceCodeTextEditor, exposing
        the list of TextRanges affected by the content change, both in the context of the old content and new content.

        (WebInspector.TextEditor.prototype.boundsForRange):
        (WebInspector.TextEditor.prototype.get markers):
        (WebInspector.TextEditor.prototype.findMarkersAtPosition):
        (WebInspector.TextEditor.prototype.createColorMarkers):
        (WebInspector.TextEditor.prototype.colorEditingControllerForMarker):
        New public methods calling into the CodeMirror private ivar for the benefit of SourceCodeTextEditor.

        (WebInspector.TextEditor.prototype._contentChanged):
        Call the new contentDidChange() method.

2013-12-05  Seokju Kwon  <seokju@webkit.org>

        Web Inspector: Remove 'cookiesString' output from Page.getCookies
        https://bugs.webkit.org/show_bug.cgi?id=125268

        Reviewed by Timothy Hatcher.

        Remove 'cookiesString' output from Page.getCookies protocol.
        It is no longer meaningful because it is an unused parameter.

        * UserInterface/CookieStorageContentView.js:
        (WebInspector.CookieStorageContentView.prototype.update):
        * UserInterface/InspectorBackendCommands.js:

2013-12-05  Brian J. Burg  <burg@cs.washington.edu>

        Web Inspector: expose node and frame snapshot capabilities.
        https://bugs.webkit.org/show_bug.cgi?id=124326

        Reviewed by Joseph Pecoraro.

        Add method signatures for snapshotNode() and snapshotRect().
        Remove method signature for unimplemented Page.captureScreenshot.

        * UserInterface/InspectorBackendCommands.js:

2013-12-05  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: [CSS Regions] Show a list of containing regions when clicking a node that is part of a flow
        https://bugs.webkit.org/show_bug.cgi?id=124614

        Reviewed by Timothy Hatcher.

        Added a new function in DOMTreeManager called getNodeContentFlowInfo that can be used
        to retrieve an object with the following structure:
        {
             "regionFlow": <Reference to the ContentFlow object referenced by the -webkit-flow-from property of the node>,
             "contentFlow": <Reference to the ContentFlow object referenced by the -webkit-flow-into property of 
                             the node or a parent of the node>,
             "regions": [ list of DOMNodes representing the regions containers of the node. The node is split across all these regions. ]
        }

        Also, used this method to display a two new sections in the Computed Styles panel.
        1. Section "Flows": can have up to two Simple Rows: "Region Flow" and "Content Flow".
        2. Section "Container Regions" contains a DOMTreeDataGrid with the list of regions.

        The sections are only visible when there's content to display.

        Next to the "Region Flow" simple row I've added an arrow that will take the user to the "ContentFlowDOMTreeContentView" of the
        ContentFlow. The same happens for the "Content Flow", but in this case the element will also be highlighted.

        Part of the patch I've added the DOMTreeDataGridNode. LayerTreeDataGrid has a lot of CSS in common with it, so I
        will make another patch to refactor LayerTreeDataGrid to use DOMTreeDataGridNode as a base class.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/ComputedStyleDetailsPanel.css: Added.
        (.details-section > .content > .group > .row.simple.content-flow-link > .label):
        (.details-section > .content > .group > .row.simple.content-flow-link > .value):
        (.details-section > .content > .group > .row.simple.content-flow-link > .value > div):
        (.details-section > .content > .group > .row.simple.content-flow-link > .value > div > .icon):
        (.details-section > .content > .group > .row.simple.content-flow-link > .value > div > span):
        (.details-section > .content > .group > .row.simple.content-flow-link > .value > div > .go-to-arrow):
        (.details-section > .content > .group > .row.simple.content-flow-link:hover > .value > div > .go-to-arrow):
        * UserInterface/ComputedStyleDetailsPanel.js:
        (WebInspector.ComputedStyleDetailsPanel):
        (WebInspector.ComputedStyleDetailsPanel.prototype.get regionFlow):
        (WebInspector.ComputedStyleDetailsPanel.prototype.set regionFlow):
        (WebInspector.ComputedStyleDetailsPanel.prototype.get contentFlow):
        (WebInspector.ComputedStyleDetailsPanel.prototype.set contentFlow):
        (WebInspector.ComputedStyleDetailsPanel.prototype.get containerRegions):
        (WebInspector.ComputedStyleDetailsPanel.prototype.set containerRegions):
        (WebInspector.ComputedStyleDetailsPanel.prototype.refresh):
        (WebInspector.ComputedStyleDetailsPanel.prototype._computedStyleShowAllCheckboxValueChanged):
        (WebInspector.ComputedStyleDetailsPanel.prototype._resetFlowDetails):
        (WebInspector.ComputedStyleDetailsPanel.prototype._refreshFlowDetails.contentFlowInfoReady):
        (WebInspector.ComputedStyleDetailsPanel.prototype._refreshFlowDetails):
        (WebInspector.ComputedStyleDetailsPanel.prototype._goToRegionFlowArrowWasClicked):
        (WebInspector.ComputedStyleDetailsPanel.prototype._goToContentFlowArrowWasClicked):
        * UserInterface/DOMTreeDataGrid.css: Added.
        (.dom-tree-data-grid .data-grid):
        (.dom-tree-data-grid .data-grid table.data):
        (.dom-tree-data-grid .data-container):
        (.dom-tree-data-grid .data-container tr):
        (.dom-tree-data-grid .data-container td > div):
        (.dom-tree-data-grid .data-container .name-column):
        (.dom-tree-data-grid .data-container .name-column .icon):
        (.dom-tree-data-grid .data-container .name-column .label):
        (.dom-tree-data-grid .data-container tr:hover .name-column .label):
        (.dom-tree-data-grid .data-container .go-to-arrow):
        (.dom-tree-data-grid .data-container tr:hover .go-to-arrow):
        (.dom-tree-data-grid .data-container tbody > tr:nth-child(2n)):
        (.dom-tree-data-grid .data-container tbody > tr:nth-child(2n+1)):
        * UserInterface/DOMTreeDataGrid.js: Added.
        (WebInspector.DOMTreeDataGrid):
        (WebInspector.DOMTreeDataGrid.prototype._onmousemove):
        (WebInspector.DOMTreeDataGrid.prototype._onmouseout):
        * UserInterface/DOMTreeDataGridNode.js: Added.
        (WebInspector.DOMTreeDataGridNode):
        (WebInspector.DOMTreeDataGridNode.prototype.get domNode):
        (WebInspector.DOMTreeDataGridNode.prototype.createCellContent):
        (WebInspector.DOMTreeDataGridNode.prototype._updateNodeName):
        (WebInspector.DOMTreeDataGridNode.prototype._makeNameCell):
        (WebInspector.DOMTreeDataGridNode.prototype._updateNameCellData):
        (WebInspector.DOMTreeDataGridNode.prototype._goToArrowWasClicked):
        * UserInterface/DOMTreeManager.js:
        (WebInspector.DOMTreeManager.prototype.unregisteredNamedFlowContentElement):
        (WebInspector.DOMTreeManager.prototype.nodeRequested):
        (WebInspector.DOMTreeManager.prototype._coerceRemoteArrayOfDOMNodes):
        (WebInspector.DOMTreeManager.prototype.domNodeResolved):
        (WebInspector.DOMTreeManager.prototype.regionNodesAvailable):
        (WebInspector.DOMTreeManager.prototype.get if):
        (WebInspector.DOMTreeManager.prototype.get var):
        (WebInspector.DOMTreeManager.prototype.backendFunction.getComputedProperty):
        (WebInspector.DOMTreeManager.prototype.backendFunction.getContentFlowName):
        (WebInspector.DOMTreeManager.prototype.):
        * UserInterface/DataGrid.css:
        (.data-grid.no-header > table.header):
        (.data-grid.no-header .data-container):
        * UserInterface/DetailsSection.js:
        (WebInspector.DetailsSection):
        * UserInterface/InspectorBackend.js:
        (InspectorBackendClass.prototype._wrap):
        * UserInterface/Main.html:
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype.showContentFlowDOMTree):
        * UserInterface/RuntimeManager.js:
        (WebInspector.RuntimeManager.prototype.evaluateInInspectedWindow):
        (WebInspector.RuntimeManager.prototype.getPropertiesForRemoteObject):

2013-12-04  Antoine Quint  <graouts@apple.com>

        Web Inspector: ColorWheel uses old Color constructor
        https://bugs.webkit.org/show_bug.cgi?id=125260

        Reviewed by Joseph Pecoraro.

        Update to new WebInspector.Color constructor signature and use a clear color.

        * UserInterface/ColorWheel.js:
        (WebInspector.ColorWheel.prototype.get tintedColor):
        (WebInspector.ColorWheel.prototype.get rawColor):

2013-12-04  Antoine Quint  <graouts@apple.com>

        Web Inspector: color picker doesn't work with "blue"
        https://bugs.webkit.org/show_bug.cgi?id=125262

        Reviewed by Joseph Pecoraro.

        Under certain circumstances rounding issues would have us compare
        two equal numbers that differ by 0.00000001 and sometime trip this
        if statement and yield a null color. We now add a little fudge to
        the test and also return a clear color rather than null to match what
        we do in the getters for "tintedColor" and "rawColor".

        * UserInterface/ColorWheel.js:
        (WebInspector.ColorWheel.prototype._colorAtPointWithBrightness):

2013-12-04  Antoine Quint  <graouts@apple.com>

        Web Inspector: use only two decimals for opacity in rgba/hsla colors
        https://bugs.webkit.org/show_bug.cgi?id=125261

        Reviewed by Joseph Pecoraro.

        * UserInterface/ColorPicker.js:
        (WebInspector.ColorPicker.prototype._updateColor):

2013-12-04  Antoine Quint  <graouts@apple.com>

        Web Inspector: "data detectors" menu on hover for actionable tokens
        https://bugs.webkit.org/show_bug.cgi?id=124363

        Reviewed by Timothy Hatcher.

        Add a new WebInspector.HoverMenu class to display an overlay menu that is presented
        with respect to a target frame that it draws itself around adding a customizable
        action button to its right. The menu uses fade animations as it's presented and
        dismissed and a single delegation method is fired when the button is pressed. Finally,
        just like a popover, it automatically dismisses itself upon scrolling anywhere
        outside of its bounds.

        * UserInterface/HoverMenu.css: Added.
        * UserInterface/HoverMenu.js: Added.
        (WebInspector.HoverMenu):
        (WebInspector.HoverMenu.prototype.get element):
        (WebInspector.HoverMenu.prototype.dismiss):
        (WebInspector.HoverMenu.prototype.handleEvent):
        (WebInspector.HoverMenu.prototype._handleClickEvent):
        * UserInterface/Images/HoverMenuButton.png: Added.
        * UserInterface/Images/HoverMenuButton@2x.png: Added.
        * UserInterface/Main.html:

2013-12-04  Antoine Quint  <graouts@apple.com>

        Web Inspector: edited color should serialize back to original format when possible
        https://bugs.webkit.org/show_bug.cgi?id=125244

        Reviewed by Joseph Pecoraro.

        Profoundly reworked WebInspector.Color to be more efficient and more flexible when
        serializing the color to the various supported formats.

        * UserInterface/CSSStyleDeclarationTextEditor.js:
        (WebInspector.CSSStyleDeclarationTextEditor.prototype._createColorSwatches):
        Use new WebInspector.Color.fromString() factory and check for a null return value
        rather than an exception to identify invalid color tokens.

        * UserInterface/Color.js:
        (WebInspector.Color):
        Rewrote WebInspector.Color such that it would have, at all times, a canonical
        representation in terms of either RGBA or HSLA depending on the format used to
        create the color. The new constructor parameters lets the user pass a format
        and the RGBA or HSLA components, allowing to bypass the string-only creation
        system which was sub-optimal for the new color picker. Additionally, the toString()
        method now can provide the most accurate serialization of the color based on the
        provided format with a fallback mechanism to RGB/RGBA in cases where the desired
        format would incur a loss of fidelity. Finally, simplified the API to only feature
        essential features.

        (WebInspector.Color.fromString):
        New factory method used to create a color from a string.

        * UserInterface/ColorPicker.js:
        (WebInspector.ColorPicker.prototype.set color):
        Keep track of the original color format so that we can use it as the preferred format
        when serializing the updated color in _updateColor().

        (WebInspector.ColorPicker.prototype._updateColor):
        Use the original color format as the prefered formation for color serialization. Also,
        use the new WebInspector.Color constructor in lieu of the removed .fromRGBA factory.

        (WebInspector.ColorPicker.prototype._updateSliders):
        Use the new WebInspector.Color constructor in lieu of the removed .fromRGBA factory.

        * UserInterface/ColorWheel.js:
        (WebInspector.ColorWheel.prototype._colorAtPointWithBrightness):
        Use the new WebInspector.Color constructor in lieu of the removed .fromRGB factory.

2013-12-03  Seokju Kwon  <seokju@webkit.org>

        Web Inspector: Remove '_attachedWindowHeight' property in InspectorFrontendHostStub.js
        https://bugs.webkit.org/show_bug.cgi?id=125204

        Reviewed by Timothy Hatcher.

        '_attachedWindowHeight' property is not used anywhere, so remove it.

        * UserInterface/InspectorFrontendHostStub.js:
        (.WebInspector.InspectorFrontendHostStub):

2013-12-03  Brian J. Burg  <burg@cs.washington.edu>

        Web Inspector: restore navigation panel state across reloads and reopens
        https://bugs.webkit.org/show_bug.cgi?id=122125

        Reviewed by Timothy Hatcher.

        The previous strategy for restoring content views after inspector
        re-open did not consider the active sidebar and its selection, and
        tried to recreate the appropriate selection from the saved content
        view. However, doesn't work for tree elements in the sidebar panel
        that don't change views when selected, such as script breakpoints,
        special breakpoints, call stack, timeline sections, etc.

        This patch implements a new strategy that saves the navigation
        sidebar panel's view state by serializing the identity of the
        selected element's represented object. Relevant represented
        object classes implement the saveIdentityToCookie() method. Each
        represented object class also adds a TypeIdentifier property to
        its constructor, to aid inexact matching based on represented
        object type, rather than its complete identity.

        When restoring, the navigation sidebar attempts to match added
        tree elements against the pending cookie, and selects the element
        if it matches. A represented object matches if its serialized
        identity matches the previously saved serialized identity.

        The inspector view state is now only saved on the page hide event
        (for saving across reopen) and when the main frame commits its
        provisional load (for saving across same-page reloads). It
        consolidates similar view state settings into a single setting.

        * UserInterface/ApplicationCacheFrame.js:
        (WebInspector.ApplicationCacheFrame): Add cookie keys and type identifier.
        (WebInspector.ApplicationCacheFrame.prototype.saveIdentityToCookie): Added.
        * UserInterface/ApplicationCacheManager.js: remove objectForCookie().
        * UserInterface/Breakpoint.js:
        (WebInspector.Breakpoint): Add cookie keys and type identifier.
        (WebInspector.Breakpoint.prototype.saveIdentityToCookie):
        * UserInterface/CookieStorageObject.js:
        (WebInspector.CookieStorageObject.prototype.saveIdentityToCookie): Added.
        * UserInterface/DOMStorageObject.js:
        (WebInspector.DOMStorageObject): Add cookie keys and type identifier.
        (WebInspector.DOMStorageObject.prototype.saveIdentityToCookie): Added.
        * UserInterface/DatabaseObject.js:
        (WebInspector.DatabaseObject): Add cookie keys and type identifier.
        (WebInspector.DatabaseObject.prototype.saveIdentityToCookie): Added.
        * UserInterface/DatabaseTableObject.js:
        (WebInspector.DatabaseTableObject): Add cookie keys and type identifier.
        (WebInspector.DatabaseTableObject.prototype.saveIdentityToCookie): Added.
        * UserInterface/DebuggerSidebarPanel.js:
        (WebInspector.DebuggerSidebarPanel.prototype.saveStateToCookie): Added.
        (WebInspector.DebuggerSidebarPanel.prototype.restoreStateFromCookie): Added.
        * UserInterface/Frame.js:
        (WebInspector.Frame): Add cookie keys and type identifier.
        (WebInspector.Frame.prototype.saveIdentityToCookie): Added.
        * UserInterface/FrameResourceManager.js: remove objectForCookie().
        * UserInterface/InstrumentSidebarPanel.js:
        (WebInspector.InstrumentSidebarPanel.prototype.showTimelineForRecordType):
        Return the shown timeline, if any.

        (WebInspector.InstrumentSidebarPanel.prototype.saveStateToCookie): Added.
        (WebInspector.InstrumentSidebarPanel.prototype.restoreStateFromCookie): Added.
        (WebInspector.InstrumentSidebarPanel.prototype.showProfile):
        Return the shown profile, if any.

        * UserInterface/Main.js:
        (WebInspector): Added cookie keys for the selected sidebar and
        typeidentifier of the sidebar's selected tree element.

        (WebInspector.contentLoaded): Remove callbacks for
        resolveAndShowPendingContentViewCookie(). Consolidate all saved
        inspector view state into one Setting. Move special-cased
        restoring of the console to the restoration method. Move saving
        of last opened navigation panel to the saving method.

        (WebInspector._mainResourceDidChange): Try to restore saved view
        state when the main resource changes.

        (WebInspector._provisionalLoadCommitted): Update the saved view
        state when the navigation commits. This is the last chance to save
        it before the main resource changes and the navigation panel view
        state is discarded and rebuilt.

        (WebInspector._pageHidden): Update the saved view state when the
        inspector page is hidden, but before state is discarded.

        (WebInspector._navigationSidebarPanelSelected): Don't save last
        navigation sidebar panel.
        (WebInspector._updateCookieForInspectorViewState): Renamed from
        _updateCurrentContentViewCookie. It delegates view state
        serialization to the currently open navigation sidebar, rather
        than the current content view.

        (WebInspector._contentBrowserRepresentedObjectsDidChange): Don't
        spuriously serialize the current view state cookie on every
        ContentView change.

        (WebInspector._restoreInspectorViewStateFromCookie): Renamed from
        _showContentViewForCookie. It now restores a specific navigation
        panel and delegates remaining view state restoration to the panel
        itself. Last-resort selection of any tree element with the same
        type identifier was moved to the navigation panel's restore method.

        * UserInterface/NavigationSidebarPanel.js:
        (WebInspector.NavigationSidebarPanel):
        (WebInspector.NavigationSidebarPanel.prototype.set contentTreeOutline):
        (WebInspector.NavigationSidebarPanel.prototype.createContentTreeOutline):
        Save references to all created TreeOutlines in a Set, so we can
        restore any tree's selection.

        (WebInspector.NavigationSidebarPanel.prototype.saveStateToCookie):
        Added. Find the selected tree element from all tree outlines and
        ask it to serialize its identity.

        (WebInspector.NavigationSidebarPanel.prototype.restoreStateFromCookie):
        Added. Eagerly search existing tree elements for a matching
        representedObject. If none exists, save the pending cookie and
        schedule last-resort matching using the provided timeout interval.

        (WebInspector.NavigationSidebarPanel.prototype._treeElementAddedOrChanged):
        Check if the added tree element matches a pending view state
        cookie, if one exists.

        (WebInspector.NavigationSidebarPanel.prototype.treeElementMatchesCookie):
        Added. Check if the tree element's representedObject matches the
        pending view state cookie.

        (WebInspector.NavigationSidebarPanel.prototype._checkElementsForPendingViewStateCookie):
        Added. For each provided tree element, check if the tree
        element's represented object produces the same serialized identity
        as the pending view state cookie that we are trying to resolve.
        If a match is found (possibly by relaxing to matching anything
        with the same type), select the tree element and clear both the
        pending view state cookie and last-resort selection timer.

        * UserInterface/Resource.js:
        (WebInspector.Resource): Add cookie keys and type identifier.
        (WebInspector.Resource.prototype.saveIdentityToCookie): Added.

        * UserInterface/ResourceClusterContentView.js:
        (WebInspector.ResourceClusterContentView.prototype.saveToCookie):
        (WebInspector.ResourceClusterContentView.prototype.restoreFromCookie):
        Since identity state is serialized by the representedObject, these
        methods only need to save view-specific state, such as the visible
        subview. Remove extraneous state.

        * UserInterface/Script.js:
        (WebInspector.Script): Add cookie keys and type identifier.
        (WebInspector.Script.prototype.saveIdentityToCookie): Added.
        * UserInterface/StorageManager.js: remove objectForCookie().
        * UserInterface/TimelineManager.js: remove objectForCookie().
        * UserInterface/TimelinesContentView.js:
        (WebInspector.TimelinesContentView.prototype.saveToCookie):
        (WebInspector.TimelinesContentView.prototype.restoreFromCookie):
        Since identity state is serialized by the representedObject, these
        methods only need to save view-specific state, such as the visible
        subview. Remove extraneous state.

        * UserInterface/TreeOutline.js: Add TreeOutline.prototype.constructor
        so other code can assume the constructor property exists.

2013-12-02  Antoine Quint  <graouts@apple.com>

        Web Inspector: popover can overlap target frame
        https://bugs.webkit.org/show_bug.cgi?id=125069

        Reviewed by Joseph Pecoraro.

        Fix a regression introduced in http://trac.webkit.org/changeset/159286. We should only
        offset the frame of the popover in the y-axis if the target edge is on the x-axis, and
        vice versa. We also remove the needsToDrawBackground check since it incorrectly disregarded
        the anchor point. We now always draw the background which is a lot safer and guarantees
        we'll always draw an adequate frame and anchor point.

        * UserInterface/Popover.js:
        (WebInspector.Popover.prototype._update):
        (WebInspector.Popover.prototype._bestMetricsForEdge):

2013-12-02  Antoine Quint  <graouts@apple.com>

        Web Inspector: add a method to add padding around a WebInspector.Rect
        https://bugs.webkit.org/show_bug.cgi?id=125072

        Reviewed by Joseph Pecoraro.

        Add a new WebInspector.Rect.prototype.pad() method which does not alter
        the rectangle it's called and returns a new rect much like .inset(). I've
        checked all call sites and there was no reuse of the rectangle that was
        padded so this patch won't have any side effects.

        * UserInterface/Breakpoint.js:
        (WebInspector.Breakpoint.prototype._showEditBreakpointPopover):
        * UserInterface/CSSStyleDeclarationTextEditor.js:
        * UserInterface/Geometry.js:
        (WebInspector.Rect.prototype.pad):
        * UserInterface/LayerTreeSidebarPanel.js:
        (WebInspector.LayerTreeSidebarPanel.prototype._updatePopoverForSelectedNode):
        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor.prototype._showPopover):
        * UserInterface/TimelineDataGrid.js:
        (WebInspector.TimelineDataGrid.prototype._updatePopoverForSelectedNode):

2013-11-26  Antoine Quint  <graouts@apple.com>

        Web Inspector: Allow showing a context menu on all mouse events.
        https://bugs.webkit.org/show_bug.cgi?id=124747

        Reviewed by Joseph Pecoraro.

        Automatically dispatch a contextmenu event in case WebInspector.ContextMenu.prototype.show()
        is called outside of a contextmenu event handler and would therefore not show the expected
        context menu (except in the Remote Web Inspector where this already works). 

        * UserInterface/ContextMenu.js:
        (WebInspector.ContextMenu.prototype.show):
        Check whether the event is a contextmenu event, and if not, add an event listener for a manually
        dispatched contextmenu event such that we may then call InspectorFrontendHost.showContextMenu()
        in a contextmenu event handler.

        (WebInspector.ContextMenu.prototype.handleEvent):
        Call InspectorFrontendHost.showContextMenu() now that we received the manually dispatched
        contextmenu event.

2013-11-25  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: [CSS Regions] A page with many flows should collapse the resources tree
        https://bugs.webkit.org/show_bug.cgi?id=122926

        Reviewed by Timothy Hatcher.

        Refactored the code in FrameTreeElement._shouldGroupIntoFolders to make it easy to track
        more types of resources. Added the content flows as another type of resource that would trigger the
        collapsing.

        * UserInterface/DOMTreeManager.js:
        (WebInspector.DOMTreeManager.prototype.namedFlowRemoved): Added code to remove the content nodes from
        a flow that has been removed.
        * UserInterface/FrameTreeElement.js:
        (WebInspector.FrameTreeElement.prototype._shouldGroupIntoFolders.pushCategory):
        (WebInspector.FrameTreeElement.prototype._shouldGroupIntoFolders.pushResourceType):
        (WebInspector.FrameTreeElement.prototype._shouldGroupIntoFolders):

2013-11-25  Dan Bernstein  <mitz@apple.com>

        Set the svn:ignore property on the Xcode project to ignore the workspace and user data.

        * WebInspectorUI.xcodeproj: Added property svn:ignore.

2013-11-21  Mark Rowe  <mrowe@apple.com>

        <https://webkit.org/b/124702> Stop overriding VALID_ARCHS.

        All modern versions of Xcode set it appropriately for our needs.

        Reviewed by Alexey Proskuryakov.

        * Configurations/Base.xcconfig:

2013-11-19  Antoine Quint  <graouts@apple.com>

        Web Inspector: layer info sidebar should convert to MB for very large layers
        https://bugs.webkit.org/show_bug.cgi?id=124570

        Reviewed by Timothy Hatcher.

        Setting higherResolution to true (its default value if omitted) when calling
        Number.bytesToString() would always result in a KB-formatted string instead
        since it didn't check for a < 1024 value as well.

        * UserInterface/Utilities.js:
        (Number.bytesToString):

2013-11-19  Antoine Quint  <graouts@apple.com>

        Remove some unused utilities from Utilities.js
        https://bugs.webkit.org/show_bug.cgi?id=124590

        Reviewed by Darin Adler.

        Remove some methods and properties that were no longer used through the codebase.

        * UserInterface/Utilities.js:

2013-11-18  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: Update WebInspectorUI to use the new "nodeIds" parameter for DOM.performSearch
        https://bugs.webkit.org/show_bug.cgi?id=124544

        Reviewed by Joseph Pecoraro.

        Added the new DOM.performSearch "nodeIds" parameter and made the two implementations
        of DOMTreeContentView provide the right context node ids.

        DOMTreeContentView is just using the id of the document node while ContentFlowDOMTreeContentView
        is passing the list of content nodes.

        Note that adding an extra optional parameter to DOM.performSearch does not break iOS 6 and 7 compatibility.

        * UserInterface/ContentFlowDOMTreeContentView.js:
        (WebInspector.ContentFlowDOMTreeContentView.prototype.getSearchContextNodes):
        * UserInterface/DOMTreeContentView.js:
        (WebInspector.DOMTreeContentView.prototype.performSearch.contextNodesReady):
        (WebInspector.DOMTreeContentView.prototype.performSearch):
        (WebInspector.DOMTreeContentView.prototype.getSearchContextNodes):
        * UserInterface/FrameDOMTreeContentView.js:
        (WebInspector.FrameDOMTreeContentView.prototype.getSearchContextNodes):
        * UserInterface/InspectorBackendCommands.js:

2013-11-18  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Update localizedStrings, remove stale string
        https://bugs.webkit.org/show_bug.cgi?id=124543

        Reviewed by Jessie Berlin.

        Remove stale localized strings after r124543 remove the old color picker.

        * Localizations/en.lproj/localizedStrings.js:

2013-11-15  Antoine Quint  <graouts@apple.com>

        Web Inspector: New color picker
        https://bugs.webkit.org/show_bug.cgi?id=124354

        Reviewed by Timothy Hatcher.

        Beginning of a new color picker. The focus of this new picker is to let you pick from
        a color wheel as the primary mean of color picking, with additional slider controls for
        the brightness and the opacity, better matching the default OS X color picker. This is the
        basis for a color picker that will evolve to support the following:

        - editable CSS value label (http://webkit.org/b/124356)
        - picking a color anywhere on screen (http://webkit.org/b/124357)
        - swatches based on other colors in page (http://webkit.org/b/124358)

        Note also that the color wheel has not been tested on Retina displays
        (see http://webkit.org/b/124355).

        * UserInterface/CSSColorPicker.css: Removed.
        * UserInterface/CSSColorPicker.js: Removed.
        Previous color picker, now removed in favor of the new ColorPicker class.

        * UserInterface/CSSStyleDeclarationTextEditor.js:
        Adopt new class name for the color picker, add a little padding to the popover
        target frame and set the base color after the picker has been presented.

        * UserInterface/Color.js:
        (WebInspector.Color.prototype._hslToRGB):
        Simplified math.

        (WebInspector.Color.rgb2hsv):
        (WebInspector.Color.hsv2rgb):
        New utilities to deal with HSV colors used in the ColorWheel.

        * UserInterface/ColorPicker.css: Added.

        * UserInterface/ColorPicker.js: Added.
        (WebInspector.ColorPicker):
        (WebInspector.ColorPicker.prototype.get element):
        (WebInspector.ColorPicker.prototype.set brightness):
        (WebInspector.ColorPicker.prototype.set opacity):
        (WebInspector.ColorPicker.prototype.get color):

        (WebInspector.ColorPicker.prototype.set color):
        We set the _dontUpdateColor flag here such that we don't attempt to
        notify about a color change at this point in case the selected color
        is too saturated to be represented accurately on the color wheel and
        we would end up changing the color by virtue of presenting the popover.

        (WebInspector.ColorPicker.prototype.colorWheelColorDidChange):
        (WebInspector.ColorPicker.prototype.sliderValueDidChange):
        (WebInspector.ColorPicker.prototype._updateColor):
        (WebInspector.ColorPicker.prototype._updateSliders):

        * UserInterface/ColorWheel.css: Added.

        * UserInterface/ColorWheel.js: Added.
        The ColorWheel makes use of three different <canvas> elements to draw itself.
        The "raw" canvas is used to draw the raw, un-tinted color wheel with poor
        aliasing. The "raw" canvas is only drawn when the dimension is changed.
        The "tinted" canvas is used to draw the "raw" canvas with a black overlay
        based on the brightness set on the wheel. The "final" canvas, the only <canvas>
        element attached to the DOM, is used to draw the "tinted" canvas into a circle
        clip of a slightly narrower radius so that the drawn image is visually more pleasing
        and can be displayed above virtually any background color.

        We use color math to generate the color wheel, courtesy of Dean Jackson, and also to
        figure out where to position the crosshair for the provided base color as well as
        the opposite operation where we get the color under the mouse pointer.

        The color wheel fires a single delegate method call colorWheelColorDidChange(colorWheel),
        the colors themselves being retrieved via the public properties tintedColor and rawColor.

        (WebInspector.ColorWheel):
        (WebInspector.ColorWheel.prototype.set dimension):
        (WebInspector.ColorWheel.prototype.get element):
        (WebInspector.ColorWheel.prototype.get brightness):
        (WebInspector.ColorWheel.prototype.set brightness):
        (WebInspector.ColorWheel.prototype.get tintedColor):
        (WebInspector.ColorWheel.prototype.set tintedColor):
        (WebInspector.ColorWheel.prototype.get rawColor):
        (WebInspector.ColorWheel.prototype.handleEvent):
        (WebInspector.ColorWheel.prototype._handleMousedown):
        (WebInspector.ColorWheel.prototype._handleMousemove):
        (WebInspector.ColorWheel.prototype._handleMouseup):
        (WebInspector.ColorWheel.prototype._pointInCircleForEvent):
        (WebInspector.ColorWheel.prototype._pointInCircleForEvent.angleFromCenterToPoint):
        (WebInspector.ColorWheel.prototype._pointInCircleForEvent.pointOnCircumference):
        (WebInspector.ColorWheel.prototype._updateColorForMouseEvent):
        (WebInspector.ColorWheel.prototype._setCrosshairPosition):
        (WebInspector.ColorWheel.prototype._tintedColorToPointAndBrightness):
        (WebInspector.ColorWheel.prototype._drawRawCanvas):
        (WebInspector.ColorWheel.prototype._colorAtPointWithBrightness):
        (WebInspector.ColorWheel.prototype._drawTintedCanvas):
        (WebInspector.ColorWheel.prototype._draw):

        * UserInterface/Images/SliderThumb.png: Added.
        * UserInterface/Images/SliderThumb@2x.png: Added.
        * UserInterface/Images/SliderThumbPressed.png: Added.
        * UserInterface/Images/SliderThumbPressed@2x.png: Added.
        Supporting artwork for the new Slider class.

        * UserInterface/Main.html:
        Remove the previous color picker class and add the new one, as well as the new Slider class.

        * UserInterface/Slider.css: Added.

        * UserInterface/Slider.js: Added.
        New slider to match the look of the sliders used in the native OS X color picker. The most
        interesting feature of these sliders is that they can be transformed using CSS in any way
        and will still operate correctly due to always converting the mouse coordinates in the page
        coordinate system to the coordinate system local to the backing element. For instance, the
        color picker uses two sliders transformed to be displayed vertically.

        As it stands these slides only support values between 0 and 1 and fire a single delegate
        method call sliderValueDidChange(slider, newValue).

        (WebInspector.Slider):
        (WebInspector.Slider.prototype.get element):
        (WebInspector.Slider.prototype.get value):
        (WebInspector.Slider.prototype.set value):
        (WebInspector.Slider.prototype.handleEvent):
        (WebInspector.Slider.prototype._handleMousedown):
        (WebInspector.Slider.prototype._handleMousemove):
        (WebInspector.Slider.prototype._handleMouseup):
        (WebInspector.Slider.prototype._localPointForEvent):
        (WebInspector.Slider.prototype.get _maxX):

        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj:
        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj.filters:
        Update file names for the new color picker.

2013-11-14  Antoine Quint  <graouts@apple.com>

        Web Inspector: Popovers may shrink unnecessarily
        https://bugs.webkit.org/show_bug.cgi?id=124350

        Reviewed by Timothy Hatcher.

        Because we always get the intersection of the preferred frame and the container frame to
        ensure the popover fits within its container based on a preferred frame that would place
        the arrow within the center of the attachment edge, we get in situations where we may
        shrink the popover instead of shifting it to fit within the container frame. We now first
        shift the preferred frame before getting its intersection with the container frame to
        avoid such situations. 

        * UserInterface/Popover.js:
        (WebInspector.Popover.prototype._bestMetricsForEdge):

2013-11-13  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Split Inspector.json into individual domain json files
        https://bugs.webkit.org/show_bug.cgi?id=124098

        Reviewed by Timothy Hatcher.

        Removed now stale comments referring to the combined Inspector.json.
        Make update-InspectorBackendCommands helper script generate a
        combined Inspector.json to still work for tip of tree.

        * Scripts/update-InspectorBackendCommands.rb:
        * UserInterface/ApplicationCacheObserver.js:
        * UserInterface/CSSObserver.js:
        * UserInterface/CanvasObserver.js:
        * UserInterface/ConsoleObserver.js:
        * UserInterface/DOMObserver.js:
        * UserInterface/DOMStorageObserver.js:
        * UserInterface/DatabaseObserver.js:
        * UserInterface/DebuggerObserver.js:
        * UserInterface/InspectorBackendCommands.js:
        * UserInterface/InspectorObserver.js:
        * UserInterface/LayerTreeObserver.js:
        * UserInterface/NetworkObserver.js:
        * UserInterface/PageObserver.js:
        * UserInterface/ProfilerObserver.js:
        * UserInterface/Resource.js:
        * UserInterface/RuntimeObserver.js:
        * UserInterface/TimelineObserver.js:

2013-11-12  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: ContentFlowTreeContentView should use only one DOMTreeOutline
        https://bugs.webkit.org/show_bug.cgi?id=124230

        Reviewed by Timothy Hatcher.

        Changed ContentFlowTreeContentView to use one DOMTreeOutline by just
        populating it with root DOMTreeElements directly. That is very
        similar to how DOMTreeOutline works when omitRootDOMNode is used.

        Now that ContentFlowTreeContentView has only one DOMTreeOutline,
        it makes sense to change its base class to be DOMTreeContentView instead.
        Also, with that I've changed its name to ContentFlowDOMTreeContentView.

        I had to move all the DOMTree document loading code from DOMTreeContentView to a
        new class called FrameDOMTreeContentView. This is used to display the DOM of the
        frame objects. FrameDOMTreeContentView is also inheriting from DOMTreeContentView.

        Issues that are fixed as a side effect:
        - Selection path components are now displaying all the sibling elements for contentFlow.contentNodes
        (those are the nodes that have "-webkit-flow-into" set directly).
        - Keyboard navigation works for the contentFlow.contentNodes.
        - Search is implemented in DOMTreeContentView, so that code now works for flows too.
        The DOMAgents's search API will use all the Documents to lookup for nodes, so it might
        find DOM nodes that are not part of the flow. This is in line with the behavior for the
        frames.

        * UserInterface/ContentFlowDOMTreeContentView.js: Renamed from ContentFlowTreeContentView
        to better reflect the inheritance from DOMTreeContentView.
        (WebInspector.ContentFlowDOMTreeContentView):
        (WebInspector.ContentFlowDOMTreeContentView.prototype.closed):
        (WebInspector.ContentFlowDOMTreeContentView.prototype._createContentTrees):
        (WebInspector.ContentFlowDOMTreeContentView.prototype._contentNodeWasAdded):
        (WebInspector.ContentFlowDOMTreeContentView.prototype._contentNodeWasRemoved):
        * UserInterface/ContentView.js:
        (WebInspector.ContentView):
        * UserInterface/DOMTreeContentView.js:
        (WebInspector.DOMTreeContentView):
        (WebInspector.DOMTreeContentView.prototype.closed):
        (WebInspector.DOMTreeContentView.prototype.):
        (WebInspector.DOMTreeContentView.prototype._restoreSelectedNodeAfterUpdate):
        (WebInspector.DOMTreeContentView.prototype._selectedNodeDidChange):
        * UserInterface/FrameDOMTreeContentView.js: Added.
        (WebInspector.FrameDOMTreeContentView):
        (WebInspector.FrameDOMTreeContentView.prototype.get domTree):
        (WebInspector.FrameDOMTreeContentView.prototype.closed):
        (WebInspector.FrameDOMTreeContentView.prototype._rootDOMNodeAvailable):
        (WebInspector.FrameDOMTreeContentView.prototype._rootDOMNodeInvalidated):
        (WebInspector.FrameDOMTreeContentView.prototype._requestRootDOMNode):
        * UserInterface/Main.html:

2013-11-08  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: remove -webkit-min and -webkit-max from CSS completions
        https://bugs.webkit.org/show_bug.cgi?id=124072

        Reviewed by Timothy Hatcher.

        -webkit-min and -webkit-max are not implemented in WebCore, despite mentions of it.

        * UserInterface/CSSKeywordCompletions.js:

2013-11-07  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: CSS Regions: Use a Map object to store the ContentFlows
        https://bugs.webkit.org/show_bug.cgi?id=124015

        Reviewed by Joseph Pecoraro.

        Changed the Object hashmap to a Map based hashmap when storing the flows in DOMTreeManager.

        * UserInterface/DOMTreeManager.js:
        (WebInspector.DOMTreeManager):
        (WebInspector.DOMTreeManager.prototype.getNamedFlowCollection):
        (WebInspector.DOMTreeManager.prototype.namedFlowRemoved):
        (WebInspector.DOMTreeManager.prototype._sendNamedFlowUpdateEvents):

2013-11-07  Timothy Hatcher  <timothy@apple.com>

        Fix up some sidebar switching details to make selections persist better.

        Translate represented objects between sidebars so the same item can be reselected
        as you switch between frames and main reources. Also fix some null checks that are
        needed on selectedSidebarPanel.

        https://bugs.webkit.org/show_bug.cgi?id=124001

        Reviewed by Joseph Pecoraro.

        * UserInterface/DebuggerSidebarPanel.js:
        (WebInspector.DebuggerSidebarPanel.prototype.treeElementForRepresentedObject): Added. Translate a Frame
        representedObject into a main resource representedObject.
        * UserInterface/Main.js:
        (WebInspector._revealAndSelectRepresentedObjectInNavigationSidebar): Null check selectedSidebarPanel.
        (WebInspector._updateNavigationSidebarForCurrentContentView): Fix a logic error to match other code.
        allowedNavigationSidebarPanels.length needs to have a length before using contains.
        (WebInspector._contentBrowserCurrentContentViewDidChange): Null check selectedSidebarPanel.
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype.treeElementForRepresentedObject): Translate a main resource
        representedObject into a Frame representedObject.

2013-11-07  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: CSS Regions: Removing a content node of a ContentFlow from the DOM will send a 0 nodeId
        https://bugs.webkit.org/show_bug.cgi?id=123577

        Reviewed by  Timothy Hatcher.

        Fixed the content node removal from the content flow.

        * UserInterface/ContentFlowTreeContentView.js:
        * UserInterface/DOMTreeManager.js:
        (WebInspector.DOMTreeManager):
        (WebInspector.DOMTreeManager.prototype._createContentFlowFromPayload): Registered all the content nodes
        in the _contentNodesToFlowsMap.
        (WebInspector.DOMTreeManager.prototype._unbind): Added call to _removeContentNodeFromFlowIfNeeded.
        (WebInspector.DOMTreeManager.prototype._removeContentNodeFromFlowIfNeeded): Called from _unbind to check
        and remove a node from it's parent content flow if needed.
        (WebInspector.DOMTreeManager.prototype.unregisteredNamedFlowContentElement):

2013-11-06  Timothy Hatcher  <timothy@apple.com>

        Properly null check positionToReveal in ResourceSidebarPanel.prototype.showSourceCode.

        https://bugs.webkit.org/show_bug.cgi?id=123921

        Reviewed by Joseph Pecoraro.

        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype.showSourceCode):

2013-11-06  Timothy Hatcher  <timothy@apple.com>

        Fix the display of query parameters when the value is missing. 

        https://bugs.webkit.org/show_bug.cgi?id=123920

        Reviewed by Joseph Pecoraro.

        * UserInterface/ResourceDetailsSidebarPanel.js:
        (WebInspector.ResourceDetailsSidebarPanel.prototype._createNameValueDataGrid):

2013-11-06  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: CSS Regions: When a flow is clicked the content of flow needs to be displayed
        https://bugs.webkit.org/show_bug.cgi?id=122927

        Reviewed by Joseph Pecoraro.

        ContentFlowTreeContentView is now used to display the content nodes of a ContentFlow. It is
        very similar to the DOMTreeContentView class, but can handle multiple root nodes.

        * UserInterface/ContentFlowTreeContentView.js: Added.
        (WebInspector.ContentFlowTreeContentView):
        (WebInspector.ContentFlowTreeContentView.prototype.get selectionPathComponents):
        (WebInspector.ContentFlowTreeContentView.prototype.updateLayout):
        (WebInspector.ContentFlowTreeContentView.prototype.shown):
        (WebInspector.ContentFlowTreeContentView.prototype.hidden):
        (WebInspector.ContentFlowTreeContentView.prototype.closed):
        (WebInspector.ContentFlowTreeContentView.prototype._selectedNodeDidChange):
        (WebInspector.ContentFlowTreeContentView.prototype._pathComponentSelected):
        (WebInspector.ContentFlowTreeContentView.prototype._createContentNodeTree):
        (WebInspector.ContentFlowTreeContentView.prototype._createContentTrees):
        (WebInspector.ContentFlowTreeContentView.prototype._contentNodeWasAdded):
        (WebInspector.ContentFlowTreeContentView.prototype._contentNodeWasRemoved):
        * UserInterface/ContentView.js:
        (WebInspector.ContentView):
        (WebInspector.ContentView.isViewable):
        * UserInterface/DOMTreeElement.js:
        (WebInspector.DOMTreeElement.prototype.ondeselect): We need to remove the selected "dom node"
        so that the element is not going to stay selected after the we move to a different DOM tree.
        * UserInterface/DOMTreeOutline.js:
        (WebInspector.DOMTreeOutline.prototype.selectDOMNode):
        * UserInterface/Main.html:
        * UserInterface/Main.js:
        (WebInspector.sidebarPanelForRepresentedObject):
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype._treeElementSelected):

2013-11-01  Antoine Quint  <graouts@apple.com>

        Remove custom Function.prototype.bind() in favor of native version
        https://bugs.webkit.org/show_bug.cgi?id=123608

        Reviewed by Joseph Pecoraro.

        * UserInterface/Utilities.js:

2013-11-01  Antoine Quint  <graouts@apple.com>

        Error trying to serialize a color created without an alpha component to RGBA or HSLA
        https://bugs.webkit.org/show_bug.cgi?id=123623

        Reviewed by Joseph Pecoraro.

        Check whether we have .rgba and .hsla ivars before trying to retrieve them to serialize
        the color to RGBA or HSLA format.

        * UserInterface/Color.js:
        (WebInspector.Color.prototype.toString):

2013-11-01  Antoine Quint  <graouts@apple.com>

        Remove custom Element.prototype.remove() in favor of native version
        https://bugs.webkit.org/show_bug.cgi?id=123607

        Reviewed by Timothy Hatcher.

        * UserInterface/Utilities.js:

2013-10-31  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Breakpoints in auto-formatted JavaScript editors are not working
        https://bugs.webkit.org/show_bug.cgi?id=123589

        Reviewed by Timothy Hatcher.

        The internal this._ignoreCodeMirrorContentDidChangeEvent flag was being used
        in two places that could be nested, meaning the flag was deleted while it
        was still expected to be set. Change it instead to a counter, to handle nesting.

        * UserInterface/TextEditor.js:
        (WebInspector.TextEditor):
        (WebInspector.TextEditor.prototype.set string):
        (WebInspector.TextEditor.prototype.set formatted):
        (WebInspector.TextEditor.prototype._contentChanged):

2013-10-31  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Remove stale optional native memory instrumentation protocol params
        https://bugs.webkit.org/show_bug.cgi?id=123552

        Reviewed by Timothy Hatcher.

        * UserInterface/InspectorBackendCommands.js:

2013-10-30  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Fix PrettyPrinting Tool Load from Saved URL

        Reviewed by Timothy Hatcher.

        * Tools/PrettyPrinting/index.html:

2013-10-28  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: CSS Regions: Add protocol API to expose content nodes addition/removal
        https://bugs.webkit.org/show_bug.cgi?id=123424

        Reviewed by Timothy Hatcher.

        Exposed the new CSS Agent events to the ContentFlow class that will now maintain
        a list of nodes in the "contentNodes" property.

        * UserInterface/CSSObserver.js:
        (WebInspector.CSSObserver.prototype.regionOversetChanged):
        (WebInspector.CSSObserver.prototype.registeredNamedFlowContentElement):
        (WebInspector.CSSObserver.prototype.unregisteredNamedFlowContentElement):
        * UserInterface/ContentFlow.js:
        (WebInspector.ContentFlow):
        (WebInspector.ContentFlow.prototype.set overset):
        (WebInspector.ContentFlow.prototype.get contentNodes):
        (WebInspector.ContentFlow.prototype.insertContentNodeBefore):
        (WebInspector.ContentFlow.prototype.appendContentNode):
        (WebInspector.ContentFlow.prototype.removeContentNode):
        * UserInterface/DOMTreeManager.js:
        (WebInspector.DOMTreeManager.prototype._createContentFlowFromPayload):
        (WebInspector.DOMTreeManager.prototype._updateContentFlowFromPayload):
        (WebInspector.DOMTreeManager.prototype.regionOversetChanged):
        (WebInspector.DOMTreeManager.prototype.registeredNamedFlowContentElement):
        (WebInspector.DOMTreeManager.prototype.unregisteredNamedFlowContentElement):
        * UserInterface/InspectorBackendCommands.js:

2013-10-25  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: PrettyPrinting tool should have save button
        https://bugs.webkit.org/show_bug.cgi?id=123371

        Reviewed by Timothy Hatcher.

        Add buttons to save as a URL to share or to save/clear to
        localStorage for easier reloads testing local changes.

        * Tools/PrettyPrinting/index.html:

2013-10-25  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Command+Click on url(…) should go to image not source line
        https://bugs.webkit.org/show_bug.cgi?id=123362

        Reviewed by Timothy Hatcher.

        CodeMirror changed "url" from being type "variable-2" to "string-2".

        * UserInterface/CodeMirrorAdditions.js:

2013-10-25  Jessie Berlin  <jberlin@apple.com>

        Ran update-localizable-strings after changes made in r157947.

        Rubber-stamped by Timothy Hatcher.

        * Localizations/en.lproj/localizedStrings.js:

2013-10-24  Mark Rowe  <mrowe@apple.com>

        Remove references to OS X 10.7 from Xcode configuration settings.

        Now that we're not building for OS X 10.7 they're no longer needed.

        Reviewed by Anders Carlsson.

        * Configurations/Base.xcconfig:
        * Configurations/DebugRelease.xcconfig:
        * Configurations/Version.xcconfig:

2013-10-24  Mark Rowe  <mrowe@apple.com>

        <rdar://problem/15312643> Prepare for the mysterious future.

        Reviewed by David Kilzer.

        * Configurations/Base.xcconfig:
        * Configurations/DebugRelease.xcconfig:
        * Configurations/Version.xcconfig:

2013-10-24  Timothy Hatcher  <timothy@apple.com>

        Allow editing CSS resources after they have been pretty printed.

        https://bugs.webkit.org/show_bug.cgi?id=123297

        Reviewed by Joseph Pecoraro.

        * UserInterface/TextEditor.js:
        (WebInspector.TextEditor): Remove the need for _readOnly.
        (WebInspector.TextEditor.prototype.set readOnly): Set CodeMirror readOnly directly.
        (WebInspector.TextEditor.prototype.set formatted): Don't call _updateCodeMirrorReadOnly.
        (WebInspector.TextEditor.prototype._updateCodeMirrorReadOnly): Removed.
        (WebInspector.TextEditor.prototype._contentChanged): Clear _formatted and _formatterSourceMap
        on edit and notify the delegate and fire the FormattingDidChange event.

2013-10-24  Timothy Hatcher  <timothy@apple.com>

        Adjust the precision of byte strings in Web Inspector.

        https://bugs.webkit.org/show_bug.cgi?id=123281

        Reviewed by Joseph Pecoraro.

        * UserInterface/Utilities.js:
        (Number.bytesToString): More precision for MB and less precision for 10..1023 KB.

2013-10-24  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: Add a way to test the Manager and model classes
        https://bugs.webkit.org/show_bug.cgi?id=123223

        Reviewed by Timothy Hatcher.

        Moved some global functions out of Main.js, so that they can be used in the 
        layout tests without including Main.js.

        * UserInterface/Main.html: Referenced the new JS files.
        * UserInterface/Main.js:
        * UserInterface/MessageDispatcher.js: Added.
        (WebInspector.dispatchNextQueuedMessageFromBackend):
        (WebInspector.dispatchMessageFromBackend):
        * UserInterface/URLUtilities.js: Added.
        (removeURLFragment):
        (relativePath):
        (parseURL):
        (absoluteURL):
        (parseLocationQueryParameters):
        (parseQueryString):
        (WebInspector.displayNameForURL):
        (WebInspector.displayNameForHost):
        * UserInterface/Utilities.js:

2013-10-21  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: [CSS Regions] Flows are not loading if you refresh the page several times
        https://bugs.webkit.org/show_bug.cgi?id=123123

        Reviewed by Joseph Pecoraro.

        There was a typo in the code where an exception was thrown because "flowKey" was undefined.

        * UserInterface/DOMTree.js:
        (WebInspector.DOMTree.prototype._contentFlowListWasUpdated):

2013-10-21  Oliver Hunt  <oliver@apple.com>

        Restore accidentally removed files.

        * UserInterface/GoToLineDialog.css: Added.
        (.go-to-line-dialog):
        (.go-to-line-dialog > div):
        (.go-to-line-dialog > div > input):
        (.go-to-line-dialog > div > input::-webkit-input-placeholder):
        (.go-to-line-dialog > div > img):
        (.go-to-line-dialog > div > img:active):
        (.go-to-line-dialog.non-empty > div > img):
        * UserInterface/GoToLineDialog.js: Added.
        (WebInspector.GoToLineDialog):
        (WebInspector.GoToLineDialog.prototype.present):
        (WebInspector.GoToLineDialog.prototype.dismiss):
        (WebInspector.GoToLineDialog.prototype.handleEvent):
        (WebInspector.GoToLineDialog.prototype._handleInputEvent):
        (WebInspector.GoToLineDialog.prototype._handleKeydownEvent):
        (WebInspector.GoToLineDialog.prototype._handleBlurEvent):
        (WebInspector.GoToLineDialog.prototype._handleMousedownEvent):
        (WebInspector.GoToLineDialog.prototype._handleClickEvent):
        (WebInspector.GoToLineDialog.prototype._clear):
        * UserInterface/Images/CloseWhite.svg: Added.

2013-10-18  Alexandru Chiculita  <achicu@adobe.com>

        Web Inspector: CSS Regions: Add the list of flows in the FrameTreeElement
        https://bugs.webkit.org/show_bug.cgi?id=122924

        Reviewed by Timothy Hatcher.

        Added code to collect the flows from the backend into the DOMTree object
        on the frontend. Added ContentFlow to represent the flows on the frontend
        side and created ContentFlowTreeElement to display the flows in the FrameTreeElement.

        * Localizations/en.lproj/localizedStrings.js:
        * Scripts/copy-user-interface-resources.sh:
        * UserInterface/CSSObserver.js:
        (WebInspector.CSSObserver.prototype.namedFlowCreated):
        (WebInspector.CSSObserver.prototype.namedFlowRemoved):
        (WebInspector.CSSObserver.prototype.regionLayoutUpdated):
        (WebInspector.CSSObserver.prototype.regionOversetChanged):
        * UserInterface/ContentFlow.js: Added.
        (WebInspector.ContentFlow):
        (WebInspector.ContentFlow.prototype.get id):
        (WebInspector.ContentFlow.prototype.get documentNodeIdentifier):
        (WebInspector.ContentFlow.prototype.get name):
        (WebInspector.ContentFlow.prototype.get overset):
        (WebInspector.ContentFlow.prototype.set overset):
        * UserInterface/ContentFlowIcon.css: Added.
        (.content-flow-icon .icon):
        * UserInterface/ContentFlowTreeElement.js: Added.
        (WebInspector.ContentFlowTreeElement):
        * UserInterface/DOMTree.js:
        (WebInspector.DOMTree):
        (WebInspector.DOMTree.prototype.get flowMap):
        (WebInspector.DOMTree.prototype.get flowsCount):
        (WebInspector.DOMTree.prototype._framePageExecutionContextChanged):
        (WebInspector.DOMTree.prototype.requestContentFlowList):
        (WebInspector.DOMTree.prototype._isContentFlowInCurrentDocument):
        (WebInspector.DOMTree.prototype._contentFlowListWasUpdated):
        (WebInspector.DOMTree.prototype._contentFlowWasAdded):
        (WebInspector.DOMTree.prototype._contentFlowWasRemoved):
        * UserInterface/DOMTreeManager.js:
        (WebInspector.DOMTreeManager):
        (WebInspector.DOMTreeManager._flowPayloadHashKey):
        (WebInspector.DOMTreeManager.prototype._buildHighlightConfig):
        (WebInspector.DOMTreeManager.prototype._createContentFlowFromPayload):
        (WebInspector.DOMTreeManager.prototype._updateContentFlowFromPayload):
        (WebInspector.DOMTreeManager.prototype.getNamedFlowCollection):
        (WebInspector.DOMTreeManager.prototype.namedFlowCreated):
        (WebInspector.DOMTreeManager.prototype.namedFlowRemoved):
        (WebInspector.DOMTreeManager.prototype._sendNamedFlowUpdateEvents):
        (WebInspector.DOMTreeManager.prototype.regionLayoutUpdated):
        (WebInspector.DOMTreeManager.prototype.regionOversetChanged):
        * UserInterface/FrameTreeElement.js:
        (WebInspector.FrameTreeElement):
        (WebInspector.FrameTreeElement.prototype.onpopulate):
        (WebInspector.FrameTreeElement.prototype.onexpand):
        (WebInspector.FrameTreeElement.prototype._childContentFlowWasAdded):
        (WebInspector.FrameTreeElement.prototype._childContentFlowWasRemoved):
        (WebInspector.FrameTreeElement.prototype._rootDOMNodeInvalidated):
        (WebInspector.FrameTreeElement.prototype._addChildForRepresentedObject):
        (WebInspector.FrameTreeElement.prototype._removeChildForRepresentedObject):
        (WebInspector.FrameTreeElement.prototype._addTreeElementForRepresentedObject):
        (WebInspector.FrameTreeElement.prototype._compareResourceTreeElements):
        (WebInspector.FrameTreeElement.prototype._insertResourceTreeElement):
        (WebInspector.FrameTreeElement.prototype._parentTreeElementForRepresentedObject):
        (WebInspector.FrameTreeElement.prototype._shouldGroupIntoFolders):
        * UserInterface/Images/ContentFlow.svg: Added.
        * UserInterface/Main.html:
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype._treeElementSelected):

2013-10-17  Antoine Quint  <graouts@apple.com>

        Web Inspector: Go to line keyboard command and dialog
        https://bugs.webkit.org/show_bug.cgi?id=122893

        Reviewed by Timothy Hatcher.

        Add a text input over source code text editors, centered within the width of the editor
        and towards the top of the editor, upon pressing Command+L or Control+G to match the
        behavior in Chrome.

        * Localizations/en.lproj/localizedStrings.js:
        New localized string "Line Number".

        * UserInterface/GoToLineDialog.css: Added.
        Styling for the go-to-line dialog.

        * UserInterface/GoToLineDialog.js: Added.
        (WebInspector.GoToLineDialog):
        Generate the DOM structure for the dialog.

        (WebInspector.GoToLineDialog.prototype.present):
        Present the dialog as a child of a parent element. The dialog's text field automatically
        gets focus and resets to be empty.

        (WebInspector.GoToLineDialog.prototype.dismiss):
        Dismiss the dialog if visible, this triggers the goToLineDialogWasDismissed delegate method.

        (WebInspector.GoToLineDialog.prototype.handleEvent):
        Route the various events registered in the dialog's DOM tree: input, keydown, blur, mousedown
        and click.

        (WebInspector.GoToLineDialog.prototype._handleInputEvent):
        Update the "non-empty" class on the dialog's element depending on the content of the dialog's
        text field. If there is content in the text field, this will make the clear icon visible.

        (WebInspector.GoToLineDialog.prototype._handleKeydownEvent):
        If the Esc. key is pressed when there is text in the dialog's input field, clear the input field.
        If no text is in the input field, dismiss the input field. When the Enter key is pressed, we call
        the isGoToLineDialogValueValid() method on the delegate to figure out if the text field value is
        valid. If it's not, we select the text field value so that it may be easily replaced and play
        en error sound. If it's valid, we call the goToLineDialogValueWasValidated() delegate method
        and dismiss the dialog.

        (WebInspector.GoToLineDialog.prototype._handleBlurEvent):
        Dismiss the dialog when its text field loses focus. This ensures that clicking anywhere outside
        of the dialog removes it from display.

        (WebInspector.GoToLineDialog.prototype._handleMousedownEvent):
        Upon pressing the mouse down on the clear icon, select the entire text field content (matches
        the behavior of Xcode) and prevent the default event action that would blur the text field
        which would dismiss the dialog.

        (WebInspector.GoToLineDialog.prototype._handleClickEvent):
        Clear the content of the dialog's text field upon clicking on its clear button.

        (WebInspector.GoToLineDialog.prototype._clear):
        Reset the dialog's text field's value to an empty string and remove the "non-empty" CSS class name
        controlling the display of the clear button.

        * UserInterface/Images/CloseWhite.svg: Added.
        Variation of the Close.svg icon with a white cross.

        * UserInterface/Main.html:
        Link to the newly added resources for GoToLineDialog.

        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor):
        Register the Command+L and Control+G keyboard shortcuts to bring up the go-to-line dialog.

        (WebInspector.SourceCodeTextEditor.prototype.showGoToLineDialog):
        Method called upon pressing the Command+L and Control+G keyboard shorcuts creating an instance
        of a GoToDialog if necessary, becoming its delegate and presenting it in the context of the
        editor's root element.

        (WebInspector.SourceCodeTextEditor.prototype.isGoToLineDialogValueValid):
        Delegate method called to validate the line number presently set in the go-to-dialog's text field,
        checking it's a number between 1 and the number of lines in the source code.

        (WebInspector.SourceCodeTextEditor.prototype.goToLineDialogValueWasValidated):
        Delegate method called when the line number set in the go-to-dialog's text field has been validated.
        We reveal and select the line at the number provided.

        (WebInspector.SourceCodeTextEditor.prototype.goToLineDialogWasDismissed):
        Ensure the source code editor regains focus upon dismissing the go-to-dialog.

        * UserInterface/TextEditor.js:
        (WebInspector.TextEditor.prototype.revealPosition):
        Add a new opt-in option to not highlight the revealed position. The code in goToLineDialogValueWasValidated()
        sets that new flag to true to avoid an unnecessary highlight on top of the selection.

        (WebInspector.TextEditor.prototype.get lineCount):
        Expose the lineCount() method on the private CodeMirror instance.

        (WebInspector.TextEditor.prototype.focus):
        Expose the focus() method on the private CodeMirror instance.

2013-10-17  Antoine Quint  <graouts@apple.com>

        Web Inspector: logged objects are highlighted in blue
        https://bugs.webkit.org/show_bug.cgi?id=122897

        Reviewed by Joseph Pecoraro.

        Switch to using the system highlight color for the background selected messages.
        Also removing SVG assets no longer needed since we won't be showing white prompt
        and result icons anymore as well as a few generated canvas states.

        * UserInterface/Images/UserInputPromptPreviousSelected.svg: Removed.
        * UserInterface/Images/UserInputResultSelected.svg: Removed.
        * UserInterface/LogContentView.css:
        (.console-messages:focus .console-item.selected):
        * UserInterface/Main.js:
        (WebInspector._generateDisclosureTriangleImages):

2013-10-17  Antoine Quint  <graouts@apple.com>

        Web Inspector: allow front-end to trigger the system beep sound to signal an error
        https://bugs.webkit.org/show_bug.cgi?id=122955

        Reviewed by Timothy Hatcher.

        Provide a stub method for the new InspectorFrontendHost.beep() method.

        * UserInterface/InspectorFrontendHostStub.js:
        (WebInspector.InspectorFrontendHostStub.prototype.beep):

2013-10-15  Antoine Quint  <graouts@apple.com>

        Web Inspector: can't select text inside a text node
        https://bugs.webkit.org/show_bug.cgi?id=122828

        Reviewed by Timothy Hatcher.

        Cancel the default user interaction when a drag action starts if the
        element is being edited.

        * UserInterface/DOMTreeElement.js:
        (WebInspector.DOMTreeElement.prototype.onattach):
        (WebInspector.DOMTreeElement.prototype.handleEvent):

2013-10-10  Brian J. Burg  <burg@cs.washington.edu>

        Web Inspector: content views and managers should save/restore view state.
        https://bugs.webkit.org/show_bug.cgi?id=122546

        To restore the same content view and sidebars when re-opening the
        inspector, a cookie is saved whenever a new content view is shown
        in the main content browser. Previously, this cookie was created
        and restored using navigation sidebar-specific logic. This has two
        major flaws: non-default sidebars for a represented object are not
        restored correctly; and it centralizes storage of view-specific
        state such as subview selections.

        This patch adds ContentView methods for saving a key for the
        view's represented object, and saving/restoring any view-specific
        state as the view is shown. The 'type' field of the cookie
        specifies the manager which deserializes the cookie into a
        represented object.

        Reviewed by Timothy Hatcher.

        * UserInterface/ApplicationCacheFrameContentView.js:
        (WebInspector.ApplicationCacheFrameContentView):
        (WebInspector.ApplicationCacheFrameContentView.prototype.saveToCookie):
        (WebInspector.ApplicationCacheFrameContentView.prototype._maybeUpdate):
        (WebInspector.ApplicationCacheFrameContentView.prototype._updateStatus):
        (WebInspector.ApplicationCacheFrameContentView.prototype.updateStatus):
        (WebInspector.ApplicationCacheFrameContentView.prototype._updateCallback):
        * UserInterface/ApplicationCacheManager.js:
        (WebInspector.ApplicationCacheManager.prototype.networkStateUpdated):
        (WebInspector.ApplicationCacheManager.prototype.applicationCacheStatusUpdated):
        (WebInspector.ApplicationCacheManager.prototype.):
        (WebInspector.ApplicationCacheManager.prototype.requestApplicationCache):
        (WebInspector.ApplicationCacheManager.prototype.objectForCookie):
        (WebInspector.ApplicationCacheManager.prototype._manifestForFrameLoaded):
        (WebInspector.ApplicationCacheManager.prototype._framesWithManifestsLoaded):
        (WebInspector.ApplicationCacheManager.prototype._frameManifestUpdated):
        * UserInterface/BackForwardEntry.js:
        (WebInspector.BackForwardEntry):
        (WebInspector.BackForwardEntry.prototype._restoreFromCookie):
        * UserInterface/ContentBrowser.js:
        (WebInspector.ContentBrowser.prototype.showContentViewForRepresentedObject):
        (WebInspector.ContentBrowser.prototype.showContentView):
        * UserInterface/ContentView.js:
        (WebInspector.ContentView.prototype.saveToCookie):
        (WebInspector.ContentView.prototype.restoreFromCookie):
        * UserInterface/ContentViewContainer.js:
        (WebInspector.ContentViewContainer.prototype.showContentView):
        * UserInterface/CookieStorageContentView.js:
        (WebInspector.CookieStorageContentView.prototype.update):
        (WebInspector.CookieStorageContentView.prototype.saveToCookie):
        (WebInspector.CookieStorageContentView.prototype._rebuildTable):
        (WebInspector.CookieStorageContentView.prototype._filterCookies):
        * UserInterface/DOMStorageContentView.js:
        (WebInspector.DOMStorageContentView.prototype.saveToCookie):
        * UserInterface/DatabaseContentView.js:
        (WebInspector.DatabaseContentView.prototype.saveToCookie):
        (WebInspector.DatabaseContentView.prototype._messagesClicked):
        * UserInterface/DatabaseTableContentView.js:
        (WebInspector.DatabaseTableContentView):
        (WebInspector.DatabaseTableContentView.prototype.saveToCookie):
        * UserInterface/FrameContentView.js:
        (WebInspector.FrameContentView.prototype.saveToCookie):
        (WebInspector.FrameContentView.prototype.restoreFromCookie):
        * UserInterface/FrameResourceManager.js:
        (WebInspector.FrameResourceManager.prototype.objectForCookie):
        * UserInterface/InstrumentSidebarPanel.js:
        (WebInspector.InstrumentSidebarPanel):
        (WebInspector.InstrumentSidebarPanel.prototype.showTimeline):
        (WebInspector.InstrumentSidebarPanel.prototype.shown):
        (WebInspector.InstrumentSidebarPanel.prototype._timelinesTreeElementSelected):
        * UserInterface/Main.js:
        (WebInspector.loaded):
        (WebInspector.contentLoaded):
        (WebInspector.openURL):
        (WebInspector._updateCurrentContentViewCookie):
        (WebInspector._showContentViewForCookie.lastAttemptToRestoreFromCookie):
        (WebInspector._showContentViewForCookie):
        (WebInspector._resolveAndShowPendingContentViewCookie.delayedWork):
        (WebInspector._resolveAndShowPendingContentViewCookie):
        (WebInspector.elementDragStart):
        (WebInspector.elementDragEnd):
        (WebInspector.createMessageTextView):
        (WebInspector.linkifyStringAsFragment):
        * UserInterface/NavigationSidebarPanel.js:
        * UserInterface/ResourceClusterContentView.js:
        (WebInspector.ResourceClusterContentView.prototype.saveToCookie):
        (WebInspector.ResourceClusterContentView.prototype.restoreFromCookie):
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype.showSourceCode):
        (WebInspector.ResourceSidebarPanel.prototype._mainFrameDidChange):
        (WebInspector.ResourceSidebarPanel.prototype._domStorageObjectWasAdded):
        (WebInspector.ResourceSidebarPanel.prototype._databaseWasAdded):
        (WebInspector.ResourceSidebarPanel.prototype._cookieStorageObjectWasAdded):
        (WebInspector.ResourceSidebarPanel.prototype._frameManifestAdded):
        * UserInterface/ScriptContentView.js:
        (WebInspector.ScriptContentView.prototype.saveToCookie):
        (WebInspector.ScriptContentView.prototype.restoreFromCookie):
        * UserInterface/StorageManager.js:
        (WebInspector.StorageManager.prototype.findMatchingObjectInArray):
        (WebInspector.StorageManager.prototype.objectForCookie):
        * UserInterface/TimelineManager.js:
        (WebInspector.TimelineManager):
        (WebInspector.TimelineManager.prototype.get timelines):
        (WebInspector.TimelineManager.prototype.objectForCookie):
        * UserInterface/TimelinesContentView.js:
        (WebInspector.TimelinesContentView.prototype.saveToCookie):
        (WebInspector.TimelinesContentView.prototype.restoreFromCookie):
        (WebInspector.TimelinesContentView.prototype._makeColumnScopeBar):

2013-10-10  Mark Rowe  <mrowe@apple.com>

        <rdar://problem/13341666> WebKit should always build against an SDK.

        Have all projects default to building against the OS X Internal SDK for the Production
        configuration. For the Debug and Release configurations, look for UseInternalSDK.xcconfig
        to determine whether the OS X Internal SDK should be used. If not, use the normal OS X SDK.

        Reviewed by Dan Bernstein.

        * Configurations/Base.xcconfig:
        * Configurations/DebugRelease.xcconfig:

2013-10-04  Antoine Quint  <graouts@apple.com>

        Web Inspector: pressing the Cmd key over a CSS property should underline it immediately (jump to definition mode)
        https://bugs.webkit.org/show_bug.cgi?id=119012

        Reviewed by Joseph Pecoraro.

        We add an "enabled" state to the tokenTrackingController to indicate that we're interested
        in tracking hovered tokens. The tokenTrackingController is now only enabled in the
        CSSStyleDeclarationTextEditor when the Cmd key is pressed and in the SourceCodeTextEditor
        when either the Cmd key is pressed (NonSymbolTokens mode) or when the debugger is paused
        (JavaScriptExpression mode).
        
        The tokenTrackingController is now smarter about how it tracks mouse events when it's enabled,
        tracking "mouseenter" and "mouseleave" events to enable tracking allowing immediate detection of
        tokens being hovered or no longer being hovered even with quick mouse movements. Additioanlly,
        using the new top-level mouse coordinates tracking, we can detect a hovered token as soon as
        it's being enabled to provide instant feedback to the user.

        This new top-level mouse coordinates tracking couple with tracking of modifier keys also fixes
        http://webkit.org/b/119011.

        * UserInterface/CSSStyleDeclarationTextEditor.js:
        (WebInspector.CSSStyleDeclarationTextEditor.prototype._updateJumpToSymbolTrackingMode):
        Highlight the last known hovered candidate's range as soon as the Cmd key is pressed and enable
        the tokenTrackingController if we're dealing with a non-read-only editor. When the Cmd key is
        released, disable the tokenTrackingController.

        * UserInterface/CodeMirrorTokenTrackingController.js:
        (WebInspector.CodeMirrorTokenTrackingController):
        (WebInspector.CodeMirrorTokenTrackingController.prototype.get enabled):
        (WebInspector.CodeMirrorTokenTrackingController.prototype.set enabled):
        New enabled state for the tokenTrackingController which indicates whether it should be tracking
        mouse events to track hovered tokens in the editor. Upon being enabled, the tokenTrackingController
        looks up the mouse coordinates continuously tracked at the window level to check for a token
        at the last known mouse coordinates in case we're already over a token that may be highlighted.

        (WebInspector.CodeMirrorTokenTrackingController.prototype.highlightLastHoveredRange):
        New public method allowing to highlight the last know candidate range, if any. This is used from
        editor code when the Cmd key is pressed and we want to force the last know candidate to be
        highlighted.

        (WebInspector.CodeMirrorTokenTrackingController.prototype._startTracking):
        (WebInspector.CodeMirrorTokenTrackingController.prototype._stopTracking):
        Make these two methods private now that they're automatically called by the "mouseenter" and
        "mouseleave" event handling when we're in the "enabled" state. Additionally, the public
        "tracking" property has been removed since it is no longer useful to the developer.

        (WebInspector.CodeMirrorTokenTrackingController.prototype.handleEvent):
        (WebInspector.CodeMirrorTokenTrackingController.prototype._mouseEntered):
        (WebInspector.CodeMirrorTokenTrackingController.prototype._mouseLeft):
        New handlers for the "mouseenter" and "mouseleave" events enabling tracking of hovered tokens.

        (WebInspector.CodeMirrorTokenTrackingController.prototype._mouseMovedOverEditor):
        (WebInspector.CodeMirrorTokenTrackingController.prototype._updateHoveredTokenInfo):
        Refactor _mouseMovedOverEditor() into two methods with the new _updateHoveredTokenInfo()
        allowing to customize the mouse coordinates to be used since we may call
        _updateHoveredTokenInfo() outside of the context of a mouse event (ie. a keypress event).

        (WebInspector.CodeMirrorTokenTrackingController.prototype._windowLostFocus):
        (WebInspector.CodeMirrorTokenTrackingController.prototype._resetTrackingStates):
        New private method combining all the various states that need to be reset when tracking
        is turned off, including the removal of the highlighted range if any. This is now called
        when the window loses focus.

        * UserInterface/Main.js:
        (WebInspector.loaded):
        (WebInspector._mouseMoved):
        Add a new window-level "mousemove" event handler to always track mouse coordinates and key modifier
        states. This ensures that we may have the most accurate information possible for key modifiers and
        allow code to query the last recorded mouse position in situations where it wouldn't be possible
        to have dealt with a mouse event, as is the case when the tokenTrackingController just started tracking.

        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor.prototype._updateTokenTrackingControllerEnabled):
        (WebInspector.SourceCodeTextEditor.prototype._debuggerDidPause):
        (WebInspector.SourceCodeTextEditor.prototype._debuggerDidResume):
        (WebInspector.SourceCodeTextEditor.prototype._enableJumpToSymbolTrackingModeSettings):
        (WebInspector.SourceCodeTextEditor.prototype._disableJumpToSymbolTrackingModeSettings):
        Update the "enabled" state on the tokenTrackingController when it may have changed based
        on those two conditions: we should have either an active debugger call frame or the
        Cmd key should have been pressed. This ensures we only track hovered tokens as needed.

        (WebInspector.SourceCodeTextEditor.prototype._updateJumpToSymbolTrackingMode):
        Highlight the last known hovered candidate's range as soon as the Cmd key is pressed.

2013-10-02  Brian J. Burg  <burg@cs.washington.edu>

        Web Inspector: save and restore source positions in back/forward history
        https://bugs.webkit.org/show_bug.cgi?id=122062

        Reviewed by Timothy Hatcher.

        Previously, the back/forward entries comprised of only the content
        views, but not their positions if navigated via hyperlink (i.e.,
        handling script.js:42).  When multiple instances of the same
        content view appeared in the back/forward list, the most recent
        navigation was displayed rather than the linked position.

        We now store context necessary to re-navigate such hyperlinks by
        storing view- specific data inside a cookie object, and invoke a
        supplied callback to take any position initialization actions,
        such as calling TextEditor.revealPosition.  This state is
        encapsulated into BackForwardEntry instances.

        Functions that save and restore scroll positions inside content
        views have been changed to store state in BackForwardEntry
        instances, so multiple scroll positions can be saved for a content
        view appearing in the navigation history more than once.

        * UserInterface/BackForwardEntry.js: Added.
        (WebInspector.BackForwardEntry):
        (WebInspector.BackForwardEntry.prototype.get contentView):
        (WebInspector.BackForwardEntry.prototype.get cookie):
        (WebInspector.BackForwardEntry.prototype.prepareToShow):
        (WebInspector.BackForwardEntry.prototype.prepareToHide):
        (WebInspector.BackForwardEntry.prototype._restoreFromCookie):
        (WebInspector.BackForwardEntry.prototype._restoreScrollPositions):
        (WebInspector.BackForwardEntry.prototype._saveScrollPositions):
        * UserInterface/ContentBrowser.js:
        (WebInspector.ContentBrowser.prototype.showContentView):
        (WebInspector.ContentBrowser.prototype._updateContentViewNavigationItems):
        (WebInspector.ContentBrowser.prototype._updateFindBanner):
        * UserInterface/ContentViewContainer.js:
        (WebInspector.ContentViewContainer.prototype.get currentContentView):
        (WebInspector.ContentViewContainer.prototype.get currentBackForwardEntry):
        (WebInspector.ContentViewContainer.prototype.showContentView):
        (WebInspector.ContentViewContainer.prototype.showBackForwardEntryForIndex):
        (WebInspector.ContentViewContainer.prototype.replaceContentView):
        (WebInspector.ContentViewContainer.prototype.closeAllContentViewsOfPrototype):
        (WebInspector.ContentViewContainer.prototype.closeAllContentViews):
        (WebInspector.ContentViewContainer.prototype.goBack):
        (WebInspector.ContentViewContainer.prototype.goForward):
        (WebInspector.ContentViewContainer.prototype.shown):
        (WebInspector.ContentViewContainer.prototype.hidden):
        (WebInspector.ContentViewContainer.prototype._showEntry):
        (WebInspector.ContentViewContainer.prototype._hideEntry):
        * UserInterface/Main.html:
        * UserInterface/Main.js:
        (WebInspector.openURL):
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype.restoreCallback):
        (WebInspector.ResourceSidebarPanel.prototype.showSourceCode):

2013-10-02  Antoine Quint  <graouts@apple.com>

        Web Inspector: highlight newly added console messages in the Activity Viewer
        https://bugs.webkit.org/show_bug.cgi?id=122093

        Reviewed by Joseph Pecoraro.

        Fade the appropriate console log button in the Activity Viewer for a short duration
        to call attention to it when its count is incremented. The animation may be restarted
        in-flight if the count is incremented as we were pulsing the opacity.

        * UserInterface/DashboardView.css:
        (.toolbar .dashboard > .item.pulsing):
        (@-webkit-keyframes console-item-pulse):
        New pulse animation for a console item in the Activity Viewer, the new "pulsing" CSS
        class is applied in WebInspector.DashboardView.prototype._setConsoleItemValue().

        * UserInterface/DashboardView.js:
        (WebInspector.DashboardView.prototype.set logs):
        (WebInspector.DashboardView.prototype.set issues):
        (WebInspector.DashboardView.prototype.set errors):
        Refactor setters to use the new WebInspector.DashboardView.prototype._setConsoleItemValue()
        method.

        (WebInspector.DashboardView.prototype._setConsoleItemValue):
        We now set the ivar backing console item values in this new refactored method and additionally
        apply an animation to the DOM element for the given item if its value is incremented such that
        it pulses, subtly calling out the developer's attention to it.

        * UserInterface/Utilities.js:
        New Element.prototype.recalculateStyles() method to abstract the hack required to force
        a style recalc on a given element.

2013-10-01  Antoine Quint  <graouts@apple.com>

        Web Inspector: evaluate and show a popover for selected text in JS source when paused
        https://bugs.webkit.org/show_bug.cgi?id=122151

        Reviewed by Joseph Pecoraro.

        Identify if the hovered token is contained within the text selection (if any) and use
        the selection as the hovered expression to allow the user to select text and hover it
        to see what it evaluates to.

        * UserInterface/CodeMirrorTokenTrackingController.js:
        (WebInspector.CodeMirrorTokenTrackingController.prototype.highlightRange):
        Check we're trying to highlight a different range before removing the highlight
        and applying the new one, this prevents the marked text from flashing if it's
        being re-hovered which would easily happen when hovering multiple tokens within
        the same selection.

        (WebInspector.CodeMirrorTokenTrackingController.prototype._processJavaScriptExpression):
        In the case where there is selected text, check whether the hovered token is at least
        partially contained within the selection, and if so use the selection text as the
        hovered expression to evaluate.

2013-10-01  Antoine Quint  <graouts@apple.com>

        Console buttons don’t show after page reload
        https://bugs.webkit.org/show_bug.cgi?id=116515

        Reviewed by Darin Adler.

        The correct display of navigation items in the ContentBrowser is contingent on
        the ContentViewContainer's _backForwardList being up-to-date when the navigation
        items are retrieved from it. However, when the main resource changes (in this case
        the user refreshes the browser), calls are made to ContentViewContainer's
        closeAllContentViewsOfPrototype() which may modify the _backForwardList but doesn't
        necessarily notify of a change to the currentContentView since we may be still showing
        the same view in case it wasn't directly related to the main resource, for instance
        the console log.

        We now check if the _backForwardList is changed as a result of calling
        closeAllContentViewsOfPrototype() and in that case also dispatch the
        CurrentContentViewDidChange event which will restore the correct state
        for the back/forward buttons and navigation items of the navigation bar.

        * UserInterface/ContentViewContainer.js:
        (WebInspector.ContentViewContainer.prototype.closeAllContentViewsOfPrototype):
        Track changes to the _backForwardList and dispatch the CurrentContentViewDidChange
        event in case such changes happened.

2013-09-30  Antoine Quint  <graouts@apple.com>

        Web Inspector: rows in the Layer sidebar panel may have the incorrect background color
        https://bugs.webkit.org/show_bug.cgi?id=122108

        Reviewed by Darin Adler.

        The LayerTreeDataGrid is a custom DataGrid subclass which exposes a .setChildren() method
        used to sort chidren without DOM order manipulation, for performance reason. However, since
        the way the alternating background color is usually implemented is based on the built-in
        CSS pseudo-classes working with DOM order, the background colors of nodes in the LayerTreeDataGrid
        can be incorrect depending on the sort order and the number of nodes. To fix this, we now manually
        set "even" and "odd" CSS classes on those nodes when they're sorted such that we have a chance
        to style them as intended.

        * UserInterface/LayerTreeDataGrid.js:
        (WebInspector.LayerTreeDataGrid.prototype._updateChildren):
        Check if the data grid node index is even or odd and reflect this via an exclusive "even"
        or "odd" CSS class name.

        * UserInterface/LayerTreeSidebarPanel.css:
        (.layer-tree.panel .data-container tbody > tr.even):
        (.layer-tree.panel .data-container tbody > tr.odd):
        Apply alternating colors based on the exclusive "even" and "odd" CSS class names as applied in
        WebInspector.LayerTreeDataGrid.prototype._updateChildren().

2013-09-30  Antoine Quint  <graouts@apple.com>

        Web Inspector: Popover displaying "reasons for compositing" may remain on screen after selected layer is removed
        https://bugs.webkit.org/show_bug.cgi?id=117575

        Ensure the popover attached to the selected data grid node is updated when the
        content or sort order of the Layer sidebar panel is updated.

        Reviewed by Darin Adler.

        * UserInterface/LayerTreeSidebarPanel.js:
        (WebInspector.LayerTreeSidebarPanel.prototype._sortDataGrid):

2013-09-30  Antoine Quint  <graouts@apple.com>

        Web Inspector: nodes can be dragged from the console log
        https://bugs.webkit.org/show_bug.cgi?id=122105

        Reviewed by Darin Adler.

        Catch "dragstart" events targeting nodes hosted in a DOMTreeOutline within the console
        log view and prevent the default logic to trigger so that these nodes can't be dragged
        off the console as it wouldn't make sense to.

        * UserInterface/DOMTreeOutline.js:
        (WebInspector.DOMTreeOutline):
        Create a class property to allow the CSS class name to be used in WebInspector.LogContentView.

        * UserInterface/LogContentView.js:
        (WebInspector.LogContentView):
        (WebInspector.LogContentView.prototype._ondragstart):
        Track the "dragstart" events in their capture phase such that, if the event target is
        a DOM node hosted in a DOMTreeOutline, we can prevent the event from propagating and
        cancel its default behavior such that no dragging at all is performed.

2013-09-26  Brian J. Burg  <burg@cs.washington.edu>

        Web Inspector: dissociate old content views that are spliced from back/forward list
        https://bugs.webkit.org/show_bug.cgi?id=121987

        Reviewed by Timothy Hatcher.

        There was a bug where old back/forward list entries were not being dissociated when
        the newly-shown content view was already in the list. Instead, dissociation should be
        skipped if the old list entry is not already in the list.

        * UserInterface/ContentViewContainer.js:
        (WebInspector.ContentViewContainer.prototype.showContentView):

2013-09-26  Antoine Quint  <graouts@apple.com>

        Web Inspector: Activity viewer not properly reset when reloading
        https://bugs.webkit.org/show_bug.cgi?id=121958

        Reviewed by Darin Adler.

        Reset the resources count and accumulated size when we detect the main frame
        has changed, which will work with documents where there are no resources besides
        frames in which case WebInspector.Frame.Event.AllResourcesRemoved was not fired
        and our counts wouldn't be reset correctly.

        * UserInterface/DashboardManager.js:
        (WebInspector.DashboardManager):
        (WebInspector.DashboardManager.prototype._mainResourceDidChange):

2013-09-26  Antoine Quint  <graouts@apple.com>

        Web Inspector: Keep DOM tree expanded on page reload
        https://bugs.webkit.org/show_bug.cgi?id=121665

        Reviewed by Darin Adler.

        Allow the node that was selected before reloading the page to be selected
        at the page is reloaded. Credit goes to Joseph Pecoraro for the fix.

        * UserInterface/DOMTreeContentView.js:
        (WebInspector.DOMTreeContentView.prototype._rootDOMNodeAvailable.selectNode):

2013-09-24  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Using Breakpoint Actions Breaks iOS inspection
        https://bugs.webkit.org/show_bug.cgi?id=121862

        Reviewed by Timothy Hatcher.

        Only use DebuggerAgent.BreakpointActionType if it is available.
        Otherwise leave options undefined for breakpoints since the backend
        does not support it.

        * UserInterface/DebuggerManager.js:
        (WebInspector.DebuggerManager.prototype._setBreakpoint):

2013-09-24  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Include iOS 7 Inspector.json Version
        https://bugs.webkit.org/show_bug.cgi?id=121852

        Reviewed by Timothy Hatcher.

        * UserInterface/Legacy/7.0/InspectorBackendCommands.js: Added.
        * Versions/Inspector-iOS-7.0.json: Added.

2013-09-24  Mark Rowe  <mrowe@apple.com>

        <rdar://problem/14971518> WebKit should build against the Xcode default toolchain when targeting OS X 10.8

        Reviewed by Dan Bernstein.

        * Configurations/Base.xcconfig:

2013-09-24  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Breakpoint Actions input should disable spellchecking
        https://bugs.webkit.org/show_bug.cgi?id=121846

        Reviewed by Timothy Hatcher.

        * UserInterface/BreakpointActionView.js:

2013-09-21  Timothy Hatcher  <timothy@apple.com>

        Hook up the initiator info and show it in the Resource details sidebar.

        https://bugs.webkit.org/show_bug.cgi?id=121741

        Reviewed by Joseph Pecoraro.

        * UserInterface/FrameResourceManager.js:
        (WebInspector.FrameResourceManager.prototype.resourceRequestWillBeSent):
        (WebInspector.FrameResourceManager.prototype.resourceRequestWasServedFromMemoryCache):
        (WebInspector.FrameResourceManager.prototype._addNewResourceToFrame):
        (WebInspector.FrameResourceManager.prototype._initiatorSourceCodeLocationFromPayload):
        * UserInterface/NetworkObserver.js:
        (WebInspector.NetworkObserver.prototype.requestWillBeSent):
        (WebInspector.NetworkObserver.prototype.requestServedFromMemoryCache):
        * UserInterface/Resource.js:
        (WebInspector.Resource):
        (WebInspector.Resource.prototype.get initiatorSourceCodeLocation):
        * UserInterface/ResourceDetailsSidebarPanel.js:
        (WebInspector.ResourceDetailsSidebarPanel):
        (WebInspector.ResourceDetailsSidebarPanel.prototype._refreshURL):

2013-09-20  Timothy Hatcher  <timothy@apple.com>

        Parse MIME-types and strip them down to the base type when needed.

        The use of charset in a MIME-type interferes with our type maps,
        preventing the right syntax highlighting mode and pretty printing.

        https://bugs.webkit.org/show_bug.cgi?id=121723

        Reviewed by Joseph Pecoraro.

        * UserInterface/ConsolePrompt.js:
        (WebInspector.ConsolePrompt):
        * UserInterface/FontResourceContentView.js:
        * UserInterface/Resource.js:
        (WebInspector.Resource.Type.fromMIMEType):
        (WebInspector.Resource.prototype.get mimeTypeComponents):
        (WebInspector.Resource.prototype.get syntheticMIMEType):
        (WebInspector.Resource.prototype.get contentURL):
        (WebInspector.Resource.prototype.updateForResponse):
        * UserInterface/ResourceDetailsSidebarPanel.js:
        (WebInspector.ResourceDetailsSidebarPanel.prototype._refreshRequestDataSection):
        * UserInterface/SourceMapResource.js:
        (WebInspector.SourceMapResource.prototype.requestContentFromBackend):
        * UserInterface/SyntaxHighlightingSupport.js:
        (WebInspector.syntaxHighlightStringAsDocumentFragment):
        * UserInterface/TextEditor.js:
        (WebInspector.TextEditor.prototype.set mimeType):
        * UserInterface/Utilities.js:
        (parseMIMEType): Added.

2013-09-20  Marcelo Morais  <m.morais@samsung.com>

        Web Inspector: Fix keyboard shortcuts for other platforms
        https://bugs.webkit.org/show_bug.cgi?id=120657

        Reviewed by Timothy Hatcher.

        Handling keyboard shortcuts according to the current platform.

        * UserInterface/InspectorFrontendHostStub.js:
        (.WebInspector.InspectorFrontendHostStub.prototype.loadResourceSynchronously):
        (.WebInspector.InspectorFrontendHostStub.prototype.platform): Added. Return the
        current platform.
        * UserInterface/KeyboardShortcut.js:
        (WebInspector.KeyboardShortcut.Modifier.get CommandOrControl): Added. Created keyboard
        modifier to return Control or Command key according to current platform.
        * UserInterface/ContentBrowser.js:
        (WebInspector.ContentBrowser): Returning Control or Command key for keyboard
        shortcuts according to current platform.
        * UserInterface/DebuggerSidebarPanel.js:
        (WebInspector.DebuggerSidebarPanel): Ditto.
        * UserInterface/FindBanner.js:
        (WebInspector.FindBanner): Ditto.
        * UserInterface/JavaScriptLogViewController.js:
        (WebInspector.JavaScriptLogViewController): Ditto.
        * UserInterface/LogContentView.js:
        (WebInspector.LogContentView): Ditto.
        * UserInterface/Main.js:
        (WebInspector.contentLoaded): Ditto.
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel): Ditto.

2013-09-20  Brent Fulgham  <bfulgham@apple.com>

        [Windows] Unreviewed gardening. Teach WebInspectorUI.vcxproj folder to
        ignore Visual Studio's local user settings file.

        * WebInspectorUI.vcxproj: Added property svn:ignore.

2013-09-17  Gustavo Noronha Silva  <gns@gnome.org>

        [GTK] Cannot find WebInspectorUI/UserInterface/Main.html referenced in GResourceBundle.xml
        https://bugs.webkit.org/show_bug.cgi?id=121405

        Reviewed by Carlos Garcia Campos.

        * GNUmakefile.am: if srcdir == builddir the WebInspectorUI variable that is used both to list
        the dependencies of the GResourceBundle and to normalize the paths added to the XML through sed
        replacement will end up starting with ./, which would be fine if automake did not remove that
        from the paths in the target's dependency. We deal with that by normalizing the path we use to
        take that quirk into account.

2013-09-17  Timothy Hatcher  <timothy@apple.com>

        Clean up the Inspector's WebSocket code and prevent it from dropping messages.

        https://bugs.webkit.org/show_bug.cgi?id=121391

        Reviewed by Joseph Pecoraro.

        * UserInterface/InspectorFrontendHostStub.js:
        (.WebInspector.InspectorFrontendHostStub.prototype.initializeWebSocket): Added. Create the socket
        and call _sendPendingMessagesToBackendIfNeeded.
        (.WebInspector.InspectorFrontendHostStub.prototype.sendMessageToBackend): Store messages as pending
        if the socket isn't ready yet. Call _sendPendingMessagesToBackendIfNeeded.
        (.WebInspector.InspectorFrontendHostStub.prototype._sendPendingMessagesToBackendIfNeeded): Added.
        * UserInterface/Main.js:
        (WebInspector._initializeWebSocketIfNeeded): Move socket creation to initializeWebSocket.

2013-09-16  Timothy Hatcher  <timothy@apple.com>

        Make InspectorTimelineAgent use an enum for the record type instead of a string.

        https://bugs.webkit.org/show_bug.cgi?id=121461

        Reviewed by Joseph Pecoraro.

        * UserInterface/InspectorBackendCommands.js:
        * UserInterface/Legacy/6.0/InspectorBackendCommands.js:
        * UserInterface/TimelineManager.js:
        (WebInspector.TimelineManager.prototype.eventRecorded.processRecord):
        (WebInspector.TimelineManager.prototype.eventRecorded):
        * Versions/Inspector-iOS-6.0.json:

2013-09-16  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: TypeError when updating ResourceTreeElement created in strange order
        https://bugs.webkit.org/show_bug.cgi?id=121382

        Reviewed by Timothy Hatcher.

        Patch by Brian Burg. Fix an uncaught exception that can happen on navigations.

        * UserInterface/ResourceTreeElement.js:
        (WebInspector.ResourceTreeElement.prototype._updateStatus):

2013-09-16  Timothy Hatcher  <timothy@apple.com>

        Make InspectorTypeBuilder generate better enums in C++.

        https://bugs.webkit.org/show_bug.cgi?id=121440

        Reviewed by Joseph Pecoraro.

        * UserInterface/InspectorBackendCommands.js: Updated to make Css be CSS.

2013-09-13  Gustavo Noronha Silva  <gustavo.noronha@collabora.com>

        [GTK] Move to the new web inspector
        https://bugs.webkit.org/show_bug.cgi?id=120647

        Reviewed by Carlos Garcia Campos.

        * GNUmakefile.am: Added. Generate the GResource source and link it into libWebCore.

2013-09-12  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Duplicated color swatches changing autocompletes color names
        https://bugs.webkit.org/show_bug.cgi?id=121265

        Reviewed by Timothy Hatcher.

        CodeMirror bookmarks at position used to be unique but no longer are.
        Define an extension to give us unique bookmarks as we expected, and
        update all the old locations using setBookmark.

        * UserInterface/CSSStyleDeclarationTextEditor.js:
        (WebInspector.CSSStyleDeclarationTextEditor.prototype.didDismissPopover):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype._updateTextMarkers):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype.):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype._createColorSwatches):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype.event.newColorText):
        * UserInterface/CodeMirrorAdditions.js:

2013-09-12  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Update CodeMirror for gutter fix
        https://bugs.webkit.org/show_bug.cgi?id=121262

        Update CodeMirror to 757944449 to fix gutter click issue:
        <https://github.com/marijnh/CodeMirror/issues/1807>

        Reviewed by Timothy Hatcher.

        * Tools/PrettyPrinting/CodeMirrorFormatters.js:
        * Tools/PrettyPrinting/FormatterContentBuilder.js:
        (FormatterContentBuilder.prototype._appendIndent):
        * Tools/PrettyPrinting/codemirror.css:
        * Tools/PrettyPrinting/codemirror.js:
        * Tools/PrettyPrinting/css.js:
        * UserInterface/CodeMirrorAdditions.js:
        * UserInterface/CodeMirrorFormatters.js:
        * UserInterface/DebuggerManager.js:
        (WebInspector.DebuggerManager.prototype.didRemoveBreakpoint):
        (WebInspector.DebuggerManager.prototype._removeBreakpoint):
        * UserInterface/External/CodeMirror/codemirror.css:
        * UserInterface/External/CodeMirror/codemirror.js:
        * UserInterface/External/CodeMirror/coffeescript.js:
        * UserInterface/External/CodeMirror/css.js:
        * UserInterface/External/CodeMirror/less.js:
        * UserInterface/External/CodeMirror/sql.js:
        * UserInterface/TextEditor.js:
        (WebInspector.TextEditor.prototype.hasFormatter):

2013-09-12  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Update License copyrights in minified JavaScript
        https://bugs.webkit.org/show_bug.cgi?id=121264

        Reviewed by Timothy Hatcher.

        * Scripts/copy-user-interface-resources.sh:

2013-09-11  Geoffrey Garen  <ggaren@apple.com>

        Removed some unused functions from the debugger interface
        https://bugs.webkit.org/show_bug.cgi?id=121194

        Reviewed by Joseph Pecoraro.

        We plan to use the "evaluate" API and debugger activation property access for all the features we need.

        * UserInterface/InspectorBackendCommands.js: Updated by script.

2013-09-06  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Download Archive button incorrectly styled when disabled and tree element is not-selected
        https://bugs.webkit.org/show_bug.cgi?id=120866

        Reviewed by Timothy Hatcher.

        * UserInterface/TreeElementStatusButton.css:
        (.item > .status > .status-button.disabled > svg *):

2013-09-06  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Lint JavaScript and CSS for minor issues
        https://bugs.webkit.org/show_bug.cgi?id=120884

        Reviewed by Timothy Hatcher.

        JS, caught a bunch of missing semicolons but at least one possible
        issue with duplicate object literal keys in CSSKeywordCompletions.

        CSS, cause some duplicate properties, an invalid property value,
        and some "0px" => "0" cleanup.

2013-09-05  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Breakpoint Action JS Editor has line wrapping issues with long no-space lines
        https://bugs.webkit.org/show_bug.cgi?id=120822

        Reviewed by Timothy Hatcher.

        * UserInterface/BreakpointActionView.css:
        (.breakpoint-action-eval-editor > .CodeMirror):
        (.breakpoint-action-eval-editor > .CodeMirror-scroll):

2013-09-05  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Edit Breakpoint popover sometimes appears misplaced in top left
        https://bugs.webkit.org/show_bug.cgi?id=120804

        Reviewed by Timothy Hatcher.

        Grab the bounding rect immediately, instead of grabbing it from the element
        after the user has selected the "Edit Breakpoint" context menu item. When
        the popover was misplaced it was when using an element had been removed or
        replaced in the DOM, and caused a bogus bounding client rect.

        * UserInterface/Breakpoint.js:
        (WebInspector.Breakpoint.prototype.editBreakpoint):
        (WebInspector.Breakpoint.prototype._showEditBreakpointPopover):

2013-09-05  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Remove harmless assert, triggered hitting breakpoint in auto prettyprinted code on reload
        https://bugs.webkit.org/show_bug.cgi?id=120332

        Reviewed by Timothy Hatcher.

        * UserInterface/TextEditor.js:

2013-09-05  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Breakpoint Actions
        https://bugs.webkit.org/show_bug.cgi?id=120576

        Reviewed by Timothy Hatcher.

        Give the CodeMirror editor for JavaScript Breakpoint Actions JS Runtime
        completions (like window, document, etc.).

        The logic was inside of JavaScriptLogViewController but was already
        entirely independent. Factor it out into its own class and plug it into
        CodeMirrorCompletionController as a "CompletionsProvider".

        Because the class hooks into a global event to reset some state, make
        it a singleton, so new instances are not leaked.

        * UserInterface/Main.html:
        * UserInterface/Main.js:
        (WebInspector.loaded):
        * UserInterface/RuntimeManager.js: Added.
        (WebInspector.RuntimeManager):
        (WebInspector.RuntimeManager.prototype.evalCallback):
        (WebInspector.RuntimeManager.prototype.evaluateInInspectedWindow):
        Move eval in window to new RuntimeManager. A slightly cleaner place to this
        since it is used both by the console and JS completions provider.

        * UserInterface/CodeMirrorCompletionController.js:
        (WebInspector.CodeMirrorCompletionController):
        (WebInspector.CodeMirrorCompletionController.prototype.setExtendedCompletionProvider):
        (WebInspector.CodeMirrorCompletionController.prototype._completeAtCurrentPosition):
        Allow a completions provider plugin to completions controller. If one
        is available, this supercedes the delegate extend completions path.

        * UserInterface/BreakpointActionView.js:
        * UserInterface/ConsolePrompt.js:
        (WebInspector.ConsolePrompt):
        Use the new JS completions provider to get runtime JS completions.
        NOTE: ConsolePrompt still needs the delegate path for SQL completions.

        * UserInterface/JavaScriptLogViewController.js:
        (WebInspector.JavaScriptLogViewController):
        (WebInspector.JavaScriptLogViewController.prototype.consolePromptTextCommitted):
        * UserInterface/JavaScriptRuntimeCompletionProvider.js: Added.
        (WebInspector.JavaScriptRuntimeCompletionProvider):
        (get WebInspector.JavaScriptRuntimeCompletionProvider.prototype.):
        (get WebInspector.JavaScriptRuntimeCompletionProvider.prototype.completionControllerCompletionsNeeded):
        Move the JS completions code to a new class. No changes needed.

2013-09-05  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Breakpoint Actions
        https://bugs.webkit.org/show_bug.cgi?id=120576

        Reviewed by Timothy Hatcher.

        * UserInterface/Breakpoint.js:
        (WebInspector.Breakpoint):
        (WebInspector.Breakpoint.prototype.get actions):
        (WebInspector.Breakpoint.prototype.get options):
        (WebInspector.Breakpoint.prototype.get info):
        (WebInspector.Breakpoint.prototype._serializableActions):
        Saving, restoring, and serialization.

        (WebInspector.Breakpoint.prototype.createAction):
        (WebInspector.Breakpoint.prototype.recreateAction):
        (WebInspector.Breakpoint.prototype.removeAction):
        (WebInspector.Breakpoint.prototype.breakpointActionDidChange):
        Modifying _actions ivar.

        (WebInspector.Breakpoint.prototype._editBreakpointPopoverContentElement):
        (WebInspector.Breakpoint.prototype._popoverActionsCreateAddActionButton):
        (WebInspector.Breakpoint.prototype._popoverActionsAddActionButtonClicked):
        (WebInspector.Breakpoint.prototype._popoverActionsInsertBreakpointActionView):
        (WebInspector.Breakpoint.prototype.breakpointActionViewAppendActionView):
        (WebInspector.Breakpoint.prototype.breakpointActionViewRemoveActionView):
        (WebInspector.Breakpoint.prototype.breakpointActionViewResized):
        Popover UI containing breakpoint action views and converting to and from
        having no actions.

        (WebInspector.Breakpoint.prototype.willDismissPopover):
        Cleanup some ivars when the popover dismisses.

        * UserInterface/Breakpoint.css:
        (.popover .edit-breakpoint-popover-content.wide):
        Wider setting when there are actions in the popover.

        (.popover .edit-breakpoint-popover-content > table > tr > th):
        Keep the title labels at the top of their section.

        * UserInterface/BreakpointAction.js:
        (WebInspector.BreakpointAction):
        (WebInspector.BreakpointAction.prototype.get breakpoint):
        (WebInspector.BreakpointAction.prototype.get type):
        (WebInspector.BreakpointAction.prototype.get data):
        (WebInspector.BreakpointAction.prototype.set data):
        (WebInspector.BreakpointAction.prototype.get info):
        Very basic BreakpointAction class. Notifies Breakpoint on data changes.
        Type changes are not allowed, instead just create a new BreakpointAction.

        * UserInterface/BreakpointActionView.css: Added.
        (.breakpoint-action-block-header):
        (.breakpoint-action-remove-button):
        (.breakpoint-action-remove-button:active):
        (.breakpoint-action-append-button):
        (.breakpoint-action-block-body):
        (.breakpoint-action-block-body > input):
        (.breakpoint-action-eval-editor):
        (.breakpoint-action-eval-editor > .CodeMirror):
        (.breakpoint-action-eval-editor > .CodeMirror-scroll):
        * UserInterface/BreakpointActionView.js: Added.
        (WebInspector.BreakpointActionView):
        (WebInspector.BreakpointActionView.displayStringForType):
        (WebInspector.BreakpointActionView.prototype.get action):
        (WebInspector.BreakpointActionView.prototype.get element):
        (WebInspector.BreakpointActionView.prototype._pickerChanged):
        (WebInspector.BreakpointActionView.prototype._appendActionButtonClicked):
        (WebInspector.BreakpointActionView.prototype._removeActionButtonClicked):
        (WebInspector.BreakpointActionView.prototype._updateBody.switch.break):
        (WebInspector.BreakpointActionView.prototype._logInputChanged):
        (WebInspector.BreakpointActionView.prototype._codeMirrorBlurred):
        (WebInspector.BreakpointActionView.prototype._codeMirrorViewportChanged):
        UI and form controls for individual breakpoint actions. The view
        wraps a single BreakpointAction, and for any actions that could affect
        other views the delegate is notified.

        * UserInterface/DebuggerManager.js:
        (WebInspector.DebuggerManager):
        (WebInspector.DebuggerManager.prototype._debuggerBreakpointActionType):
        When sending to the backend, make sure to send protocol enums.

        * UserInterface/Popover.js:
        (WebInspector.Popover.prototype.update):
        Update the popover when content changes.

        * UserInterface/Images/BreakpointActionAdd.svg: Added.
        * UserInterface/Images/BreakpointActionRemove.svg: Added.
        * UserInterface/InspectorBackendCommands.js:
        * UserInterface/Main.html:
        * Localizations/en.lproj/localizedStrings.js:
        Misc. New strings, images, includes.

2013-09-03  Antoine Quint  <graouts@apple.com>

        Web Inspector: exceptions triggered from console evaluation do not pause the debugger
        https://bugs.webkit.org/show_bug.cgi?id=120460

        We used to preclude any debugging from errors stemming from code evaluated in the console
        as we would always set the doNotPauseOnExceptionsAndMuteConsole parameter to "false" when
        calling JavaScriptLogViewController._evaluateInInspectedWindow(). However, it is desirable
        to allow debugging code ran from the console.

        We now allow debugging in such a scenario and we filter out call frames coming from the
        Web Inspector injected script as well as the call frame for the console prompt such that
        we only pause in the debugger in case the exception is in code under the console prompt
        and not the console code prompt itself.

        Additionally, to prevent stepping out to call frames we may have filtered out, we disable
        the "step out" button in cases where there are no further frames in the frontend to go out to.

        Reviewed by Timothy Hatcher.

        * UserInterface/DebuggerManager.js:
        (WebInspector.DebuggerManager.prototype.debuggerDidPause):
        Filter out call frames that have a URL coming from Web Inspector injected script by looking
        for a URL starting with the "__WebInspector" prefix. If we determine that there are no call
        frames left after filtering, we resume code evaluation such that we only pause in the debugger
        when the exception is in code evluated under the console prompt.

        * UserInterface/DebuggerSidebarPanel.js:
        (WebInspector.DebuggerSidebarPanel):
        (WebInspector.DebuggerSidebarPanel.prototype._debuggerDidPause):
        (WebInspector.DebuggerSidebarPanel.prototype._debuggerActiveCallFrameDidChange):
        Monitor any change to the active call frame such that we may tie the state of the
        "step out" button to the availability of a call frame to step out to in the filtered
        list set on the DebuggerManager.

        * UserInterface/JavaScriptLogViewController.js:
        (WebInspector.JavaScriptLogViewController.prototype.consolePromptTextCommitted):
        Set the doNotPauseOnExceptionsAndMuteConsole to "false" when calling _evaluateInInspectedWindow()
        in order to allow pausing on exceptions coming from code evalued in the console. Also, explicitly
        set a sourceURL for the script to evaluate such that we may identify its origin when filtering
        call frames stemming from inspector code.

        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel.prototype._scriptWasAdded):
        Filter out any script resource starting with the Web Inspector-specific "__WebInspector" prefix
        so that injected script does not show up.

2013-08-30  Brent Fulgham  <bfulgham@apple.com>

        [Windows] Correct windows build. Get rid of unnecessary pre-build step. We don't build anything
        in this project, just copy some files into the WebKit resource folder. This was fooling the
        build system into thinking something failed, resulting in a build error.

        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj: Remove reference to WebInspectorUIPreBuild.cmd
        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj.filters:
        * WebInspectorUI.vcxproj/WebInspectorUIPreBuild.cmd: Removed.

2013-08-30  Brent Fulgham  <bfulgham@apple.com>

        [Windows] Build correction after dependency change.

        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj: Remove circular dependency on
        WebKit, and control this at the solution level. The prior change broke external
        builders.

2013-08-30  Brent Fulgham  <bfulgham@apple.com>

        [Windows] Unreviewed build gardening.

        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj: Adjust build dependencies so
        that WebInspectorUI 'builds' after WebKit so that the expected resource directory
        structure is always in place.

2013-08-30  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Breakpoints should have Automatically Continue Option
        https://bugs.webkit.org/show_bug.cgi?id=120187

        Reviewed by Timothy Hatcher.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/Breakpoint.css:
        (#edit-breakpoint-popoover-auto-continue):
        Misc. changes for UI.

        * UserInterface/Breakpoint.js:
        (WebInspector.Breakpoint):
        (WebInspector.Breakpoint.prototype.get autoContinue):
        (WebInspector.Breakpoint.prototype.set autoContinue):
        (WebInspector.Breakpoint.prototype.get options):
        (WebInspector.Breakpoint.prototype.get info):
        General maintenance of the autoContinue state.

        (WebInspector.Breakpoint.prototype._popoverToggleEnabledCheckboxChanged):
        (WebInspector.Breakpoint.prototype._popoverToggleAutoContinueCheckboxChanged):
        (WebInspector.Breakpoint.prototype._editBreakpointPopoverContentElement):
        Edit Breakpoint UI for setting autoContinue state.

        * UserInterface/InspectorBackend.js:
        (InspectorBackendClass.prototype.registerCommand):
        (InspectorBackendClass.prototype._supports):
        Extension to check if a BackendCommands method supports a particular param.

        * UserInterface/DebuggerManager.js:
        (WebInspector.DebuggerManager):
        (WebInspector.DebuggerManager.prototype._setBreakpoint):
        * UserInterface/InspectorBackendCommands.js:
        Change to backend agent calls for the new protocol API.

2013-08-29  Timothy Hatcher  <timothy@apple.com>

        Make incrementing and decrementing numbers by 0.1 require the control key, and not near zero numbers.

        https://bugs.webkit.org/show_bug.cgi?id=120492
        <rdar://problem/13738935> Incrementing and decrementing numbers near zero is annoying compared to earlier releases

        Reviewed by Joseph Pecoraro.

        * UserInterface/CodeMirrorAdditions.js:
        (alterNumber): Remove near zero check.

2013-08-29  Timothy Hatcher  <timothy@apple.com>

        Only modify numbers if they are identified by CodeMirror as a number.

        https://bugs.webkit.org/show_bug.cgi?id=120484

        <rdar://problem/13877085> REGRESSION: Alt-up and Alt-down don't work when cursor is in unit
        <rdar://problem/13058697> PARITY: Option-Up arrow in "translate3d" should not modify number to make" translate4d"

        Reviewed by Joseph Pecoraro.

        * UserInterface/CodeMirrorAdditions.js:
        (CodeMirror.prototype.alterNumberInRange): Correctly preserve the selection, even if it differs from
        the range passed in.
        (alterNumber): Find number tokens and pass those to alterNumberInRange.
        (alterNumber.findNumberToken): Added. Helper.

2013-08-29  Timothy Hatcher  <timothy@apple.com>

        Make incrementing and decrementing numbers by 0.1 require the control key, and not near zero numbers.

        https://bugs.webkit.org/show_bug.cgi?id=120492
        <rdar://problem/13738935> Incrementing and decrementing numbers near zero is annoying compared to earlier releases

        Reviewed by Joseph Pecoraro.

        * UserInterface/CodeMirrorAdditions.js:
        (alterNumber): Remove near zero check.

2013-08-29  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Download Web Archive of Inspected Page
        https://bugs.webkit.org/show_bug.cgi?id=119774

        Reviewed by Timothy Hatcher.

        * UserInterface/ContentBrowser.js:
        (WebInspector.ContentBrowser.prototype._saveDataToFile):
        Allow a custom save handler which will do all the work.

        * UserInterface/DOMTreeContentView.js:
        (WebInspector.DOMTreeContentView):
        (WebInspector.DOMTreeContentView.prototype.get supportsSave):
        (WebInspector.DOMTreeContentView.prototype.get saveData.saveHandler):
        (WebInspector.DOMTreeContentView.prototype.get saveData):
        Allow Save keyboard shortcut to download an archive viewing the DOM Tree.

        * UserInterface/ResourceTreeElement.js:
        (WebInspector.ResourceTreeElement.prototype._updateStatus):
        * UserInterface/FrameTreeElement.js:
        (WebInspector.FrameTreeElement):
        (WebInspector.FrameTreeElement.prototype.updateStatusForMainFrame):
        (WebInspector.FrameTreeElement.prototype._mainResourceDidChange):
        (WebInspector.FrameTreeElement.prototype._shouldGroupIntoFolders):
        (WebInspector.FrameTreeElement.prototype._reloadPageClicked):
        (WebInspector.FrameTreeElement.prototype._downloadButtonClicked):
        (WebInspector.FrameTreeElement.prototype._updateDownloadButton):
        (WebInspector.FrameTreeElement.prototype._pageArchiveStarted):
        (WebInspector.FrameTreeElement.prototype._pageArchiveEnded):
        Move handling of main frame TreeElement buttons to FrameTreeElement.
        Add a Download button, and enable/disable it appropriately.

        * UserInterface/ResourceTreeElement.css:
        * UserInterface/TreeElementStatusButton.css: Copied from Source/WebInspectorUI/UserInterface/ResourceTreeElement.css.
        (.item > .status > .status-button):
        (.item > .status > .status-button > svg *):
        (.item.selected > .status > .status-button > svg *):
        (.item.selected > .status > .status-button:active > svg *):
        (.item > .status > .status-button.disabled > svg *):
        (.item.selected > .status > .status-button.disabled > svg *):
        * UserInterface/TreeElementStatusButton.js: Added.
        (WebInspector.TreeElementStatusButton):
        (WebInspector.TreeElementStatusButton.prototype.get element):
        (WebInspector.TreeElementStatusButton.prototype.get hidden):
        (WebInspector.TreeElementStatusButton.prototype.set hidden):
        (WebInspector.TreeElementStatusButton.prototype.get enabled):
        (WebInspector.TreeElementStatusButton.prototype.set enabled):
        (WebInspector.TreeElementStatusButton.prototype._clicked):
        Make buttons in the TreeElement status a generic class to share styling
        and handling of the buttons. New "disabled" state with even more
        transparent is used when the page is downloading.

        * UserInterface/Main.html:
        * UserInterface/Main.js:
        (WebInspector.archiveMainFrame):
        (WebInspector.canArchiveMainFrame):
        Generic API for archiving the page and determining if you can archive it.

        * UserInterface/InspectorBackendCommands.js:
        * UserInterface/InspectorFrontendHostStub.js:
        (.WebInspector.InspectorFrontendHostStub.prototype.save):
        * UserInterface/Images/DownloadArrow.svg: Added.
        * Localizations/en.lproj/localizedStrings.js:
        Misc. updates and new files.

2013-08-28  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Give reload icon an :active state and allow CSS to style some SVG images
        https://bugs.webkit.org/show_bug.cgi?id=120384

        Reviewed by Timothy Hatcher.

        The Reload icon is duplicated just to provide different fill colors.
        Convert from using <img> to an <svg> document for this image, and style
        it with CSS. This also makes it trivial to add an :active state.

        * UserInterface/ImageUtilities.js:
        (.invokeCallbackWithDocument):
        (.imageLoad):
        (.imageError):
        (wrappedSVGDocument):
        Helpers for downloading and in memory caching SVG images.

        * UserInterface/Images/Reload.svg:
        * UserInterface/Images/ReloadSelected.svg: Removed.
        Updated Reload image better matches the original design (slightly
        larger). And the duplicate image can be removed.

        * UserInterface/ResourceTreeElement.css:
        (.item.resource > .status > .reload-button):
        (.item.resource > .status > .reload-button > svg *):
        (.item.resource.selected > .status > .reload-button > svg *):
        (.item.resource.selected > .status > .reload-button:active > svg *):
        Different styles, including a new :active style.

        * UserInterface/ResourceTreeElement.js:
        (WebInspector.ResourceTreeElement.prototype._updateStatusWithMainFrameButtons):
        (WebInspector.ResourceTreeElement.prototype._updateStatus):
        Handle updating the main frame's state asynchronously since loading the SVG
        image document is asynchronous.

2013-08-27  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Debugger should have Continue to Here Context Menu
        https://bugs.webkit.org/show_bug.cgi?id=120189

        Reviewed by Timothy Hatcher.

        When paused in the debugger and presenting a Context Menu in the
        gutter, include a "Continue to Here" option. This requires a
        script/line/column location combination.

        * UserInterface/DebuggerManager.js:
        (WebInspector.DebuggerManager.prototype.continueToLocation):
        * UserInterface/Resource.js:
        (WebInspector.Resource.prototype.scriptForLocation):
        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor.prototype.continueToLocation):
        (WebInspector.SourceCodeTextEditor.prototype.textEditorGutterContextMenu):

2013-08-26  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: We should regenerate InspectorBackendCommands.js for Legacy Inspector.json versions
        https://bugs.webkit.org/show_bug.cgi?id=120242

        Reviewed by Timothy Hatcher.

        - Include the iOS 6.0 Inspector.json which maps to Legacy/6.0/InspectorBackendCommands.js.
        - Provide a helper script to regenerate the backend commands file for trunk and Versions.
        - Regenerated file now includes enums and other minor changes.

        * Scripts/update-InspectorBackendCommands.rb: Added.
        * UserInterface/InspectorBackendCommands.js:
        * UserInterface/Legacy/6.0/InspectorBackendCommands.js:
        * Versions/Inspector-iOS-6.0.json: Added.

2013-08-24  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Breakpoints in the editors gutter should have a contextmenu
        https://bugs.webkit.org/show_bug.cgi?id=120169

        Reviewed by Timothy Hatcher.

        Updated CodeMirror now has a gutterContextMenu event. Use that to give
        breakpoint related context menus. Add, Edit, Enable/Disable, Delete, and
        Reveal in Debugger Navigation Sidebar.

        * Localizations/en.lproj/localizedStrings.js:
        "Add Breakpoint", and "Reveal in Debugger Navigation Sidebar".

        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor.prototype.textEditorGutterContextMenu.addBreakpoint):
        (WebInspector.SourceCodeTextEditor.prototype.textEditorGutterContextMenu.revealInSidebar):
        (WebInspector.SourceCodeTextEditor.prototype.textEditorGutterContextMenu.removeBreakpoints):
        (WebInspector.SourceCodeTextEditor.prototype.textEditorGutterContextMenu.toggleBreakpoints):
        (WebInspector.SourceCodeTextEditor.prototype.textEditorGutterContextMenu):
        Show a context menu when clicking on the gutter for 0 breakpoints,
        1 breakpoint, or >1 breakpoints. The only tricky handler is addBreakpoint,
        since that must update the TextEditor for the new breakpoint info.

        * UserInterface/TextEditor.js:
        (WebInspector.TextEditor):
        (WebInspector.TextEditor.prototype._gutterContextMenu):
        Send to delegate if the delegate implements textEditorGutterContextMenu.

2013-08-23  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Fix js minification of updated CodeMirror
        https://bugs.webkit.org/show_bug.cgi?id=120231

        Reviewed by Andy Estes.

        Workaround a jsmin issue with "return //.test();" lines when
        minifying JavaScript in production builds.

        * Scripts/copy-user-interface-resources.sh:
        * UserInterface/External/CodeMirror/codemirror.js:
        (window.CodeMirror):

2013-08-22  Joseph Pecoraro  <pecoraro@apple.com>

        <https://webkit.org/b/120165> Web Inspector: Update CodeMirror to 3.16.1

        Reviewed by Andy Estes.

        * Tools/PrettyPrinting/codemirror.css:
        * Tools/PrettyPrinting/codemirror.js:
        * Tools/PrettyPrinting/css.js:
        * Tools/PrettyPrinting/javascript.js:
        * UserInterface/External/CodeMirror/codemirror.css:
        * UserInterface/External/CodeMirror/codemirror.js:
        * UserInterface/External/CodeMirror/css.js:
        * UserInterface/External/CodeMirror/javascript.js:
        * UserInterface/External/CodeMirror/xml.js:

2013-08-21  Brent Fulgham  <bfulgham@apple.com>

        [Windows] Clean up project file after %PlatformArchitecture% change landed.

        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj: Remove hard-coded settings covered
        by our configuration files.
        * WebInspectorUI.vcxproj/WebInspectorUIPostBuild.cmd: Use the %PlatformArchitecture%
        macro to support 32- and 64-bit builds.

2013-08-20  Brent Fulgham  <bfulgham@apple.com>

        <http://webkit.org/b/120098> [Windows] Enable the New Web Inspector

        Reviewed by Brian Weinstein.

        Add a new project to copy files to the appropriate spots in the
        Windows port.

        * WebInspectorUI.vcxproj: Added.
        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj: Added.
        * WebInspectorUI.vcxproj/WebInspectorUI.vcxproj.filters: Added.
        * WebInspectorUI.vcxproj/WebInspectorUIPostBuild.cmd: Added.
        * WebInspectorUI.vcxproj/WebInspectorUIPreBuild.cmd: Added.

2013-08-19  James Craig  <james@cookiecrook.com>

        <https://webkit.org/b/118106> Web Inspector: AX: Add additional contextual labels for Error/Warnings/Logs that will be spoken for screen readers

        Reviewed by Joseph Pecoraro.

        Changed general console "Output" string to more specific "Error", "Warning", etc for accessibility.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/ConsoleCommandResult.js:
        * UserInterface/ConsoleMessageImpl.js:

2013-08-16  James Craig  <james@cookiecrook.com>

        <https://webkit.org/b/118105> Web Inspector: AX: Add support for ARIA tablists/tabs to inspector tabs

        Reviewed by Joseph Pecoraro.

        Updating accessibility roles and attributes for single-select toolbar item sets.

        * UserInterface/ActivateButtonNavigationItem.js:
        (WebInspector.ActivateButtonNavigationItem):
        (WebInspector.ActivateButtonNavigationItem.prototype.set activated):
        * UserInterface/ActivateButtonToolbarItem.js:
        (WebInspector.ActivateButtonToolbarItem):
        * UserInterface/ButtonToolbarItem.js:
        (WebInspector.ButtonToolbarItem):
        * UserInterface/SidebarPanel.js:
        (WebInspector.SidebarPanel):
        * UserInterface/Toolbar.js:
        (WebInspector.Toolbar):

2013-08-13  Dean Jackson  <dino@apple.com>

        <https://webkit.org/b/119778> Add Canvas protocol observer

        Reviewed by Joseph Pecoraro.

        In preparation for listening to backend events about canvas profiling,
        add a canvas observer.

        * UserInterface/CanvasObserver.js: New empty CanvasObserver object.
        (WebInspector.CanvasObserver):
        (WebInspector.CanvasObserver.prototype.contextCreated):
        (WebInspector.CanvasObserver.prototype.traceLogsRemoved):
        * UserInterface/Main.html:
        * UserInterface/Main.js:
        (WebInspector.loaded):

2013-08-11  Dean Jackson  <dino@apple.com>

        Update localizedStrings - I think I checked in an unmerged version
        in the previous commit.

        * Localizations/en.lproj/localizedStrings.js:

2013-08-11  Dean Jackson  <dino@apple.com>

        Bootstrap canvas profiler
        https://bugs.webkit.org/show_bug.cgi?id=119652
        <rdar://problem/14703665>

        Reviewed by Joseph Pecoraro.

        Add enough to get an empty Canvas profile recording
        and displayed.

        * Localizations/en.lproj/localizedStrings.js: Add canvas strings.
        * UserInterface/CanvasProfileObject.js: Added. Mostly copied from CSS Selector Profiles.
        * UserInterface/CanvasProfileType.js: Added. Ditto.
        * UserInterface/CanvasDataGridNode.js: Added. Ditto.
        * UserInterface/CanvasProfileView.js: Added. Ditto.
        * UserInterface/ContentView.js:
        (WebInspector.ContentView): Add support for the new View type.
        (WebInspector.ContentView.isViewable):
        * UserInterface/InstrumentSidebarPanel.js:
        (WebInspector.InstrumentSidebarPanel): Add support for canvas profiles.
        (WebInspector.InstrumentSidebarPanel.prototype._recordProfileGlyphMousedOver):
        (WebInspector.InstrumentSidebarPanel.prototype._recordProfileGlyphMousedDown):
        (WebInspector.InstrumentSidebarPanel.prototype._recordProfileGlyphClicked):
        (WebInspector.InstrumentSidebarPanel.prototype._profileTypeWasSelected):
        (WebInspector.InstrumentSidebarPanel.prototype._profilesCleared):
        * UserInterface/Main.html: Load the new files.
        * UserInterface/ProfileManager.js: New methods and support for canvas profiles.
        (WebInspector.ProfileManager):
        (WebInspector.ProfileManager.prototype.initialize):
        (WebInspector.ProfileManager.prototype.isProfilingCanvas):
        (WebInspector.ProfileManager.prototype.startProfilingCanvas):
        (WebInspector.ProfileManager.prototype.stopProfilingCanvas):
        (WebInspector.ProfileManager.prototype._checkForInterruptions):
        (WebInspector.ProfileManager.prototype._attemptToResumeProfiling):

2013-08-07  Timothy Hatcher  <timothy@apple.com>

        Switch the generated images off of PDFs and onto SVGs now that bug 119492 is fixed.

        https://bugs.webkit.org/show_bug.cgi?id=118677

        Reviewed by Joseph Pecoraro.

        * UserInterface/ApplicationCacheDetailsSidebarPanel.js:
        (WebInspector.ApplicationCacheDetailsSidebarPanel):
        * UserInterface/CSSStyleDeclarationSection.js:
        (WebInspector.CSSStyleDeclarationSection):
        * UserInterface/CSSStyleDetailsSidebarPanel.js:
        (WebInspector.CSSStyleDetailsSidebarPanel):
        * UserInterface/ContentBrowser.js:
        (WebInspector.ContentBrowser):
        * UserInterface/DOMNodeDetailsSidebarPanel.js:
        (WebInspector.DOMNodeDetailsSidebarPanel):
        * UserInterface/DOMTreeContentView.js:
        (WebInspector.DOMTreeContentView):
        * UserInterface/DataGrid.js:
        (WebInspector.DataGrid.prototype._generateSortIndicatorImagesIfNeeded):
        * UserInterface/DebuggerSidebarPanel.js:
        (WebInspector.DebuggerSidebarPanel):
        * UserInterface/DetailsSection.js:
        (WebInspector.DetailsSection.prototype._generateDisclosureTrianglesIfNeeded):
        * UserInterface/FindBanner.js:
        (WebInspector.FindBanner.prototype._generateButtonsGlyphsIfNeeded):
        * UserInterface/Images/BackArrow.pdf: Removed.
        * UserInterface/Images/BottomUpTree.pdf: Removed.
        * UserInterface/Images/Breakpoints.pdf: Removed.
        * UserInterface/Images/Close.pdf: Removed.
        * UserInterface/Images/Crosshair.pdf: Removed.
        * UserInterface/Images/DisclosureTriangleSmallClosed.pdf: Removed.
        * UserInterface/Images/DisclosureTriangleSmallOpen.pdf: Removed.
        * UserInterface/Images/DisclosureTriangleTinyClosed.pdf: Removed.
        * UserInterface/Images/DisclosureTriangleTinyOpen.pdf: Removed.
        * UserInterface/Images/DockBottom.pdf: Removed.
        * UserInterface/Images/DockRight.pdf: Removed.
        * UserInterface/Images/ForwardArrow.pdf: Removed.
        * UserInterface/Images/GoToArrow.pdf: Removed.
        * UserInterface/Images/LayerBorders.pdf: Removed.
        * UserInterface/Images/LessColumns.pdf: Removed.
        * UserInterface/Images/Locked.pdf: Removed.
        * UserInterface/Images/MoreColumns.pdf: Removed.
        * UserInterface/Images/NavigationItemAngleBrackets.pdf: Removed.
        * UserInterface/Images/NavigationItemBrushAndRuler.pdf: Removed.
        * UserInterface/Images/NavigationItemBug.pdf: Removed.
        * UserInterface/Images/NavigationItemCurleyBraces.pdf: Removed.
        * UserInterface/Images/NavigationItemFile.pdf: Removed.
        * UserInterface/Images/NavigationItemLayers.pdf: Removed.
        * UserInterface/Images/NavigationItemLog.pdf: Removed.
        * UserInterface/Images/NavigationItemMagnifyingGlass.pdf: Removed.
        * UserInterface/Images/NavigationItemStopwatch.pdf: Removed.
        * UserInterface/Images/NavigationItemStorage.pdf: Removed.
        * UserInterface/Images/NavigationItemTrash.pdf: Removed.
        * UserInterface/Images/NavigationItemVariable.pdf: Removed.
        * UserInterface/Images/Pause.pdf: Removed.
        * UserInterface/Images/Percent.pdf: Removed.
        * UserInterface/Images/Plus.pdf: Removed.
        * UserInterface/Images/Resume.pdf: Removed.
        * UserInterface/Images/ShadowDOM.pdf: Removed.
        * UserInterface/Images/SortIndicatorDownArrow.pdf: Removed.
        * UserInterface/Images/SortIndicatorUpArrow.pdf: Removed.
        * UserInterface/Images/SplitToggleDown.pdf: Removed.
        * UserInterface/Images/SplitToggleUp.pdf: Removed.
        * UserInterface/Images/StepInto.pdf: Removed.
        * UserInterface/Images/StepOut.pdf: Removed.
        * UserInterface/Images/StepOver.pdf: Removed.
        * UserInterface/Images/Undock.pdf: Removed.
        * UserInterface/InstrumentSidebarPanel.js:
        (WebInspector.InstrumentSidebarPanel):
        * UserInterface/JavaScriptProfileView.js:
        (WebInspector.JavaScriptProfileView):
        * UserInterface/LayerTreeSidebarPanel.js:
        (WebInspector.LayerTreeSidebarPanel):
        * UserInterface/LogContentView.js:
        (WebInspector.LogContentView):
        * UserInterface/Main.js:
        (WebInspector.contentLoaded):
        (WebInspector._updateDockNavigationItems):
        (WebInspector._generateDisclosureTriangleImages):
        * UserInterface/NavigationSidebarPanel.js:
        (WebInspector.NavigationSidebarPanel.prototype._generateDisclosureTrianglesIfNeeded):
        * UserInterface/ProfileView.js:
        (WebInspector.ProfileView):
        * UserInterface/ResourceDetailsSidebarPanel.js:
        (WebInspector.ResourceDetailsSidebarPanel):
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel):
        * UserInterface/ScopeChainDetailsSidebarPanel.js:
        (WebInspector.ScopeChainDetailsSidebarPanel):
        * UserInterface/ScriptContentView.js:
        (WebInspector.ScriptContentView):
        * UserInterface/TextContentView.js:
        (WebInspector.TextContentView):
        * UserInterface/TextResourceContentView.js:
        (WebInspector.TextResourceContentView):
        * UserInterface/TimelinesContentView.js:

2013-08-08  Dean Jackson  <dino@apple.com>

        Remove use of prefixed transition event
        https://bugs.webkit.org/show_bug.cgi?id=119598

        Reviewed by Joseph Pecoraro.

        "webkitTransitionEnd" -> "transitionend".

        * UserInterface/Popover.js:
        (WebInspector.Popover):
        (WebInspector.Popover.prototype.handleEvent):

2013-08-08  Dean Jackson  <dino@apple.com>

        Unprefix use of transitions in Web Inspector code
        https://bugs.webkit.org/show_bug.cgi?id=119588

        Reviewed by Tim Hatcher.

        Replace "-webkit-transition" with "transition".

        * UserInterface/CSSCompletions.js:
        (WebInspector.CSSCompletions.requestCSSNameCompletions.collectPropertyNameForCodeMirror):
        * UserInterface/FindBanner.css:
        (.find-banner):
        (.find-banner.showing):
        (.supports-find-banner.no-find-banner-transition):
        (.supports-find-banner):
        (.supports-find-banner.showing-find-banner):
        * UserInterface/NetworkTimeline.css:
        (.network-graph-side:hover .network-graph-label):
        * UserInterface/Popover.css:
        (.popover.fade-out):

2013-08-08  Vivek Galatage  <vivek.vg@samsung.com>

        Web Inspector: Use granular DOMStorage modification events to avoid complete DataGrid update.
        https://bugs.webkit.org/show_bug.cgi?id=119541

        Reviewed by Joseph Pecoraro.

        InspectorDOMStorageAgent sends more granular events about the storage modifications.
        Using these would avoid the complete rebuilding of the DataGrid.

        * UserInterface/DOMStorageContentView.js:
        (WebInspector.DOMStorageContentView.prototype.itemsCleared):
        (WebInspector.DOMStorageContentView.prototype.itemRemoved):
        (WebInspector.DOMStorageContentView.prototype.itemAdded):
        (WebInspector.DOMStorageContentView.prototype.itemUpdated):
        * UserInterface/DOMStorageObserver.js:
        (WebInspector.DOMStorageObserver.prototype.domStorageItemsCleared):
        (WebInspector.DOMStorageObserver.prototype.domStorageItemRemoved):
        (WebInspector.DOMStorageObserver.prototype.domStorageItemAdded):
        (WebInspector.DOMStorageObserver.prototype.domStorageItemUpdated):
        * UserInterface/StorageManager.js:
        (WebInspector.StorageManager.prototype.domStorageItemsCleared):
        (WebInspector.StorageManager.prototype.domStorageItemRemoved):
        (WebInspector.StorageManager.prototype.domStorageItemAdded):
        (WebInspector.StorageManager.prototype.domStorageItemUpdated):

2013-08-06  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Remove stale code in ResourceContentView
        https://bugs.webkit.org/show_bug.cgi?id=119527

        The handling of Resource Type changes moved to ResourceClusterContentView,
        this removeEventListener is stale and doesn't do anything anymore.

        Reviewed by Timothy Hatcher.

        * UserInterface/ResourceContentView.js:
        (WebInspector.ResourceContentView.prototype.closed):

2013-08-06  Timothy Hatcher  <timothy@apple.com>

        Convert all Web Inspector PDFs to SVGs.

        Some PDFs need to stay around until bug 119492 is fixed. But the SVGs are there for when they are needed.
        Updated some of the existing SVGs to be consistent with the format of the new SVGs.

        https://bugs.webkit.org/show_bug.cgi?id=118677

        Rubber-stamped by Joseph Pecoraro.

        * UserInterface/BreakpointIcons.css:
        * UserInterface/BreakpointTreeElement.css:
        * UserInterface/CallFrameIcons.css:
        * UserInterface/DatabaseContentView.css:
        * UserInterface/FilterBar.css:
        * UserInterface/HierarchicalPathComponent.css:
        * UserInterface/Images/BackArrow.svg: Added.
        * UserInterface/Images/BottomUpTree.svg: Added.
        * UserInterface/Images/BreakpointButton.pdf: Removed.
        * UserInterface/Images/BreakpointButton.svg: Added.
        * UserInterface/Images/BreakpointInactiveButton.pdf: Removed.
        * UserInterface/Images/BreakpointInactiveButton.svg: Added.
        * UserInterface/Images/Breakpoints.svg: Added.
        * UserInterface/Images/Close.svg: Added.
        * UserInterface/Images/Crosshair.svg: Added.
        * UserInterface/Images/DOMCharacterData.pdf: Removed.
        * UserInterface/Images/DOMCharacterData.svg: Added.
        * UserInterface/Images/DOMComment.pdf: Removed.
        * UserInterface/Images/DOMComment.svg: Added.
        * UserInterface/Images/DOMDocument.pdf: Removed.
        * UserInterface/Images/DOMDocument.svg: Added.
        * UserInterface/Images/DOMDocumentType.pdf: Removed.
        * UserInterface/Images/DOMDocumentType.svg: Added.
        * UserInterface/Images/DOMElement.pdf: Removed.
        * UserInterface/Images/DOMElement.svg: Added.
        * UserInterface/Images/DOMNode.pdf: Removed.
        * UserInterface/Images/DOMNode.svg: Added.
        * UserInterface/Images/DOMTextNode.pdf: Removed.
        * UserInterface/Images/DOMTextNode.svg: Added.
        * UserInterface/Images/DOMTree.pdf: Removed.
        * UserInterface/Images/DOMTree.svg: Added.
        * UserInterface/Images/DisclosureTriangleSmallClosed.svg: Added.
        * UserInterface/Images/DisclosureTriangleSmallOpen.svg: Added.
        * UserInterface/Images/DisclosureTriangleTinyClosed.svg: Added.
        * UserInterface/Images/DisclosureTriangleTinyOpen.svg: Added.
        * UserInterface/Images/DockBottom.svg: Added.
        * UserInterface/Images/DockRight.svg: Added.
        * UserInterface/Images/Error.pdf: Removed.
        * UserInterface/Images/Error.svg: Added.
        * UserInterface/Images/ErrorSmall.pdf: Removed.
        * UserInterface/Images/Errors.svg:
        * UserInterface/Images/ErrorsEnabled.svg:
        * UserInterface/Images/EventListener.pdf: Removed.
        * UserInterface/Images/EventListener.svg: Added.
        * UserInterface/Images/Exception.pdf: Removed.
        * UserInterface/Images/Exception.svg: Added.
        * UserInterface/Images/FilterFieldGlyph.pdf: Removed.
        * UserInterface/Images/FilterFieldGlyph.svg: Added.
        * UserInterface/Images/ForwardArrow.svg: Added.
        * UserInterface/Images/Function.pdf: Removed.
        * UserInterface/Images/Function.svg: Added.
        * UserInterface/Images/GoToArrow.svg: Added.
        * UserInterface/Images/HierarchicalNavigationItemChevron.pdf: Removed.
        * UserInterface/Images/HierarchicalNavigationItemChevron.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner1.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner1.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner10.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner10.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner11.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner11.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner12.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner12.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner2.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner2.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner3.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner3.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner4.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner4.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner5.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner5.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner6.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner6.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner7.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner7.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner8.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner8.svg: Added.
        * UserInterface/Images/IndeterminateProgressSpinner9.pdf: Removed.
        * UserInterface/Images/IndeterminateProgressSpinner9.svg: Added.
        * UserInterface/Images/Issues.svg:
        * UserInterface/Images/IssuesEnabled.svg:
        * UserInterface/Images/LayerBorders.svg: Added.
        * UserInterface/Images/LessColumns.svg: Added.
        * UserInterface/Images/Locked.svg: Added.
        * UserInterface/Images/Logs.svg:
        * UserInterface/Images/Memory.svg:
        * UserInterface/Images/MoreColumns.svg: Added.
        * UserInterface/Images/Native.pdf: Removed.
        * UserInterface/Images/Native.svg: Added.
        * UserInterface/Images/NavigationItemAngleBrackets.svg: Added.
        * UserInterface/Images/NavigationItemBrushAndRuler.svg: Added.
        * UserInterface/Images/NavigationItemBug.svg: Added.
        * UserInterface/Images/NavigationItemCurleyBraces.svg: Added.
        * UserInterface/Images/NavigationItemFile.svg: Added.
        * UserInterface/Images/NavigationItemLayers.svg: Added.
        * UserInterface/Images/NavigationItemLog.svg: Added.
        * UserInterface/Images/NavigationItemMagnifyingGlass.svg: Added.
        * UserInterface/Images/NavigationItemStopwatch.svg: Added.
        * UserInterface/Images/NavigationItemStorage.svg: Added.
        * UserInterface/Images/NavigationItemTrash.svg: Added.
        * UserInterface/Images/NavigationItemVariable.svg: Added.
        * UserInterface/Images/NetworkBarLabelCalloutLeft.pdf: Removed.
        * UserInterface/Images/NetworkBarLabelCalloutLeft.svg: Added.
        * UserInterface/Images/NetworkBarLabelCalloutRight.pdf: Removed.
        * UserInterface/Images/NetworkBarLabelCalloutRight.svg: Added.
        * UserInterface/Images/NetworkBarLabelCalloutWhiteLeft.pdf: Removed.
        * UserInterface/Images/NetworkBarLabelCalloutWhiteLeft.svg: Added.
        * UserInterface/Images/NetworkBarLabelCalloutWhiteRight.pdf: Removed.
        * UserInterface/Images/NetworkBarLabelCalloutWhiteRight.svg: Added.
        * UserInterface/Images/Pause.svg: Added.
        * UserInterface/Images/Percent.svg: Added.
        * UserInterface/Images/Plus.svg: Added.
        * UserInterface/Images/PseudoElement.pdf: Removed.
        * UserInterface/Images/PseudoElement.svg: Added.
        * UserInterface/Images/Reflection.pdf: Removed.
        * UserInterface/Images/Reflection.svg: Added.
        * UserInterface/Images/Reload.svg:
        * UserInterface/Images/ReloadSelected.svg:
        * UserInterface/Images/Request.pdf: Removed.
        * UserInterface/Images/Request.svg: Added.
        * UserInterface/Images/Resources.svg:
        * UserInterface/Images/Response.pdf: Removed.
        * UserInterface/Images/Response.svg: Added.
        * UserInterface/Images/ResultLine.pdf: Removed.
        * UserInterface/Images/ResultLine.svg: Added.
        * UserInterface/Images/Resume.svg: Added.
        * UserInterface/Images/ShadowDOM.svg: Added.
        * UserInterface/Images/SortIndicatorDownArrow.svg: Added.
        * UserInterface/Images/SortIndicatorUpArrow.svg: Added.
        * UserInterface/Images/SourceCode.pdf: Removed.
        * UserInterface/Images/SourceCode.svg: Added.
        * UserInterface/Images/SplitToggleDown.svg: Added.
        * UserInterface/Images/SplitToggleUp.svg: Added.
        * UserInterface/Images/StepInto.svg: Added.
        * UserInterface/Images/StepOut.svg: Added.
        * UserInterface/Images/StepOver.svg: Added.
        * UserInterface/Images/StyleRuleAuthor.pdf: Removed.
        * UserInterface/Images/StyleRuleAuthor.svg: Added.
        * UserInterface/Images/StyleRuleInherited.pdf: Removed.
        * UserInterface/Images/StyleRuleInherited.svg: Added.
        * UserInterface/Images/StyleRuleInheritedElement.pdf: Removed.
        * UserInterface/Images/StyleRuleInheritedElement.svg: Added.
        * UserInterface/Images/StyleRuleInspector.pdf: Removed.
        * UserInterface/Images/StyleRuleInspector.svg: Added.
        * UserInterface/Images/StyleRuleUser.pdf: Removed.
        * UserInterface/Images/StyleRuleUser.svg: Added.
        * UserInterface/Images/StyleRuleUserAgent.pdf: Removed.
        * UserInterface/Images/StyleRuleUserAgent.svg: Added.
        * UserInterface/Images/Time.svg:
        * UserInterface/Images/Undock.svg: Added.
        * UserInterface/Images/UpDownArrows.svg:
        * UserInterface/Images/UserInputPrompt.pdf: Removed.
        * UserInterface/Images/UserInputPrompt.svg: Added.
        * UserInterface/Images/UserInputPromptPrevious.pdf: Removed.
        * UserInterface/Images/UserInputPromptPrevious.svg: Added.
        * UserInterface/Images/UserInputPromptPreviousSelected.pdf: Removed.
        * UserInterface/Images/UserInputPromptPreviousSelected.svg: Added.
        * UserInterface/Images/UserInputResult.pdf: Removed.
        * UserInterface/Images/UserInputResult.svg: Added.
        * UserInterface/Images/UserInputResultSelected.pdf: Removed.
        * UserInterface/Images/UserInputResultSelected.svg: Added.
        * UserInterface/Images/Warning.pdf: Removed.
        * UserInterface/Images/Warning.svg: Added.
        * UserInterface/Images/WarningSmall.pdf: Removed.
        * UserInterface/Images/Weight.svg:
        * UserInterface/IndeterminateProgressSpinner.css:
        * UserInterface/LayerTreeSidebarPanel.css:
        * UserInterface/LogContentView.css:
        * UserInterface/Main.css:
        * UserInterface/NetworkTimeline.css:
        * UserInterface/PathComponentIcons.css:
        * UserInterface/QuickConsole.css:
        * UserInterface/RulesStyleDetailsPanel.css:
        * UserInterface/SearchIcons.css:
        * UserInterface/StyleRuleIcons.css:

2013-07-23  David Farler  <dfarler@apple.com>

        Provide optional OTHER_CFLAGS, OTHER_CPPFLAGS, OTHER_LDFLAGS additions for building with ASAN
        https://bugs.webkit.org/show_bug.cgi?id=117762

        Reviewed by Mark Rowe.

        * Configurations/DebugRelease.xcconfig:
        Add ASAN_OTHER_CFLAGS, CPLUSPLUSFLAGS, LDFLAGS.

2013-07-30  Roland Takács  <rtakacs@inf.u-szeged.hu>

        Web Inspector: doesn't use localized user interface at remote inspector
        https://bugs.webkit.org/show_bug.cgi?id=119252

        Reviewed by Timothy Hatcher.

        Added a flag in order to not use localizedStrings in remote inspector.

        * UserInterface/InspectorFrontendHostStub.js:
        * UserInterface/LoadLocalizedStrings.js:
        * UserInterface/Main.js:
        (WebInspector.UIString):

2013-07-24  Antoine Quint  <graouts@apple.com>

        Web Inspector: control+clicking on a numeric token should not show the context menu
        https://bugs.webkit.org/show_bug.cgi?id=119048

        Reviewed by Timothy Hatcher.

        Track "contextmenu" events when we're hovering a token containing a numeric value
        and call preventDefault() in the event handler to ensure that the context menu does
        not appear.

        * UserInterface/CodeMirrorDragToAlterNumberController.js:
        (WebInspector.CodeMirrorDragToAlterNumberController.prototype.handleEvent):
        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._setTracksMouseClickAndDrag):

2013-07-24  Antoine Quint  <graouts@apple.com>

        Web Inspector: support click-and-drag editing of CSS numeric values
        https://bugs.webkit.org/show_bug.cgi?id=118896

        Reviewed by Timothy Hatcher.

        Add support for adjustment of numeric values in the various CodeMirror editors
        by holding the option key and dragging the mouse. By default, dragging one pixel
        changes the value by 1, but key modifiers allow to customize that behavior by using
        the control key to change the value to 0.1 and the shift key to change the value to 10.

        * UserInterface/CodeMirrorAdditions.js:
        Split adjustNumber() into two methods such that we may use its logic from the
        CodeMirrorDragToAlterNumberController. The new method, CodeMirror.prototype.alterNumberInRange()
        allow to set begin and end CodeMirror positions such that the existing alterNumber()
        can use information based on the current cursor position, and CodeMirrorDragToAlterNumberController
        can use information based on the hovered token.

        * UserInterface/CodeMirrorDragToAlterNumberController.css: Added.
        (.CodeMirror.drag-to-adjust .CodeMirror-lines):
        Set the cursor to "col-resize" when a number token is hovered and the option key
        modifier is pressed.

        * UserInterface/CodeMirrorDragToAlterNumberController.js: Added.
        (WebInspector.CodeMirrorDragToAlterNumberController):
        We define the new "dragToAdjustNumbers" CodeMirror option.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype.set enabled):
        The "enabled" property controls whether the associated CodeMirror instance
        may act upon hovering numeric values to adjust them via a drag interaction.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype.handleEvent):
        Proxy for various event-specific methods to deal with mouse events. We also bind
        the value of the "active" property to the "mouseenter" and "mouseleave" events
        if we're not currently dragging-to-adjust.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._setActive):
        The "active" property is set when the mouse is over the associated CodeMirror
        editor and when it's on we track all "mousemove" events such that we may
        identify tokens containing numeric values. We also start tracking changes to the
        option modifier key press state such that we may change the cursor accordingly.
        We ensure that the CodeMirror instance is not read-only such that we don't
        allow adjustment of numeric values in places where they couldn't be committed.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._setDragging):
        The "dragging" property reflects whether a dragging-to-adjust interaction
        is underway. We call into WebInspector.elementDragStart() and WebInspector.elementDragEnd()
        to set the cursor to "col-resize" for the whole document while tracking mousemove
        and mouseup events at the window level such that we can drag-to-adjust even outside
        of the inspector window.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._setTracksMouseClickAndDrag):
        The "tracksMouseClickAndDrag" property is set to true whenever the controller
        has detected that a token containing a numeric value is being hovered and the
        option modifier key is pressed. This property controls the cursor value for the
        hovered token to reflect that a drag-to-adjust interaction is allowed and tracks
        "mousedown" events for when a dragging interaction may be initiated.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._modifiersDidChange):
        Sets the "tracksMouseClickAndDrag" property depending on the availability of a hovered
        token containing a numeric value and the pressed state of the option modified key.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._mouseMoved):
        Handles "mousemove" events when we're not in the "dragging" state such that we
        check the currently hovered token, if any, to see if it contains a number that
        we may drag-to-adjust. Subsequently, we may enter the "tracksMouseClickAndDrag"
        state.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._mouseWasPressed):
        Handles "mousedown" events during a drag-to-adjust interaction. We simply track
        the current mouse position in the x-axis and enter the "dragging" state.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._mouseWasDragged):
        Handles "mousemove" events when we are in the "dragging" state. We compare the
        current mouse position in the x-axis with the last recoreded value and determine
        the amount by which we should adjust the value, taking into account the shift and
        control modifier keys. We then call into WebInspector.alterNumberInRange() to
        apply the change amount to the associated CodeMirror editor.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._mouseWasReleased):
        Handles "mouseup" events, simply exiting the "dragging" state and resetting other
        parameters we would have customized as a result of the drag-to-adjust interaction.

        (WebInspector.CodeMirrorDragToAlterNumberController.prototype._reset):
        Resetting some parameters we would have customized as a result of the drag-to-adjust
        interaction.

        * UserInterface/Main.html:
        Include the new CodeMirrorDragToAlterNumberController.{js|css} files.

        * UserInterface/Main.js:
        (WebInspector.elementDragStart):
        (WebInspector.elementDragEnd):
        Add an extra parameter to elementDragStart() such that the caller may specify the event
        target for the "mousemove" and "mouseup" events.

2013-07-23  Roland Takacs  <rtakacs@inf.u-szeged.hu>

        WebSocket initialization to use remote inspector
        https://bugs.webkit.org/show_bug.cgi?id=118678

        Reviewed by Timothy Hatcher.

        Add WebSocket initialization and define a 'connect-src' directive in the
        Content-Security-Policy HTTP header to enable the connection.

        * UserInterface/InspectorFrontendHostStub.js:
        (.WebInspector.InspectorFrontendHostStub.prototype.sendMessageToBackend):
        * UserInterface/Main.html:
        * UserInterface/Main.js:
        (WebInspector.loaded):
        (WebInspector._initializeWebSocketIfNeeded.createSocket.WebInspector):
        (WebInspector._initializeWebSocketIfNeeded.createSocket):
        (WebInspector._initializeWebSocketIfNeeded):

2013-07-22  Diego Pino Garcia  <dpino@igalia.com>

        Web Inspector: When right-clicking on a DataGrid column, show editing
        menu option as "Edit <columnName>" instead of just "Edit"
        https://bugs.webkit.org/show_bug.cgi?id=118970

        Reviewed by Timothy Hatcher.

        * Localizations/en.lproj/localizedStrings.js: Add literal "Edit '%s'"
        * UserInterface/DataGrid.js: Change "Edit" for "Edit <columnTitle>"
        (WebInspector.DataGrid.prototype._contextMenuInDataTable):

2013-07-21  Seokju Kwon  <seokju.kwon@gmail.com>

        Web Inspector: Cleanup InspectorFrontendHostStub.js
        https://bugs.webkit.org/show_bug.cgi?id=118959

        Reviewed by Timothy Hatcher.

        Remove some functions because we dont use on New Inspector.

        * UserInterface/InspectorFrontendHostStub.js:
        (.WebInspector.InspectorFrontendHostStub):
        (.WebInspector.InspectorFrontendHostStub.prototype.save):

2013-07-17  Seokju Kwon  <seokju.kwon@gmail.com>

        Web Inspector: Fix a typo in WebInspector.loaded
        https://bugs.webkit.org/show_bug.cgi?id=118834

        Reviewed by Timothy Hatcher.

        * UserInterface/Main.js:
        (WebInspector.loaded):

2013-07-16  Seokju Kwon  <seokju.kwon@gmail.com>

        Web Inspector: InspectorFrontendHost is undefined
        https://bugs.webkit.org/show_bug.cgi?id=118715

        Reviewed by Timothy Hatcher.

        Add InspectorFrontendHostStub.js to New Inspector because of the InspectorFrontendHost initialization.

        * UserInterface/InspectorFrontendHostStub.js: Added.
        (.WebInspector.InspectorFrontendHostStub):
        (.WebInspector.InspectorFrontendHostStub.prototype.platform):
        (.WebInspector.InspectorFrontendHostStub.prototype.port):
        (.WebInspector.InspectorFrontendHostStub.prototype.bringToFront):
        (.WebInspector.InspectorFrontendHostStub.prototype.closeWindow):
        (.WebInspector.InspectorFrontendHostStub.prototype.requestSetDockSide):
        (.WebInspector.InspectorFrontendHostStub.prototype.setAttachedWindowHeight):
        (.WebInspector.InspectorFrontendHostStub.prototype.setAttachedWindowWidth):
        (.WebInspector.InspectorFrontendHostStub.prototype.setToolbarHeight):
        (.WebInspector.InspectorFrontendHostStub.prototype.moveWindowBy):
        (.WebInspector.InspectorFrontendHostStub.prototype.loaded):
        (.WebInspector.InspectorFrontendHostStub.prototype.localizedStringsURL):
        (.WebInspector.InspectorFrontendHostStub.prototype.inspectedURLChanged):
        (.WebInspector.InspectorFrontendHostStub.prototype.copyText):
        (.WebInspector.InspectorFrontendHostStub.prototype.openInNewTab):
        (.WebInspector.InspectorFrontendHostStub.prototype.canSave):
        (.WebInspector.InspectorFrontendHostStub.prototype.save):
        (.WebInspector.InspectorFrontendHostStub.prototype.append):
        (.WebInspector.InspectorFrontendHostStub.prototype.close.cleanup):
        (.WebInspector.InspectorFrontendHostStub.prototype.close):
        (.WebInspector.InspectorFrontendHostStub.prototype.sendMessageToBackend):
        (.WebInspector.InspectorFrontendHostStub.prototype.loadResourceSynchronously):
        * UserInterface/Main.html:

2013-07-15  Seokju Kwon  <seokju.kwon@gmail.com>

        Web Inspector: Remove unused columns from select query in ImageUtilities.js
        https://bugs.webkit.org/show_bug.cgi?id=118694

        Reviewed by Timothy Hatcher.

        * UserInterface/ImageUtilities.js: Remove pixelRatio and formatVersion from select query.

2013-07-15  Timothy Hatcher  <timothy@apple.com>

        Update CodeMirror to 3.14.1.

        https://bugs.webkit.org/show_bug.cgi?id=118605

        Reviewed by Joseph Pecoraro.

        * Scripts/update-codemirror-resources.rb: Updated the list to add closebrackets.js and sorted the files.
        * Tools/PrettyPrinting/CodeMirrorFormatters.js:
        * Tools/PrettyPrinting/Formatter.js:
        * Tools/PrettyPrinting/FormatterContentBuilder.js:
        * Tools/PrettyPrinting/codemirror.css:
        * Tools/PrettyPrinting/codemirror.js:
        * Tools/PrettyPrinting/css.js:
        * Tools/PrettyPrinting/javascript.js:
        * UserInterface/External/CodeMirror/closebrackets.js:
        * UserInterface/External/CodeMirror/codemirror.css:
        * UserInterface/External/CodeMirror/codemirror.js:
        * UserInterface/External/CodeMirror/coffeescript.js:
        * UserInterface/External/CodeMirror/comment.js:
        * UserInterface/External/CodeMirror/css.js:
        * UserInterface/External/CodeMirror/javascript.js:
        * UserInterface/External/CodeMirror/matchbrackets.js:
        * UserInterface/External/CodeMirror/sql.js:
        * UserInterface/External/CodeMirror/xml.js:

2013-07-15  Timothy Hatcher  <timothy@apple.com>

        Make sure to add main resources for sub-frames to the Network Timeline.

        https://bugs.webkit.org/show_bug.cgi?id=118649

        Reviewed by Joseph Pecoraro.

        * UserInterface/TimelineManager.js:
        (WebInspector.TimelineManager.prototype._mainResourceDidChange): Remove the
        call to _clear() and early return for event.target.isMainFrame(). The _clear()
        is already handled if needed by the call to _startAutoRecording(), so it was
        redundant here and caused the erroneous addition of isMainFrame() early return.

2013-07-15  Timothy Hatcher  <timothy@apple.com>

        Properly handle style text changes while the color popover is open.

        https://bugs.webkit.org/show_bug.cgi?id=118575

        Reviewed by Joseph Pecoraro.

        * UserInterface/CSSStyleDeclarationTextEditor.js:
        (WebInspector.CSSStyleDeclarationTextEditor.prototype._colorSwatchClicked.updateCodeMirror):
        The original text marker might have been cleared by a style update, in this case we need to
        find the new color text marker so we know the right range for the new style color text.

2013-07-14  Commit Queue  <commit-queue@webkit.org>

        Unreviewed, rolling out r152598.
        http://trac.webkit.org/changeset/152598
        https://bugs.webkit.org/show_bug.cgi?id=118658

        totally broke the web inspector (JS ERROR: SyntaxError:
        Expected token '}') (Requested by thorton on #webkit).

        * Tools/PrettyPrinting/CodeMirrorFormatters.js:
        * Tools/PrettyPrinting/Formatter.js:
        * Tools/PrettyPrinting/FormatterContentBuilder.js:
        * Tools/PrettyPrinting/codemirror.css:
        (.CodeMirror-scrollbar-filler):
        (.CodeMirror-gutters):
        (.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler):
        (.CodeMirror-widget):
        * Tools/PrettyPrinting/codemirror.js:
        (window.CodeMirror):
        (window.CodeMirror.):
        (.do):
        (moveVisually):
        * Tools/PrettyPrinting/css.js:
        (.):
        (CodeMirror):
        * Tools/PrettyPrinting/javascript.js:
        (.):
        * UserInterface/External/CodeMirror/codemirror.css:
        (.CodeMirror-widget):
        * UserInterface/External/CodeMirror/codemirror.js:
        (window.CodeMirror):
        (window.CodeMirror.):
        * UserInterface/External/CodeMirror/coffeescript.js:
        * UserInterface/External/CodeMirror/comment.js:
        (.):
        * UserInterface/External/CodeMirror/css.js:
        (.):
        (CodeMirror):
        * UserInterface/External/CodeMirror/javascript.js:
        (.):
        * UserInterface/External/CodeMirror/matchbrackets.js:
        (.):
        * UserInterface/External/CodeMirror/sql.js:
        * UserInterface/External/CodeMirror/xml.js:

2013-07-12  Timothy Hatcher  <timothy@apple.com>

        Update CodeMirror to 7f560afa1c (3.14+).

        https://bugs.webkit.org/show_bug.cgi?id=118605

        Reviewed by Sam Weinig.

        * Tools/PrettyPrinting/CodeMirrorFormatters.js:
        * Tools/PrettyPrinting/Formatter.js:
        * Tools/PrettyPrinting/FormatterContentBuilder.js:
        * Tools/PrettyPrinting/codemirror.css:
        * Tools/PrettyPrinting/codemirror.js:
        * Tools/PrettyPrinting/css.js:
        * Tools/PrettyPrinting/javascript.js:
        * UserInterface/External/CodeMirror/codemirror.css:
        * UserInterface/External/CodeMirror/codemirror.js:
        * UserInterface/External/CodeMirror/coffeescript.js:
        * UserInterface/External/CodeMirror/comment.js:
        * UserInterface/External/CodeMirror/css.js:
        * UserInterface/External/CodeMirror/javascript.js:
        * UserInterface/External/CodeMirror/matchbrackets.js:
        * UserInterface/External/CodeMirror/sql.js:
        * UserInterface/External/CodeMirror/xml.js:

2013-07-12  Seokju Kwon  <seokju.kwon@gmail.com>

        Web Inspector: Pass null for sidebarPanels and role in WebInspector.Sidebar()
        https://bugs.webkit.org/show_bug.cgi?id=118589

        Reviewed by Timothy Hatcher.

        sidebarPanels : It is necessary to get correct argument after r152141.
        Without this, error messages can be displayed.
        role : Could pass null for it since default value is "group".

        * UserInterface/Main.js:
        (WebInspector.contentLoaded):

2013-07-03  Timothy Hatcher  <timothy@apple.com>

        Guard remaining calls to decodeURIComponent with a try/catch.

        https://bugs.webkit.org/show_bug.cgi?id=118371

        Reviewed by Joseph Pecoraro.

        * UserInterface/Main.js:
        (WebInspector.displayNameForURL):
        (WebInspector.updateWindowTitle):
        * UserInterface/Utilities.js:
        (arrayResult):
        (queryString):

2013-07-03  Jessie Berlin  <jberlin@apple.com>

        Ran update-webkit-localizable-strings.

        Rubber-stamped by Joseph Pecoraro.

        * Localizations/en.lproj/localizedStrings.js:

2013-06-28  Dean Jackson  <dino@apple.com>

        Update Apple System fonts in auto-complete
        https://bugs.webkit.org/show_bug.cgi?id=118205
        <rdar://problem/14308488>

        Reviewed by Joseph Pecoraro.

        Update for the new Apple System font names, and remove some invalid entries.

        * UserInterface/CSSKeywordCompletions.js: General cleanup. Note that
        "apple-system-short-caption2" looks like it was accidentally omitted. It wasn't :)

2013-06-28  James Craig  <james@cookiecrook.com>

        Web Inspector: AX: VoiceOver speaks all inspector search fields as 'required'
        https://bugs.webkit.org/show_bug.cgi?id=118122

        Reviewed by Timothy Hatcher.

        Removed bogus "required" state, and switched :valid selector to use :not(:placeholder-shown)
        so that screen readers will not indicate a bogus :required/:invalid state to the user.
        Minor cosmetic difference blocked by http://webkit.org/b/118162

        * UserInterface/FilterBar.css:
        (.filter-bar > input[type="search"]:focus):
        (.filter-bar > input[type="search"]:not(:placeholder-shown)):
        * UserInterface/FilterBar.js:
        (WebInspector.FilterBar):
        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel):
        * UserInterface/SearchBar.css:
        (.search-bar > input[type="search"]:focus):
        (.search-bar > input[type="search"]:not(:placeholder-shown)):
        * UserInterface/SearchBar.js:
        (WebInspector.SearchBar):

2013-06-27  James Craig  <james@cookiecrook.com>

        Web Inspector: AX: Add container ARIA roles (toolbar, main, labeled regions, etc.)
        so the layout is more discoverable to screen reader users
        https://bugs.webkit.org/show_bug.cgi?id=118104

        Reviewed by Timothy Hatcher.

        Made the basic layout (toolbar, sidebars, main) of the Web Inspector understandable
        and navigable with VoiceOver.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/ButtonNavigationItem.js:
        * UserInterface/CSSStyleDetailsSidebarPanel.js:
        * UserInterface/DashboardManager.js:
        * UserInterface/Main.js:
        * UserInterface/NavigationBar.js:
        * UserInterface/NavigationItem.js:
        * UserInterface/NavigationSidebarPanel.js:
        * UserInterface/RadioButtonNavigationItem.js:
        * UserInterface/Sidebar.js:
        * UserInterface/SidebarPanel.js:
        * UserInterface/Toolbar.js:

2013-06-27  James Craig  <james@cookiecrook.com>

        Web Inspector: AX: Console log of the Inspector does not announce output for screen readers
        https://bugs.webkit.org/show_bug.cgi?id=115976

        Reviewed by Timothy Hatcher.

        Main console log area (div.console-messages) is now an ARIA live region (role="log")
        so screen readers speak plain text updates.

        Also added contextual labels (e.g. input/output) but speech output verification of
        those is currently blocked by http://webkit.org/b/118096

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/ConsoleCommand.js:
        (WebInspector.ConsoleCommand.prototype.toMessageElement):
        * UserInterface/ConsoleCommandResult.js:
        (WebInspector.ConsoleCommandResult.prototype.toMessageElement):
        * UserInterface/LogContentView.css:
        (@media reader):
        * UserInterface/LogContentView.js:
        (WebInspector.LogContentView):


2013-06-27  Matthew Holden  <jftholden@yahoo.com>

        Web Inspector: Display color picker in popover on color swatch click
        https://bugs.webkit.org/show_bug.cgi?id=117919

        Reviewed by Timothy Hatcher.

        Includes fixes from second code review.

        * Localizations/en.lproj/localizedStrings.js:
        * UserInterface/CSSColorPicker.css: Added.
        (.colorpicker-container):
        (.colorpicker-fill-parent):
        (.colorpicker-top):
        (.colorpicker-color):
        (.colorpicker-bottom span):
        (.colorpicker-text):
        (.colorpicker-color-text-value):
        (.colorpicker-hue):
        (.colorpicker-fill):
        (.colorpicker-range-container):
        (.colorpicker-range-container *):
        (.colorpicker-range-container label):
        (.colorpicker-range-container input):
        (.colorpicker-saturation):
        (.colorpicker-value):
        (.colorpicker-dragger):
        (.colorpicker-slider):
        (.colorpicker-container .swatch):
        (.colorpicker-container .swatch-inner):
        * UserInterface/CSSColorPicker.js: Added.
        (WebInspector.CSSColorPicker.consume):
        (WebInspector.CSSColorPicker.move):
        (WebInspector.CSSColorPicker.start):
        (WebInspector.CSSColorPicker.stop):
        (WebInspector.CSSColorPicker.makeDraggable):
        (WebInspector.CSSColorPicker.hueDrag):
        (WebInspector.CSSColorPicker.colorDragStart):
        (WebInspector.CSSColorPicker.colorDrag):
        (WebInspector.CSSColorPicker.alphaDrag):
        (WebInspector.CSSColorPicker.colorSwatchClicked):
        (WebInspector.CSSColorPicker):
        (WebInspector.CSSColorPicker.prototype.get element):
        (WebInspector.CSSColorPicker.prototype.set color):
        (WebInspector.CSSColorPicker.prototype.get color):
        (WebInspector.CSSColorPicker.prototype.get outputColorFormat):
        (WebInspector.CSSColorPicker.prototype.get colorHueOnly):
        (WebInspector.CSSColorPicker.prototype.set displayText):
        (WebInspector.CSSColorPicker.prototype.shown):
        (WebInspector.CSSColorPicker.prototype._updateHelperLocations):
        (WebInspector.CSSColorPicker.prototype._updateDisplay):
        (WebInspector.CSSColorPicker.hsvaToRGBA):
        (WebInspector.CSSColorPicker.rgbaToHSVA):
        * UserInterface/CSSStyleDeclarationTextEditor.js:
        (WebInspector.CSSStyleDeclarationTextEditor.prototype.didDismissPopover):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype.):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype._createColorSwatches):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype.event.newColorText.colorTextMarker):
        (WebInspector.CSSStyleDeclarationTextEditor.prototype.event.newColorText):
        * UserInterface/Main.html:

2013-06-26  Antoine Quint  <graouts@apple.com>

        Web Inspector: stepping through while paused in debugger makes a popover appear
        https://bugs.webkit.org/show_bug.cgi?id=117994

        There is no obvious need to call tokenTrackingControllerNewHighlightCandidate when the
        active call frame changes and it leads to an extraneous display of the popover.

        Reviewed by Timothy Hatcher.

        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor.prototype._activeCallFrameDidChange):

2013-06-24  Antoine Quint  <graouts@apple.com>

        Web Inspector: WebInspector.displayNameForURL() failure prevents DOM inspection
        https://bugs.webkit.org/show_bug.cgi?id=117927

        Handle possible mis-encoded URI fragments passed to decodeURIComponent() which
        could prevent inspection of the DOM.

        Reviewed by Timothy Hatcher.

        * UserInterface/Main.js:
        (WebInspector.displayNameForURL):

2013-06-17  Darin Adler  <darin@apple.com>

        Sort all the Xcode project files
        https://bugs.webkit.org/show_bug.cgi?id=117696

        Reviewed by Anders Carlsson.

        * WebInspectorUI.xcodeproj/project.pbxproj: Ran the sort-Xcode-project-file script.

2013-06-21  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Uncaught exception when pretty printing WebInspector.Script
        https://bugs.webkit.org/show_bug.cgi?id=117893

        This was an issue with an earlier refactoring. The sourceCode is a Script,
        so replace the non-existent local variable "script" with "this._sourceCode".

        Reviewed by Timothy Hatcher.

        * UserInterface/SourceCodeTextEditor.js:
        (WebInspector.SourceCodeTextEditor.prototype.textEditorUpdatedFormatting):

2013-06-21  Timothy Hatcher  <timothy@apple.com>

        Stop removing and re-adding breakpoints from the backend on reload.

        On reload the sourceCode for breakpoints are nulled out, which fires DisplayLocationDidChange.
        Then the sourceCode is reassociated, firing DisplayLocationDidChange again. In these cases we
        don't need to update the backend, since nothing really changed.

        https://bugs.webkit.org/show_bug.cgi?id=117877

        Reviewed by Joseph Pecoraro.

        * UserInterface/DebuggerManager.js:
        (WebInspector.DebuggerManager.prototype._breakpointDisplayLocationDidChange): Return early when
        _ignoreBreakpointDisplayLocationDidChangeEvent is true.
        (WebInspector.DebuggerManager.prototype.reset): Set _ignoreBreakpointDisplayLocationDidChangeEvent.
        (WebInspector.DebuggerManager.prototype._associateBreakpointsWithSourceCode): Ditto.

2013-06-19  Antoine Quint  <graouts@apple.com>

        Web Inspector: Copying array or object output does not contain values
        https://bugs.webkit.org/show_bug.cgi?id=117669

        ConsoleCommandResult was overriding toClipboardString() but wasn't using the complex code
        in ConsoleMessageImpl's toClipboardString() to provide a nicely formatted output for objects.
        We now use a "clipboarPrefixString" property to customize the prefix used in the clipboard
        and, additionally, only use that prefix if we're copying more than a single message since it's
        the only situation where it's useful to have the ">" or "<" prefix shown. Console messages with
        a log level always print the level and when saving the console log using Cmd+S, all messages
        contain their prefix as well.

        Reviewed by Timothy Hatcher.

        * UserInterface/ConsoleCommand.js:
        (WebInspector.ConsoleCommand.prototype.toClipboardString):
        Handle the new isPrefixOptional argument.

        * UserInterface/ConsoleCommandResult.js:
        (WebInspector.ConsoleCommandResult.prototype.get clipboarPrefixString):
        Provide a custom "< " prefix and set "enforcesClipboardPrefixString" to false such that
        the prefix isn't printed out in situations when it may not.

        * UserInterface/ConsoleMessageImpl.js:
        Set "enforcesClipboardPrefixString" to true since we always want to log the log level
        prefix in all situations.

        (WebInspector.ConsoleMessageImpl.prototype.get clipboarPrefixString):
        Implement this new getter to return our clipboard string such that subclasses may
        customize it.

        (WebInspector.ConsoleMessageImpl.prototype.toClipboardString):
        Take into account both isPrefixOptional and the "enforcesClipboardPrefixString" property
        to only log the prefix if necessary.

        * UserInterface/LogContentView.js:
        (WebInspector.LogContentView.prototype._formatMessagesAsData):
        Make the logging of prefix optional when we have a single message selected and we're
        not saving via Cmd+S.

2013-06-18  Joseph Pecoraro  <pecoraro@apple.com>

        Web Inspector: Infrequent uncaught exception with debugger popovers breaks inspector
        https://bugs.webkit.org/show_bug.cgi?id=117755

        Create the ZERO_SIZE and ZERO_RECT objects after we've setup the Size
        and Rect prototypes, so they get the expected methods. We then need to
        handle the ZERO_RECT case better, and not attempt to draw a background
        in a canvas with a 0 size, which would produce an exception.

        Reviewed by Timothy Hatcher.

        * UserInterface/Geometry.js:
        * UserInterface/Popover.js:
        (WebInspector.Popover.prototype._update):

2013-06-18  Timothy Hatcher  <timothy@apple.com>

        If the tree outline is processing a selection currently, then don't change the selection.

        This is needed to allow breakpoints tree elements to be selected without jumping back to
        selecting the resource tree element.

        https://bugs.webkit.org/show_bug.cgi?id=117746

        Reviewed by Joseph Pecoraro.

        * UserInterface/Main.js:
        (WebInspector._revealAndSelectRepresentedObjectInNavigationSidebar):
        * UserInterface/TreeOutline.js:
        (TreeElement.prototype.select):

2013-06-18  Timothy Hatcher  <timothy@apple.com>

        Update breakpoints to match Xcode 5.

        This updates the breakpoint images, line colors, and moves breakpoints toggle button
        to the Debugger sidebar navigation bar.

        https://bugs.webkit.org/show_bug.cgi?id=117723

        Reviewed by Joseph Pecoraro.

        * Localizations/en.lproj/localizedStrings.js: Updated.
        * UserInterface/DebuggerSidebarPanel.css: Removed custom toggle button rules.
        * UserInterface/DebuggerSidebarPanel.js:
        (WebInspector.DebuggerSidebarPanel):
        (WebInspector.DebuggerSidebarPanel.prototype._breakpointsToggleButtonClicked):
        * UserInterface/Images/Breakpoint.png: Updated.
        * UserInterface/Images/Breakpoints.pdf: Added.
        * UserInterface/Images/Breakpoint@2x.png: Updated.
        * UserInterface/Images/BreakpointButton.pdf: Updated.
        * UserInterface/Images/BreakpointInactive.png: Updated.
        * UserInterface/Images/BreakpointInactive@2x.png: Updated.
        * UserInterface/Images/BreakpointInactiveButton.pdf: Updated.
        * UserInterface/Images/InstructionPointer.png: Updated.
        * UserInterface/Images/InstructionPointer@2x.png: Updated.
        * UserInterface/SourceCodeTextEditor.css:
        (.source-code.text-editor > .CodeMirror .error): Updated background-color and removed box-shadow.
        (.source-code.text-editor > .CodeMirror .warning): Ditto.
        * UserInterface/TextEditor.css:
        (.text-editor > .CodeMirror .has-breakpoint .CodeMirror-linenumber::before): Changed left position to 0.
        (.text-editor > .CodeMirror .execution-line .CodeMirror-linenumber::after): Updated position.
        (.text-editor > .CodeMirror .execution-line): Updated background-color and removed box-shadow.

2013-06-13  Joseph Pecoraro  <pecoraro@apple.com>

        <http://webkit.org/b/117615> Web Inspector: JS PrettyPrinting Should have space between "do" and "{"

        Reviewed by Timothy Hatcher.

        * UserInterface/CodeMirrorFormatters.js:

2013-06-13  Joseph Pecoraro  <pecoraro@apple.com>

        <http://webkit.org/b/117612> Web Inspector: "Search Resource Content" should cancel when I remove all text search text

        Reviewed by Timothy Hatcher.

        * UserInterface/ResourceSidebarPanel.js:
        (WebInspector.ResourceSidebarPanel):
        (WebInspector.ResourceSidebarPanel.prototype._searchFieldInput):

== Rolled over to ChangeLog-2013-06-11 ==
